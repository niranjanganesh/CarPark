//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CarParkWeb.Support {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="supportSoap", Namespace="http://soap.ukvoyager.info/")]
    public partial class support : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback Insert_Incident_RecurrentOperationCompleted;
        
        private System.Threading.SendOrPostCallback Edit_Incident_RecurrentOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_Incident_RecurrentOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Accident_RecurrentOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Incident_RecurrentOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_Incident_RecurrentBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_Incident_RecurrentByDateTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_RecurringBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DateRangeRecurrentOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsHolidayExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_RecurrentDaysOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_StatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsLocationExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_StatusBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotificationsByUserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateNotificationByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_Notification_UtmcEventTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRestoreDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetObjectsForSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeviceHistoryRootLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeviceHistoryRootLink_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_FaultAcknowledgement_DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDayTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeverityOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_FaultTypesByObjectIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_FaultType_DataSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_FaultAcknowledgementSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRegionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckSCNExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DataSourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_SeverityOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_Severity_WithClosuresOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_QualityStatementOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_Passable_RouteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Edit_Passable_RouteOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_Passable_RouteOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_PassableRouteBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_Passable_RouteOperationCompleted;
        
        private System.Threading.SendOrPostCallback isPassableStateChangedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Passable_RouteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Subscription_Alert_IncidentOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_PanelTypeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_DeviceHistoryEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_AccidentWithLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Edit_AccidentWithLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_IncidentWithLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Edit_IncidentWithLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_RoadworksWithLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Edit_RoadworksWithLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_EventWithLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback Edit_EventWithLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAllRoadClosureOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAllDiversionRoutesOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_Diversions_ObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Diversions_ObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Diversions_ObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_Active_FaultsBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_FaultsBySCN_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_Fault_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_Fault_Type_DescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_FaultTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_DataSource_ByFaultOperationCompleted;
        
        private System.Threading.SendOrPostCallback Edit_FaultTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_FaultTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_Fault_Type_SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_Objects_SearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_FaultTypeDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_ShortDescriptionByScnOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_Congestion_Severity_RatingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_datasource_typeidOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DataSourceCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DayTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_SpeedWeightageOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_SpeedWeightageSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback update_SpeedWeightageOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_SpeedWeightageOperationCompleted;
        
        private System.Threading.SendOrPostCallback Check_Existence_SpeedWeightageOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_Severity_RatingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLatestDynamicRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_SeveritySettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback update_SeverityDelayOperationCompleted;
        
        private System.Threading.SendOrPostCallback delete_SeverityDelayOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_Severity_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_Distruption_Severity_DelayOperationCompleted;
        
        private System.Threading.SendOrPostCallback Check_Existence_Distruption_Delay_SettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_AbnormalJourneyTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Save_AbnormalJourneyTimeSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_DescriptiveTermTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Add_SpeedLimitOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_DynamicBySCNForGraphOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_DisruptionDetailsBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpeningTime_ByDayTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpeningTime_ByDayType_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDayType_ExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Check_Date_DateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_DateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_Opening_Time_DateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_NewOpeningDateRangeID_DescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_Opening_Time_DateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_Opening_Time_DayTypeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Edit_Opening_Time_DayTypeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_NewOpening_dropDownSelectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_Default_NewOpening_dropDownSelectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback DateRange_DefinitionBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_AllOpeningTimes_BySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpeningTimes_BySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Opening_TimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Opening_Time_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_Opening_TimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_Opening_Time_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_Day_TypeID_By_DateRangeIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_OpeningTimesBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_TariffsBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_TariffsBySCNDayIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_HourOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_TariffBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_TariffBySCN_For_DateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_OptisObjects_SignTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_ShortDescriptionByTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_Object_DateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_DateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Validate_DateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_DateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_Objects_for_DaterangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_DateRange_CyCleHubListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_DateRange_CycleHubListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_DateRange_EVChargingPointListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_DateRange_EVChargingPointListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_DateRange_PointOfInterestListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_DateRange_PointOfInterestListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_DateRange_Walkers_FacilityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_DateRange_Walkers_FacilityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Insert_DateRange_CarparkListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_DateRange_CarparkListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_NewDateRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_ObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_ObjectsByObjectNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_ANPRDetectorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DataSource_TypeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_Day_TypeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DayTypeIDDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_Severity_TypeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_TypeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_QualityStatementIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_FaultTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_QualityOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_FaultTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_TypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_FaultOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_Fault_FaultIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_Acknowledge_FaultOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_CommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_VMS_Command_Active_MessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_Group_CommandOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_VMS_Group_Command_Active_MessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_HistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_LocationBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_CommandsBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_FaultsBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_FaultTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_QualityOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_TypeIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_Commands_CommandSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_Commands_ParameterSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_HistoryBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Edit_LocationBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_WardNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_Name_ShortDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_OldDataValueMetEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_BySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback Restore_UnMappedSCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_AknowledgementOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_NearByObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_DeviceHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_DeviceHistory_CommandIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_DeviceHistory_LinkedEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DeviceHistoryObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DeviceHistoryTablesByObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DeviceHistoryLinkedEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DeviceHistoryLinkedEntries_NewOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_DeviceHistoryLinkedTreeOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DeviceHistoryEntriesByObjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DeviceHistoryEntriesByLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DeviceHistoryTablesOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_ShortDescriptionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_UserNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DeviceHistorySCNsOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DeviceHistoryCountNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DeviceHistoryNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_DeviceHistory_ManualEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DeviceHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DeviceHistoryCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_EmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListAllEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback NewGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListEmailGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListManualGroupMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEmailGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListEmailByGroupIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckGroupNameExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckEmailExistOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateEmailGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_DeviceHistoryByLogIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_ManualEntryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateManualEntryStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback Get_DeviceHistoryLinkedTreeNewOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_DayTypeSpeedSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_DayTypeSpeedSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_RoadLinkSpeed_HistorySettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_RoadLinkSpeed_HistorySettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_CsvColumnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_CSVScheduleNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_CSVFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_ScheduleByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_ScheduleByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_ScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_ColumnByScheduleIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveCsvColumnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveExportToCSVSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCsvColumnsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateExportToCSVSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Error_LogOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_PredictedTimeInterval_SettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_PredictedTimeInterval_SettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_PredictedTimeInterval_SettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_PredictedTimeInterval_SettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_gazeteer_definitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_RoadType_Configuration_SettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_RoadType_Configuration_SettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ECU_definitionOperationCompleted;
        
        private System.Threading.SendOrPostCallback ECU_definitionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_SubscriptionAlert_IncidentOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_AlertDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_AlertSummarySettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Update_AlertSummarySettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_ObjectDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_ObjectFaultDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_ObjectDynamicDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_SubscriptionAlert_IncidentOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_Quarantine_DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchList_Quarantine_DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTypeDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_Quarantine_DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_QuarantinedataOperationCompleted;
        
        private System.Threading.SendOrPostCallback New_Quarantinedata_byDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback Restore_AirQualityOperationCompleted;
        
        private System.Threading.SendOrPostCallback Restore_QuarantinedataOperationCompleted;
        
        private System.Threading.SendOrPostCallback Delete_All_Invalid_Quarantine_DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback List_Quarantine_Violating_DataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchList_Quality_DataissuesOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_QuarantineDataBySCNOperationCompleted;
        
        private System.Threading.SendOrPostCallback View_QuarantineDataBySCNAndTypeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public support() {
            this.Url = global::CarParkWeb.Properties.Settings.Default.CarParkWeb_Support_support;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event Insert_Incident_RecurrentCompletedEventHandler Insert_Incident_RecurrentCompleted;
        
        /// <remarks/>
        public event Edit_Incident_RecurrentCompletedEventHandler Edit_Incident_RecurrentCompleted;
        
        /// <remarks/>
        public event View_Incident_RecurrentCompletedEventHandler View_Incident_RecurrentCompleted;
        
        /// <remarks/>
        public event Delete_Accident_RecurrentCompletedEventHandler Delete_Accident_RecurrentCompleted;
        
        /// <remarks/>
        public event Delete_Incident_RecurrentCompletedEventHandler Delete_Incident_RecurrentCompleted;
        
        /// <remarks/>
        public event View_Incident_RecurrentBySCNCompletedEventHandler View_Incident_RecurrentBySCNCompleted;
        
        /// <remarks/>
        public event View_Incident_RecurrentByDateTimeCompletedEventHandler View_Incident_RecurrentByDateTimeCompleted;
        
        /// <remarks/>
        public event View_RecurringBySCNCompletedEventHandler View_RecurringBySCNCompleted;
        
        /// <remarks/>
        public event List_DateRangeRecurrentCompletedEventHandler List_DateRangeRecurrentCompleted;
        
        /// <remarks/>
        public event IsHolidayExistsCompletedEventHandler IsHolidayExistsCompleted;
        
        /// <remarks/>
        public event List_RecurrentDaysCompletedEventHandler List_RecurrentDaysCompleted;
        
        /// <remarks/>
        public event List_StatusCompletedEventHandler List_StatusCompleted;
        
        /// <remarks/>
        public event IsLocationExistsCompletedEventHandler IsLocationExistsCompleted;
        
        /// <remarks/>
        public event Update_StatusBySCNCompletedEventHandler Update_StatusBySCNCompleted;
        
        /// <remarks/>
        public event GetNotificationsByUserNameCompletedEventHandler GetNotificationsByUserNameCompleted;
        
        /// <remarks/>
        public event UpdateNotificationByIdCompletedEventHandler UpdateNotificationByIdCompleted;
        
        /// <remarks/>
        public event List_Notification_UtmcEventTypesCompletedEventHandler List_Notification_UtmcEventTypesCompleted;
        
        /// <remarks/>
        public event GetRestoreDetailsCompletedEventHandler GetRestoreDetailsCompleted;
        
        /// <remarks/>
        public event GetObjectsForSettingsCompletedEventHandler GetObjectsForSettingsCompleted;
        
        /// <remarks/>
        public event GetDeviceHistoryRootLinkCompletedEventHandler GetDeviceHistoryRootLinkCompleted;
        
        /// <remarks/>
        public event GetDeviceHistoryRootLink_NewCompletedEventHandler GetDeviceHistoryRootLink_NewCompleted;
        
        /// <remarks/>
        public event Delete_FaultAcknowledgement_DataCompletedEventHandler Delete_FaultAcknowledgement_DataCompleted;
        
        /// <remarks/>
        public event GetDayTypeCompletedEventHandler GetDayTypeCompleted;
        
        /// <remarks/>
        public event GetDataSourceCompletedEventHandler GetDataSourceCompleted;
        
        /// <remarks/>
        public event GetSeverityCompletedEventHandler GetSeverityCompleted;
        
        /// <remarks/>
        public event List_FaultTypesByObjectIdCompletedEventHandler List_FaultTypesByObjectIdCompleted;
        
        /// <remarks/>
        public event List_FaultType_DataSourceCompletedEventHandler List_FaultType_DataSourceCompleted;
        
        /// <remarks/>
        public event New_FaultAcknowledgementSettingsCompletedEventHandler New_FaultAcknowledgementSettingsCompleted;
        
        /// <remarks/>
        public event GetRegionCompletedEventHandler GetRegionCompleted;
        
        /// <remarks/>
        public event CheckSCNExistCompletedEventHandler CheckSCNExistCompleted;
        
        /// <remarks/>
        public event List_DataSourceCompletedEventHandler List_DataSourceCompleted;
        
        /// <remarks/>
        public event List_SeverityCompletedEventHandler List_SeverityCompleted;
        
        /// <remarks/>
        public event List_Severity_WithClosuresCompletedEventHandler List_Severity_WithClosuresCompleted;
        
        /// <remarks/>
        public event List_TypeCompletedEventHandler List_TypeCompleted;
        
        /// <remarks/>
        public event List_QualityStatementCompletedEventHandler List_QualityStatementCompleted;
        
        /// <remarks/>
        public event New_Passable_RouteCompletedEventHandler New_Passable_RouteCompleted;
        
        /// <remarks/>
        public event Edit_Passable_RouteCompletedEventHandler Edit_Passable_RouteCompleted;
        
        /// <remarks/>
        public event List_Passable_RouteCompletedEventHandler List_Passable_RouteCompleted;
        
        /// <remarks/>
        public event View_PassableRouteBySCNCompletedEventHandler View_PassableRouteBySCNCompleted;
        
        /// <remarks/>
        public event Update_Passable_RouteCompletedEventHandler Update_Passable_RouteCompleted;
        
        /// <remarks/>
        public event isPassableStateChangedCompletedEventHandler isPassableStateChangedCompleted;
        
        /// <remarks/>
        public event Delete_Passable_RouteCompletedEventHandler Delete_Passable_RouteCompleted;
        
        /// <remarks/>
        public event Delete_Subscription_Alert_IncidentCompletedEventHandler Delete_Subscription_Alert_IncidentCompleted;
        
        /// <remarks/>
        public event List_PanelTypeIDCompletedEventHandler List_PanelTypeIDCompleted;
        
        /// <remarks/>
        public event New_DeviceHistoryEntryCompletedEventHandler New_DeviceHistoryEntryCompleted;
        
        /// <remarks/>
        public event New_AccidentWithLocationCompletedEventHandler New_AccidentWithLocationCompleted;
        
        /// <remarks/>
        public event Edit_AccidentWithLocationCompletedEventHandler Edit_AccidentWithLocationCompleted;
        
        /// <remarks/>
        public event New_IncidentWithLocationCompletedEventHandler New_IncidentWithLocationCompleted;
        
        /// <remarks/>
        public event Edit_IncidentWithLocationCompletedEventHandler Edit_IncidentWithLocationCompleted;
        
        /// <remarks/>
        public event New_RoadworksWithLocationCompletedEventHandler New_RoadworksWithLocationCompleted;
        
        /// <remarks/>
        public event Edit_RoadworksWithLocationCompletedEventHandler Edit_RoadworksWithLocationCompleted;
        
        /// <remarks/>
        public event New_EventWithLocationCompletedEventHandler New_EventWithLocationCompleted;
        
        /// <remarks/>
        public event Edit_EventWithLocationCompletedEventHandler Edit_EventWithLocationCompleted;
        
        /// <remarks/>
        public event ListAllRoadClosureCompletedEventHandler ListAllRoadClosureCompleted;
        
        /// <remarks/>
        public event ListAllDiversionRoutesCompletedEventHandler ListAllDiversionRoutesCompleted;
        
        /// <remarks/>
        public event New_Diversions_ObjectsCompletedEventHandler New_Diversions_ObjectsCompleted;
        
        /// <remarks/>
        public event Get_Diversions_ObjectsCompletedEventHandler Get_Diversions_ObjectsCompleted;
        
        /// <remarks/>
        public event Delete_Diversions_ObjectsCompletedEventHandler Delete_Diversions_ObjectsCompleted;
        
        /// <remarks/>
        public event View_Active_FaultsBySCNCompletedEventHandler View_Active_FaultsBySCNCompleted;
        
        /// <remarks/>
        public event View_FaultsBySCN_NewCompletedEventHandler View_FaultsBySCN_NewCompleted;
        
        /// <remarks/>
        public event View_Fault_TypeCompletedEventHandler View_Fault_TypeCompleted;
        
        /// <remarks/>
        public event View_Fault_Type_DescriptionCompletedEventHandler View_Fault_Type_DescriptionCompleted;
        
        /// <remarks/>
        public event View_FaultTypeCompletedEventHandler View_FaultTypeCompleted;
        
        /// <remarks/>
        public event View_DataSource_ByFaultCompletedEventHandler View_DataSource_ByFaultCompleted;
        
        /// <remarks/>
        public event Edit_FaultTypeCompletedEventHandler Edit_FaultTypeCompleted;
        
        /// <remarks/>
        public event Delete_FaultTypeCompletedEventHandler Delete_FaultTypeCompleted;
        
        /// <remarks/>
        public event List_Fault_Type_SearchCompletedEventHandler List_Fault_Type_SearchCompleted;
        
        /// <remarks/>
        public event List_Objects_SearchCompletedEventHandler List_Objects_SearchCompleted;
        
        /// <remarks/>
        public event View_FaultTypeDescriptionCompletedEventHandler View_FaultTypeDescriptionCompleted;
        
        /// <remarks/>
        public event Get_ShortDescriptionByScnCompletedEventHandler Get_ShortDescriptionByScnCompleted;
        
        /// <remarks/>
        public event View_Congestion_Severity_RatingsCompletedEventHandler View_Congestion_Severity_RatingsCompleted;
        
        /// <remarks/>
        public event List_datasource_typeidCompletedEventHandler List_datasource_typeidCompleted;
        
        /// <remarks/>
        public event List_DataSourceCategoryCompletedEventHandler List_DataSourceCategoryCompleted;
        
        /// <remarks/>
        public event List_DayTypeCompletedEventHandler List_DayTypeCompleted;
        
        /// <remarks/>
        public event Insert_SpeedWeightageCompletedEventHandler Insert_SpeedWeightageCompleted;
        
        /// <remarks/>
        public event List_SpeedWeightageSettingsCompletedEventHandler List_SpeedWeightageSettingsCompleted;
        
        /// <remarks/>
        public event update_SpeedWeightageCompletedEventHandler update_SpeedWeightageCompleted;
        
        /// <remarks/>
        public event Delete_SpeedWeightageCompletedEventHandler Delete_SpeedWeightageCompleted;
        
        /// <remarks/>
        public event Check_Existence_SpeedWeightageCompletedEventHandler Check_Existence_SpeedWeightageCompleted;
        
        /// <remarks/>
        public event Save_Severity_RatingsCompletedEventHandler Save_Severity_RatingsCompleted;
        
        /// <remarks/>
        public event GetLatestDynamicRecordCompletedEventHandler GetLatestDynamicRecordCompleted;
        
        /// <remarks/>
        public event List_SeveritySettingsCompletedEventHandler List_SeveritySettingsCompleted;
        
        /// <remarks/>
        public event update_SeverityDelayCompletedEventHandler update_SeverityDelayCompleted;
        
        /// <remarks/>
        public event delete_SeverityDelayCompletedEventHandler delete_SeverityDelayCompleted;
        
        /// <remarks/>
        public event List_Severity_TypeCompletedEventHandler List_Severity_TypeCompleted;
        
        /// <remarks/>
        public event New_Distruption_Severity_DelayCompletedEventHandler New_Distruption_Severity_DelayCompleted;
        
        /// <remarks/>
        public event Check_Existence_Distruption_Delay_SettingsCompletedEventHandler Check_Existence_Distruption_Delay_SettingsCompleted;
        
        /// <remarks/>
        public event View_AbnormalJourneyTimeCompletedEventHandler View_AbnormalJourneyTimeCompleted;
        
        /// <remarks/>
        public event Save_AbnormalJourneyTimeSettingsCompletedEventHandler Save_AbnormalJourneyTimeSettingsCompleted;
        
        /// <remarks/>
        public event Get_DescriptiveTermTypeCompletedEventHandler Get_DescriptiveTermTypeCompleted;
        
        /// <remarks/>
        public event Add_SpeedLimitCompletedEventHandler Add_SpeedLimitCompleted;
        
        /// <remarks/>
        public event View_DynamicBySCNForGraphCompletedEventHandler View_DynamicBySCNForGraphCompleted;
        
        /// <remarks/>
        public event View_DisruptionDetailsBySCNCompletedEventHandler View_DisruptionDetailsBySCNCompleted;
        
        /// <remarks/>
        public event OpeningTime_ByDayTypeCompletedEventHandler OpeningTime_ByDayTypeCompleted;
        
        /// <remarks/>
        public event OpeningTime_ByDayType_NewCompletedEventHandler OpeningTime_ByDayType_NewCompleted;
        
        /// <remarks/>
        public event IsDayType_ExistsCompletedEventHandler IsDayType_ExistsCompleted;
        
        /// <remarks/>
        public event Check_Date_DateRangeCompletedEventHandler Check_Date_DateRangeCompleted;
        
        /// <remarks/>
        public event Delete_DateRangeCompletedEventHandler Delete_DateRangeCompleted;
        
        /// <remarks/>
        public event Update_Opening_Time_DateRangeCompletedEventHandler Update_Opening_Time_DateRangeCompleted;
        
        /// <remarks/>
        public event List_NewOpeningDateRangeID_DescriptionCompletedEventHandler List_NewOpeningDateRangeID_DescriptionCompleted;
        
        /// <remarks/>
        public event New_Opening_Time_DateRangeCompletedEventHandler New_Opening_Time_DateRangeCompleted;
        
        /// <remarks/>
        public event New_Opening_Time_DayTypeIDCompletedEventHandler New_Opening_Time_DayTypeIDCompleted;
        
        /// <remarks/>
        public event Edit_Opening_Time_DayTypeIDCompletedEventHandler Edit_Opening_Time_DayTypeIDCompleted;
        
        /// <remarks/>
        public event List_NewOpening_dropDownSelectionCompletedEventHandler List_NewOpening_dropDownSelectionCompleted;
        
        /// <remarks/>
        public event List_Default_NewOpening_dropDownSelectionCompletedEventHandler List_Default_NewOpening_dropDownSelectionCompleted;
        
        /// <remarks/>
        public event DateRange_DefinitionBySCNCompletedEventHandler DateRange_DefinitionBySCNCompleted;
        
        /// <remarks/>
        public event List_DateRangeCompletedEventHandler List_DateRangeCompleted;
        
        /// <remarks/>
        public event List_AllOpeningTimes_BySCNCompletedEventHandler List_AllOpeningTimes_BySCNCompleted;
        
        /// <remarks/>
        public event OpeningTimes_BySCNCompletedEventHandler OpeningTimes_BySCNCompleted;
        
        /// <remarks/>
        public event Delete_Opening_TimeCompletedEventHandler Delete_Opening_TimeCompleted;
        
        /// <remarks/>
        public event Delete_Opening_Time_NewCompletedEventHandler Delete_Opening_Time_NewCompleted;
        
        /// <remarks/>
        public event Insert_Opening_TimeCompletedEventHandler Insert_Opening_TimeCompleted;
        
        /// <remarks/>
        public event Insert_Opening_Time_NewCompletedEventHandler Insert_Opening_Time_NewCompleted;
        
        /// <remarks/>
        public event List_Day_TypeID_By_DateRangeIdCompletedEventHandler List_Day_TypeID_By_DateRangeIdCompleted;
        
        /// <remarks/>
        public event List_OpeningTimesBySCNCompletedEventHandler List_OpeningTimesBySCNCompleted;
        
        /// <remarks/>
        public event List_TariffsBySCNCompletedEventHandler List_TariffsBySCNCompleted;
        
        /// <remarks/>
        public event New_TariffsBySCNDayIDCompletedEventHandler New_TariffsBySCNDayIDCompleted;
        
        /// <remarks/>
        public event Get_HourCompletedEventHandler Get_HourCompleted;
        
        /// <remarks/>
        public event View_TariffBySCNCompletedEventHandler View_TariffBySCNCompleted;
        
        /// <remarks/>
        public event View_TariffBySCN_For_DateRangeCompletedEventHandler View_TariffBySCN_For_DateRangeCompleted;
        
        /// <remarks/>
        public event Get_OptisObjects_SignTextCompletedEventHandler Get_OptisObjects_SignTextCompleted;
        
        /// <remarks/>
        public event List_ShortDescriptionByTypeCompletedEventHandler List_ShortDescriptionByTypeCompleted;
        
        /// <remarks/>
        public event Get_Object_DateRangeCompletedEventHandler Get_Object_DateRangeCompleted;
        
        /// <remarks/>
        public event Insert_DateRangeCompletedEventHandler Insert_DateRangeCompleted;
        
        /// <remarks/>
        public event Validate_DateRangeCompletedEventHandler Validate_DateRangeCompleted;
        
        /// <remarks/>
        public event Update_DateRangeCompletedEventHandler Update_DateRangeCompleted;
        
        /// <remarks/>
        public event List_Objects_for_DaterangeCompletedEventHandler List_Objects_for_DaterangeCompleted;
        
        /// <remarks/>
        public event Insert_DateRange_CyCleHubListCompletedEventHandler Insert_DateRange_CyCleHubListCompleted;
        
        /// <remarks/>
        public event Delete_DateRange_CycleHubListCompletedEventHandler Delete_DateRange_CycleHubListCompleted;
        
        /// <remarks/>
        public event Insert_DateRange_EVChargingPointListCompletedEventHandler Insert_DateRange_EVChargingPointListCompleted;
        
        /// <remarks/>
        public event Delete_DateRange_EVChargingPointListCompletedEventHandler Delete_DateRange_EVChargingPointListCompleted;
        
        /// <remarks/>
        public event Insert_DateRange_PointOfInterestListCompletedEventHandler Insert_DateRange_PointOfInterestListCompleted;
        
        /// <remarks/>
        public event Delete_DateRange_PointOfInterestListCompletedEventHandler Delete_DateRange_PointOfInterestListCompleted;
        
        /// <remarks/>
        public event Insert_DateRange_Walkers_FacilityListCompletedEventHandler Insert_DateRange_Walkers_FacilityListCompleted;
        
        /// <remarks/>
        public event Delete_DateRange_Walkers_FacilityListCompletedEventHandler Delete_DateRange_Walkers_FacilityListCompleted;
        
        /// <remarks/>
        public event Insert_DateRange_CarparkListCompletedEventHandler Insert_DateRange_CarparkListCompleted;
        
        /// <remarks/>
        public event Delete_DateRange_CarparkListCompletedEventHandler Delete_DateRange_CarparkListCompleted;
        
        /// <remarks/>
        public event Delete_NewDateRangeCompletedEventHandler Delete_NewDateRangeCompleted;
        
        /// <remarks/>
        public event List_ObjectsCompletedEventHandler List_ObjectsCompleted;
        
        /// <remarks/>
        public event List_ObjectsByObjectNameCompletedEventHandler List_ObjectsByObjectNameCompleted;
        
        /// <remarks/>
        public event List_ANPRDetectorsCompletedEventHandler List_ANPRDetectorsCompleted;
        
        /// <remarks/>
        public event List_DataSource_TypeIDCompletedEventHandler List_DataSource_TypeIDCompleted;
        
        /// <remarks/>
        public event List_Day_TypeIDCompletedEventHandler List_Day_TypeIDCompleted;
        
        /// <remarks/>
        public event List_DayTypeIDDescriptionCompletedEventHandler List_DayTypeIDDescriptionCompleted;
        
        /// <remarks/>
        public event List_Severity_TypeIDCompletedEventHandler List_Severity_TypeIDCompleted;
        
        /// <remarks/>
        public event List_TypeIDCompletedEventHandler List_TypeIDCompleted;
        
        /// <remarks/>
        public event List_QualityStatementIDCompletedEventHandler List_QualityStatementIDCompleted;
        
        /// <remarks/>
        public event List_FaultTypeCompletedEventHandler List_FaultTypeCompleted;
        
        /// <remarks/>
        public event New_QualityCompletedEventHandler New_QualityCompleted;
        
        /// <remarks/>
        public event New_FaultTypeCompletedEventHandler New_FaultTypeCompleted;
        
        /// <remarks/>
        public event New_TypeCompletedEventHandler New_TypeCompleted;
        
        /// <remarks/>
        public event New_FaultCompletedEventHandler New_FaultCompleted;
        
        /// <remarks/>
        public event New_Fault_FaultIdCompletedEventHandler New_Fault_FaultIdCompleted;
        
        /// <remarks/>
        public event New_Acknowledge_FaultCompletedEventHandler New_Acknowledge_FaultCompleted;
        
        /// <remarks/>
        public event New_CommandCompletedEventHandler New_CommandCompleted;
        
        /// <remarks/>
        public event New_VMS_Command_Active_MessageCompletedEventHandler New_VMS_Command_Active_MessageCompleted;
        
        /// <remarks/>
        public event New_Group_CommandCompletedEventHandler New_Group_CommandCompleted;
        
        /// <remarks/>
        public event New_VMS_Group_Command_Active_MessageCompletedEventHandler New_VMS_Group_Command_Active_MessageCompleted;
        
        /// <remarks/>
        public event New_HistoryCompletedEventHandler New_HistoryCompleted;
        
        /// <remarks/>
        public event View_LocationBySCNCompletedEventHandler View_LocationBySCNCompleted;
        
        /// <remarks/>
        public event View_CommandsBySCNCompletedEventHandler View_CommandsBySCNCompleted;
        
        /// <remarks/>
        public event View_FaultsBySCNCompletedEventHandler View_FaultsBySCNCompleted;
        
        /// <remarks/>
        public event View_FaultTypesCompletedEventHandler View_FaultTypesCompleted;
        
        /// <remarks/>
        public event View_QualityCompletedEventHandler View_QualityCompleted;
        
        /// <remarks/>
        public event View_TypeIDCompletedEventHandler View_TypeIDCompleted;
        
        /// <remarks/>
        public event View_Commands_CommandSetCompletedEventHandler View_Commands_CommandSetCompleted;
        
        /// <remarks/>
        public event View_Commands_ParameterSetCompletedEventHandler View_Commands_ParameterSetCompleted;
        
        /// <remarks/>
        public event View_HistoryBySCNCompletedEventHandler View_HistoryBySCNCompleted;
        
        /// <remarks/>
        public event Edit_LocationBySCNCompletedEventHandler Edit_LocationBySCNCompleted;
        
        /// <remarks/>
        public event Update_WardNameCompletedEventHandler Update_WardNameCompleted;
        
        /// <remarks/>
        public event Update_Name_ShortDescriptionCompletedEventHandler Update_Name_ShortDescriptionCompleted;
        
        /// <remarks/>
        public event Delete_OldDataValueMetEventsCompletedEventHandler Delete_OldDataValueMetEventsCompleted;
        
        /// <remarks/>
        public event Delete_BySCNCompletedEventHandler Delete_BySCNCompleted;
        
        /// <remarks/>
        public event Restore_UnMappedSCNCompletedEventHandler Restore_UnMappedSCNCompleted;
        
        /// <remarks/>
        public event List_AknowledgementCompletedEventHandler List_AknowledgementCompleted;
        
        /// <remarks/>
        public event List_NearByObjectsCompletedEventHandler List_NearByObjectsCompleted;
        
        /// <remarks/>
        public event New_DeviceHistoryCompletedEventHandler New_DeviceHistoryCompleted;
        
        /// <remarks/>
        public event New_DeviceHistory_CommandIDCompletedEventHandler New_DeviceHistory_CommandIDCompleted;
        
        /// <remarks/>
        public event New_DeviceHistory_LinkedEntryCompletedEventHandler New_DeviceHistory_LinkedEntryCompleted;
        
        /// <remarks/>
        public event List_DeviceHistoryObjectsCompletedEventHandler List_DeviceHistoryObjectsCompleted;
        
        /// <remarks/>
        public event List_DeviceHistoryTablesByObjectCompletedEventHandler List_DeviceHistoryTablesByObjectCompleted;
        
        /// <remarks/>
        public event List_DeviceHistoryLinkedEntriesCompletedEventHandler List_DeviceHistoryLinkedEntriesCompleted;
        
        /// <remarks/>
        public event List_DeviceHistoryLinkedEntries_NewCompletedEventHandler List_DeviceHistoryLinkedEntries_NewCompleted;
        
        /// <remarks/>
        public event Get_DeviceHistoryLinkedTreeCompletedEventHandler Get_DeviceHistoryLinkedTreeCompleted;
        
        /// <remarks/>
        public event List_DeviceHistoryEntriesByObjectCompletedEventHandler List_DeviceHistoryEntriesByObjectCompleted;
        
        /// <remarks/>
        public event List_DeviceHistoryEntriesByLogCompletedEventHandler List_DeviceHistoryEntriesByLogCompleted;
        
        /// <remarks/>
        public event List_DeviceHistoryTablesCompletedEventHandler List_DeviceHistoryTablesCompleted;
        
        /// <remarks/>
        public event List_ShortDescriptionsCompletedEventHandler List_ShortDescriptionsCompleted;
        
        /// <remarks/>
        public event List_UserNameCompletedEventHandler List_UserNameCompleted;
        
        /// <remarks/>
        public event List_DeviceHistorySCNsCompletedEventHandler List_DeviceHistorySCNsCompleted;
        
        /// <remarks/>
        public event List_DeviceHistoryCountNewCompletedEventHandler List_DeviceHistoryCountNewCompleted;
        
        /// <remarks/>
        public event List_DeviceHistoryNewCompletedEventHandler List_DeviceHistoryNewCompleted;
        
        /// <remarks/>
        public event New_DeviceHistory_ManualEntryCompletedEventHandler New_DeviceHistory_ManualEntryCompleted;
        
        /// <remarks/>
        public event List_DeviceHistoryCompletedEventHandler List_DeviceHistoryCompleted;
        
        /// <remarks/>
        public event List_DeviceHistoryCountCompletedEventHandler List_DeviceHistoryCountCompleted;
        
        /// <remarks/>
        public event New_EmailCompletedEventHandler New_EmailCompleted;
        
        /// <remarks/>
        public event ListAllEmailCompletedEventHandler ListAllEmailCompleted;
        
        /// <remarks/>
        public event DeleteEmailCompletedEventHandler DeleteEmailCompleted;
        
        /// <remarks/>
        public event NewGroupCompletedEventHandler NewGroupCompleted;
        
        /// <remarks/>
        public event ListEmailGroupCompletedEventHandler ListEmailGroupCompleted;
        
        /// <remarks/>
        public event ListManualGroupMailCompletedEventHandler ListManualGroupMailCompleted;
        
        /// <remarks/>
        public event DeleteEmailGroupCompletedEventHandler DeleteEmailGroupCompleted;
        
        /// <remarks/>
        public event ListEmailByGroupIdCompletedEventHandler ListEmailByGroupIdCompleted;
        
        /// <remarks/>
        public event CheckGroupNameExistCompletedEventHandler CheckGroupNameExistCompleted;
        
        /// <remarks/>
        public event CheckEmailExistCompletedEventHandler CheckEmailExistCompleted;
        
        /// <remarks/>
        public event UpdateEmailGroupCompletedEventHandler UpdateEmailGroupCompleted;
        
        /// <remarks/>
        public event View_DeviceHistoryByLogIdCompletedEventHandler View_DeviceHistoryByLogIdCompleted;
        
        /// <remarks/>
        public event View_ManualEntryStatusCompletedEventHandler View_ManualEntryStatusCompleted;
        
        /// <remarks/>
        public event UpdateManualEntryStatusCompletedEventHandler UpdateManualEntryStatusCompleted;
        
        /// <remarks/>
        public event Get_DeviceHistoryLinkedTreeNewCompletedEventHandler Get_DeviceHistoryLinkedTreeNewCompleted;
        
        /// <remarks/>
        public event List_DayTypeSpeedSettingsCompletedEventHandler List_DayTypeSpeedSettingsCompleted;
        
        /// <remarks/>
        public event Update_DayTypeSpeedSettingsCompletedEventHandler Update_DayTypeSpeedSettingsCompleted;
        
        /// <remarks/>
        public event List_RoadLinkSpeed_HistorySettingsCompletedEventHandler List_RoadLinkSpeed_HistorySettingsCompleted;
        
        /// <remarks/>
        public event Update_RoadLinkSpeed_HistorySettingsCompletedEventHandler Update_RoadLinkSpeed_HistorySettingsCompleted;
        
        /// <remarks/>
        public event List_CsvColumnsCompletedEventHandler List_CsvColumnsCompleted;
        
        /// <remarks/>
        public event List_CSVScheduleNameCompletedEventHandler List_CSVScheduleNameCompleted;
        
        /// <remarks/>
        public event List_CSVFilesCompletedEventHandler List_CSVFilesCompleted;
        
        /// <remarks/>
        public event List_ScheduleByUserCompletedEventHandler List_ScheduleByUserCompleted;
        
        /// <remarks/>
        public event List_ScheduleByIdCompletedEventHandler List_ScheduleByIdCompleted;
        
        /// <remarks/>
        public event List_ScheduleCompletedEventHandler List_ScheduleCompleted;
        
        /// <remarks/>
        public event List_ColumnByScheduleIdCompletedEventHandler List_ColumnByScheduleIdCompleted;
        
        /// <remarks/>
        public event DeleteScheduleCompletedEventHandler DeleteScheduleCompleted;
        
        /// <remarks/>
        public event SaveCsvColumnsCompletedEventHandler SaveCsvColumnsCompleted;
        
        /// <remarks/>
        public event SaveExportToCSVSettingsCompletedEventHandler SaveExportToCSVSettingsCompleted;
        
        /// <remarks/>
        public event DeleteCsvColumnsCompletedEventHandler DeleteCsvColumnsCompleted;
        
        /// <remarks/>
        public event UpdateExportToCSVSettingsCompletedEventHandler UpdateExportToCSVSettingsCompleted;
        
        /// <remarks/>
        public event Error_LogCompletedEventHandler Error_LogCompleted;
        
        /// <remarks/>
        public event List_PredictedTimeInterval_SettingsCompletedEventHandler List_PredictedTimeInterval_SettingsCompleted;
        
        /// <remarks/>
        public event New_PredictedTimeInterval_SettingsCompletedEventHandler New_PredictedTimeInterval_SettingsCompleted;
        
        /// <remarks/>
        public event Update_PredictedTimeInterval_SettingsCompletedEventHandler Update_PredictedTimeInterval_SettingsCompleted;
        
        /// <remarks/>
        public event Delete_PredictedTimeInterval_SettingsCompletedEventHandler Delete_PredictedTimeInterval_SettingsCompleted;
        
        /// <remarks/>
        public event New_gazeteer_definitionCompletedEventHandler New_gazeteer_definitionCompleted;
        
        /// <remarks/>
        public event List_RoadType_Configuration_SettingsCompletedEventHandler List_RoadType_Configuration_SettingsCompleted;
        
        /// <remarks/>
        public event New_RoadType_Configuration_SettingsCompletedEventHandler New_RoadType_Configuration_SettingsCompleted;
        
        /// <remarks/>
        public event ECU_definitionCompletedEventHandler ECU_definitionCompleted;
        
        /// <remarks/>
        public event ECU_definitionsCompletedEventHandler ECU_definitionsCompleted;
        
        /// <remarks/>
        public event View_SubscriptionAlert_IncidentCompletedEventHandler View_SubscriptionAlert_IncidentCompleted;
        
        /// <remarks/>
        public event View_AlertDetailsCompletedEventHandler View_AlertDetailsCompleted;
        
        /// <remarks/>
        public event View_AlertSummarySettingsCompletedEventHandler View_AlertSummarySettingsCompleted;
        
        /// <remarks/>
        public event Update_AlertSummarySettingsCompletedEventHandler Update_AlertSummarySettingsCompleted;
        
        /// <remarks/>
        public event View_ObjectDetailsCompletedEventHandler View_ObjectDetailsCompleted;
        
        /// <remarks/>
        public event View_ObjectFaultDetailsCompletedEventHandler View_ObjectFaultDetailsCompleted;
        
        /// <remarks/>
        public event View_ObjectDynamicDetailsCompletedEventHandler View_ObjectDynamicDetailsCompleted;
        
        /// <remarks/>
        public event New_SubscriptionAlert_IncidentCompletedEventHandler New_SubscriptionAlert_IncidentCompleted;
        
        /// <remarks/>
        public event List_Quarantine_DataCompletedEventHandler List_Quarantine_DataCompleted;
        
        /// <remarks/>
        public event SearchList_Quarantine_DataCompletedEventHandler SearchList_Quarantine_DataCompleted;
        
        /// <remarks/>
        public event GetTypeDescriptionCompletedEventHandler GetTypeDescriptionCompleted;
        
        /// <remarks/>
        public event Delete_Quarantine_DataCompletedEventHandler Delete_Quarantine_DataCompleted;
        
        /// <remarks/>
        public event New_QuarantinedataCompletedEventHandler New_QuarantinedataCompleted;
        
        /// <remarks/>
        public event New_Quarantinedata_byDeleteCompletedEventHandler New_Quarantinedata_byDeleteCompleted;
        
        /// <remarks/>
        public event Restore_AirQualityCompletedEventHandler Restore_AirQualityCompleted;
        
        /// <remarks/>
        public event Restore_QuarantinedataCompletedEventHandler Restore_QuarantinedataCompleted;
        
        /// <remarks/>
        public event Delete_All_Invalid_Quarantine_DataCompletedEventHandler Delete_All_Invalid_Quarantine_DataCompleted;
        
        /// <remarks/>
        public event List_Quarantine_Violating_DataCompletedEventHandler List_Quarantine_Violating_DataCompleted;
        
        /// <remarks/>
        public event SearchList_Quality_DataissuesCompletedEventHandler SearchList_Quality_DataissuesCompleted;
        
        /// <remarks/>
        public event View_QuarantineDataBySCNCompletedEventHandler View_QuarantineDataBySCNCompleted;
        
        /// <remarks/>
        public event View_QuarantineDataBySCNAndTypeCompletedEventHandler View_QuarantineDataBySCNAndTypeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Insert_Incident_Recurrent", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_Incident_Recurrent(string ObjectName, string SystemCodeNumber, System.DateTime ValidateStartDate, System.DateTime ValidateEndDate, int RecurrentDay) {
            this.Invoke("Insert_Incident_Recurrent", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        ValidateStartDate,
                        ValidateEndDate,
                        RecurrentDay});
        }
        
        /// <remarks/>
        public void Insert_Incident_RecurrentAsync(string ObjectName, string SystemCodeNumber, System.DateTime ValidateStartDate, System.DateTime ValidateEndDate, int RecurrentDay) {
            this.Insert_Incident_RecurrentAsync(ObjectName, SystemCodeNumber, ValidateStartDate, ValidateEndDate, RecurrentDay, null);
        }
        
        /// <remarks/>
        public void Insert_Incident_RecurrentAsync(string ObjectName, string SystemCodeNumber, System.DateTime ValidateStartDate, System.DateTime ValidateEndDate, int RecurrentDay, object userState) {
            if ((this.Insert_Incident_RecurrentOperationCompleted == null)) {
                this.Insert_Incident_RecurrentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_Incident_RecurrentOperationCompleted);
            }
            this.InvokeAsync("Insert_Incident_Recurrent", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        ValidateStartDate,
                        ValidateEndDate,
                        RecurrentDay}, this.Insert_Incident_RecurrentOperationCompleted, userState);
        }
        
        private void OnInsert_Incident_RecurrentOperationCompleted(object arg) {
            if ((this.Insert_Incident_RecurrentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_Incident_RecurrentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Edit_Incident_Recurrent", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Edit_Incident_Recurrent(string ObjectName, string SystemCodeNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> DateRangeID, int RecurrentDay) {
            this.Invoke("Edit_Incident_Recurrent", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        DateRangeID,
                        RecurrentDay});
        }
        
        /// <remarks/>
        public void Edit_Incident_RecurrentAsync(string ObjectName, string SystemCodeNumber, System.Nullable<int> DateRangeID, int RecurrentDay) {
            this.Edit_Incident_RecurrentAsync(ObjectName, SystemCodeNumber, DateRangeID, RecurrentDay, null);
        }
        
        /// <remarks/>
        public void Edit_Incident_RecurrentAsync(string ObjectName, string SystemCodeNumber, System.Nullable<int> DateRangeID, int RecurrentDay, object userState) {
            if ((this.Edit_Incident_RecurrentOperationCompleted == null)) {
                this.Edit_Incident_RecurrentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEdit_Incident_RecurrentOperationCompleted);
            }
            this.InvokeAsync("Edit_Incident_Recurrent", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        DateRangeID,
                        RecurrentDay}, this.Edit_Incident_RecurrentOperationCompleted, userState);
        }
        
        private void OnEdit_Incident_RecurrentOperationCompleted(object arg) {
            if ((this.Edit_Incident_RecurrentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Edit_Incident_RecurrentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_Incident_Recurrent", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_Incident_Recurrent(string ObjectName, string SystemCodeNumber) {
            object[] results = this.Invoke("View_Incident_Recurrent", new object[] {
                        ObjectName,
                        SystemCodeNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_Incident_RecurrentAsync(string ObjectName, string SystemCodeNumber) {
            this.View_Incident_RecurrentAsync(ObjectName, SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void View_Incident_RecurrentAsync(string ObjectName, string SystemCodeNumber, object userState) {
            if ((this.View_Incident_RecurrentOperationCompleted == null)) {
                this.View_Incident_RecurrentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_Incident_RecurrentOperationCompleted);
            }
            this.InvokeAsync("View_Incident_Recurrent", new object[] {
                        ObjectName,
                        SystemCodeNumber}, this.View_Incident_RecurrentOperationCompleted, userState);
        }
        
        private void OnView_Incident_RecurrentOperationCompleted(object arg) {
            if ((this.View_Incident_RecurrentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_Incident_RecurrentCompleted(this, new View_Incident_RecurrentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_Accident_Recurrent", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_Accident_Recurrent(string ObjectName, string SystemCodeNumber, System.DateTime ValidateStartDate, System.DateTime ValidateEndDate, int RecurrentDay) {
            this.Invoke("Delete_Accident_Recurrent", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        ValidateStartDate,
                        ValidateEndDate,
                        RecurrentDay});
        }
        
        /// <remarks/>
        public void Delete_Accident_RecurrentAsync(string ObjectName, string SystemCodeNumber, System.DateTime ValidateStartDate, System.DateTime ValidateEndDate, int RecurrentDay) {
            this.Delete_Accident_RecurrentAsync(ObjectName, SystemCodeNumber, ValidateStartDate, ValidateEndDate, RecurrentDay, null);
        }
        
        /// <remarks/>
        public void Delete_Accident_RecurrentAsync(string ObjectName, string SystemCodeNumber, System.DateTime ValidateStartDate, System.DateTime ValidateEndDate, int RecurrentDay, object userState) {
            if ((this.Delete_Accident_RecurrentOperationCompleted == null)) {
                this.Delete_Accident_RecurrentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Accident_RecurrentOperationCompleted);
            }
            this.InvokeAsync("Delete_Accident_Recurrent", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        ValidateStartDate,
                        ValidateEndDate,
                        RecurrentDay}, this.Delete_Accident_RecurrentOperationCompleted, userState);
        }
        
        private void OnDelete_Accident_RecurrentOperationCompleted(object arg) {
            if ((this.Delete_Accident_RecurrentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Accident_RecurrentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_Incident_Recurrent", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_Incident_Recurrent(string ObjectName, string SystemCodeNumber, int ValidateStartDate, int RecurrentDay) {
            this.Invoke("Delete_Incident_Recurrent", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        ValidateStartDate,
                        RecurrentDay});
        }
        
        /// <remarks/>
        public void Delete_Incident_RecurrentAsync(string ObjectName, string SystemCodeNumber, int ValidateStartDate, int RecurrentDay) {
            this.Delete_Incident_RecurrentAsync(ObjectName, SystemCodeNumber, ValidateStartDate, RecurrentDay, null);
        }
        
        /// <remarks/>
        public void Delete_Incident_RecurrentAsync(string ObjectName, string SystemCodeNumber, int ValidateStartDate, int RecurrentDay, object userState) {
            if ((this.Delete_Incident_RecurrentOperationCompleted == null)) {
                this.Delete_Incident_RecurrentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Incident_RecurrentOperationCompleted);
            }
            this.InvokeAsync("Delete_Incident_Recurrent", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        ValidateStartDate,
                        RecurrentDay}, this.Delete_Incident_RecurrentOperationCompleted, userState);
        }
        
        private void OnDelete_Incident_RecurrentOperationCompleted(object arg) {
            if ((this.Delete_Incident_RecurrentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Incident_RecurrentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_Incident_RecurrentBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_Incident_RecurrentBySCN(string ObjectName, string SystemCodeNumber) {
            object[] results = this.Invoke("View_Incident_RecurrentBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_Incident_RecurrentBySCNAsync(string ObjectName, string SystemCodeNumber) {
            this.View_Incident_RecurrentBySCNAsync(ObjectName, SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void View_Incident_RecurrentBySCNAsync(string ObjectName, string SystemCodeNumber, object userState) {
            if ((this.View_Incident_RecurrentBySCNOperationCompleted == null)) {
                this.View_Incident_RecurrentBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_Incident_RecurrentBySCNOperationCompleted);
            }
            this.InvokeAsync("View_Incident_RecurrentBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber}, this.View_Incident_RecurrentBySCNOperationCompleted, userState);
        }
        
        private void OnView_Incident_RecurrentBySCNOperationCompleted(object arg) {
            if ((this.View_Incident_RecurrentBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_Incident_RecurrentBySCNCompleted(this, new View_Incident_RecurrentBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_Incident_RecurrentByDateTime", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_Incident_RecurrentByDateTime(string ObjectName, string SystemCodeNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> StartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> EndDate) {
            object[] results = this.Invoke("View_Incident_RecurrentByDateTime", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        StartDate,
                        EndDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_Incident_RecurrentByDateTimeAsync(string ObjectName, string SystemCodeNumber, System.Nullable<System.DateTime> StartDate, System.Nullable<System.DateTime> EndDate) {
            this.View_Incident_RecurrentByDateTimeAsync(ObjectName, SystemCodeNumber, StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void View_Incident_RecurrentByDateTimeAsync(string ObjectName, string SystemCodeNumber, System.Nullable<System.DateTime> StartDate, System.Nullable<System.DateTime> EndDate, object userState) {
            if ((this.View_Incident_RecurrentByDateTimeOperationCompleted == null)) {
                this.View_Incident_RecurrentByDateTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_Incident_RecurrentByDateTimeOperationCompleted);
            }
            this.InvokeAsync("View_Incident_RecurrentByDateTime", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        StartDate,
                        EndDate}, this.View_Incident_RecurrentByDateTimeOperationCompleted, userState);
        }
        
        private void OnView_Incident_RecurrentByDateTimeOperationCompleted(object arg) {
            if ((this.View_Incident_RecurrentByDateTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_Incident_RecurrentByDateTimeCompleted(this, new View_Incident_RecurrentByDateTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_RecurringBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_RecurringBySCN(string ObjectName, string SystemCodeNumber) {
            object[] results = this.Invoke("View_RecurringBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_RecurringBySCNAsync(string ObjectName, string SystemCodeNumber) {
            this.View_RecurringBySCNAsync(ObjectName, SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void View_RecurringBySCNAsync(string ObjectName, string SystemCodeNumber, object userState) {
            if ((this.View_RecurringBySCNOperationCompleted == null)) {
                this.View_RecurringBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_RecurringBySCNOperationCompleted);
            }
            this.InvokeAsync("View_RecurringBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber}, this.View_RecurringBySCNOperationCompleted, userState);
        }
        
        private void OnView_RecurringBySCNOperationCompleted(object arg) {
            if ((this.View_RecurringBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_RecurringBySCNCompleted(this, new View_RecurringBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DateRangeRecurrent", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DateRangeRecurrent(System.DateTime fdate, System.DateTime tdate) {
            object[] results = this.Invoke("List_DateRangeRecurrent", new object[] {
                        fdate,
                        tdate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DateRangeRecurrentAsync(System.DateTime fdate, System.DateTime tdate) {
            this.List_DateRangeRecurrentAsync(fdate, tdate, null);
        }
        
        /// <remarks/>
        public void List_DateRangeRecurrentAsync(System.DateTime fdate, System.DateTime tdate, object userState) {
            if ((this.List_DateRangeRecurrentOperationCompleted == null)) {
                this.List_DateRangeRecurrentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DateRangeRecurrentOperationCompleted);
            }
            this.InvokeAsync("List_DateRangeRecurrent", new object[] {
                        fdate,
                        tdate}, this.List_DateRangeRecurrentOperationCompleted, userState);
        }
        
        private void OnList_DateRangeRecurrentOperationCompleted(object arg) {
            if ((this.List_DateRangeRecurrentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DateRangeRecurrentCompleted(this, new List_DateRangeRecurrentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/IsHolidayExists", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsHolidayExists(System.DateTime ValidateStartDate, System.DateTime ValidateEndDate, int Id) {
            object[] results = this.Invoke("IsHolidayExists", new object[] {
                        ValidateStartDate,
                        ValidateEndDate,
                        Id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsHolidayExistsAsync(System.DateTime ValidateStartDate, System.DateTime ValidateEndDate, int Id) {
            this.IsHolidayExistsAsync(ValidateStartDate, ValidateEndDate, Id, null);
        }
        
        /// <remarks/>
        public void IsHolidayExistsAsync(System.DateTime ValidateStartDate, System.DateTime ValidateEndDate, int Id, object userState) {
            if ((this.IsHolidayExistsOperationCompleted == null)) {
                this.IsHolidayExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsHolidayExistsOperationCompleted);
            }
            this.InvokeAsync("IsHolidayExists", new object[] {
                        ValidateStartDate,
                        ValidateEndDate,
                        Id}, this.IsHolidayExistsOperationCompleted, userState);
        }
        
        private void OnIsHolidayExistsOperationCompleted(object arg) {
            if ((this.IsHolidayExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsHolidayExistsCompleted(this, new IsHolidayExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_RecurrentDays", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_RecurrentDays() {
            object[] results = this.Invoke("List_RecurrentDays", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_RecurrentDaysAsync() {
            this.List_RecurrentDaysAsync(null);
        }
        
        /// <remarks/>
        public void List_RecurrentDaysAsync(object userState) {
            if ((this.List_RecurrentDaysOperationCompleted == null)) {
                this.List_RecurrentDaysOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_RecurrentDaysOperationCompleted);
            }
            this.InvokeAsync("List_RecurrentDays", new object[0], this.List_RecurrentDaysOperationCompleted, userState);
        }
        
        private void OnList_RecurrentDaysOperationCompleted(object arg) {
            if ((this.List_RecurrentDaysCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_RecurrentDaysCompleted(this, new List_RecurrentDaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Status", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Status() {
            object[] results = this.Invoke("List_Status", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_StatusAsync() {
            this.List_StatusAsync(null);
        }
        
        /// <remarks/>
        public void List_StatusAsync(object userState) {
            if ((this.List_StatusOperationCompleted == null)) {
                this.List_StatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_StatusOperationCompleted);
            }
            this.InvokeAsync("List_Status", new object[0], this.List_StatusOperationCompleted, userState);
        }
        
        private void OnList_StatusOperationCompleted(object arg) {
            if ((this.List_StatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_StatusCompleted(this, new List_StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/IsLocationExists", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsLocationExists(string ObjectName, double Northing, double Easting, System.DateTime StartDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> EndDate, double Radius, string datetype, double emin, double emax, double nmin, double nmax, string scn) {
            object[] results = this.Invoke("IsLocationExists", new object[] {
                        ObjectName,
                        Northing,
                        Easting,
                        StartDate,
                        EndDate,
                        Radius,
                        datetype,
                        emin,
                        emax,
                        nmin,
                        nmax,
                        scn});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsLocationExistsAsync(string ObjectName, double Northing, double Easting, System.DateTime StartDate, System.Nullable<System.DateTime> EndDate, double Radius, string datetype, double emin, double emax, double nmin, double nmax, string scn) {
            this.IsLocationExistsAsync(ObjectName, Northing, Easting, StartDate, EndDate, Radius, datetype, emin, emax, nmin, nmax, scn, null);
        }
        
        /// <remarks/>
        public void IsLocationExistsAsync(string ObjectName, double Northing, double Easting, System.DateTime StartDate, System.Nullable<System.DateTime> EndDate, double Radius, string datetype, double emin, double emax, double nmin, double nmax, string scn, object userState) {
            if ((this.IsLocationExistsOperationCompleted == null)) {
                this.IsLocationExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsLocationExistsOperationCompleted);
            }
            this.InvokeAsync("IsLocationExists", new object[] {
                        ObjectName,
                        Northing,
                        Easting,
                        StartDate,
                        EndDate,
                        Radius,
                        datetype,
                        emin,
                        emax,
                        nmin,
                        nmax,
                        scn}, this.IsLocationExistsOperationCompleted, userState);
        }
        
        private void OnIsLocationExistsOperationCompleted(object arg) {
            if ((this.IsLocationExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsLocationExistsCompleted(this, new IsLocationExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Update_StatusBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_StatusBySCN(string ObjectName, string SystemCodeNumber, int Status) {
            this.Invoke("Update_StatusBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        Status});
        }
        
        /// <remarks/>
        public void Update_StatusBySCNAsync(string ObjectName, string SystemCodeNumber, int Status) {
            this.Update_StatusBySCNAsync(ObjectName, SystemCodeNumber, Status, null);
        }
        
        /// <remarks/>
        public void Update_StatusBySCNAsync(string ObjectName, string SystemCodeNumber, int Status, object userState) {
            if ((this.Update_StatusBySCNOperationCompleted == null)) {
                this.Update_StatusBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_StatusBySCNOperationCompleted);
            }
            this.InvokeAsync("Update_StatusBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        Status}, this.Update_StatusBySCNOperationCompleted, userState);
        }
        
        private void OnUpdate_StatusBySCNOperationCompleted(object arg) {
            if ((this.Update_StatusBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_StatusBySCNCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/GetNotificationsByUserName", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetNotificationsByUserName(string UserName, int Hour, int PageIndex) {
            object[] results = this.Invoke("GetNotificationsByUserName", new object[] {
                        UserName,
                        Hour,
                        PageIndex});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetNotificationsByUserNameAsync(string UserName, int Hour, int PageIndex) {
            this.GetNotificationsByUserNameAsync(UserName, Hour, PageIndex, null);
        }
        
        /// <remarks/>
        public void GetNotificationsByUserNameAsync(string UserName, int Hour, int PageIndex, object userState) {
            if ((this.GetNotificationsByUserNameOperationCompleted == null)) {
                this.GetNotificationsByUserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotificationsByUserNameOperationCompleted);
            }
            this.InvokeAsync("GetNotificationsByUserName", new object[] {
                        UserName,
                        Hour,
                        PageIndex}, this.GetNotificationsByUserNameOperationCompleted, userState);
        }
        
        private void OnGetNotificationsByUserNameOperationCompleted(object arg) {
            if ((this.GetNotificationsByUserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotificationsByUserNameCompleted(this, new GetNotificationsByUserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/UpdateNotificationById", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateNotificationById(int Id, int IsActive) {
            object[] results = this.Invoke("UpdateNotificationById", new object[] {
                        Id,
                        IsActive});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateNotificationByIdAsync(int Id, int IsActive) {
            this.UpdateNotificationByIdAsync(Id, IsActive, null);
        }
        
        /// <remarks/>
        public void UpdateNotificationByIdAsync(int Id, int IsActive, object userState) {
            if ((this.UpdateNotificationByIdOperationCompleted == null)) {
                this.UpdateNotificationByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateNotificationByIdOperationCompleted);
            }
            this.InvokeAsync("UpdateNotificationById", new object[] {
                        Id,
                        IsActive}, this.UpdateNotificationByIdOperationCompleted, userState);
        }
        
        private void OnUpdateNotificationByIdOperationCompleted(object arg) {
            if ((this.UpdateNotificationByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateNotificationByIdCompleted(this, new UpdateNotificationByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Notification_UtmcEventTypes", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Notification_UtmcEventTypes() {
            object[] results = this.Invoke("List_Notification_UtmcEventTypes", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_Notification_UtmcEventTypesAsync() {
            this.List_Notification_UtmcEventTypesAsync(null);
        }
        
        /// <remarks/>
        public void List_Notification_UtmcEventTypesAsync(object userState) {
            if ((this.List_Notification_UtmcEventTypesOperationCompleted == null)) {
                this.List_Notification_UtmcEventTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_Notification_UtmcEventTypesOperationCompleted);
            }
            this.InvokeAsync("List_Notification_UtmcEventTypes", new object[0], this.List_Notification_UtmcEventTypesOperationCompleted, userState);
        }
        
        private void OnList_Notification_UtmcEventTypesOperationCompleted(object arg) {
            if ((this.List_Notification_UtmcEventTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_Notification_UtmcEventTypesCompleted(this, new List_Notification_UtmcEventTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/GetRestoreDetails", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRestoreDetails(string[] quarantineIds) {
            object[] results = this.Invoke("GetRestoreDetails", new object[] {
                        quarantineIds});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRestoreDetailsAsync(string[] quarantineIds) {
            this.GetRestoreDetailsAsync(quarantineIds, null);
        }
        
        /// <remarks/>
        public void GetRestoreDetailsAsync(string[] quarantineIds, object userState) {
            if ((this.GetRestoreDetailsOperationCompleted == null)) {
                this.GetRestoreDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRestoreDetailsOperationCompleted);
            }
            this.InvokeAsync("GetRestoreDetails", new object[] {
                        quarantineIds}, this.GetRestoreDetailsOperationCompleted, userState);
        }
        
        private void OnGetRestoreDetailsOperationCompleted(object arg) {
            if ((this.GetRestoreDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRestoreDetailsCompleted(this, new GetRestoreDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/GetObjectsForSettings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetObjectsForSettings() {
            object[] results = this.Invoke("GetObjectsForSettings", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetObjectsForSettingsAsync() {
            this.GetObjectsForSettingsAsync(null);
        }
        
        /// <remarks/>
        public void GetObjectsForSettingsAsync(object userState) {
            if ((this.GetObjectsForSettingsOperationCompleted == null)) {
                this.GetObjectsForSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetObjectsForSettingsOperationCompleted);
            }
            this.InvokeAsync("GetObjectsForSettings", new object[0], this.GetObjectsForSettingsOperationCompleted, userState);
        }
        
        private void OnGetObjectsForSettingsOperationCompleted(object arg) {
            if ((this.GetObjectsForSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetObjectsForSettingsCompleted(this, new GetObjectsForSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/GetDeviceHistoryRootLink", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDeviceHistoryRootLink(string scn, int level) {
            object[] results = this.Invoke("GetDeviceHistoryRootLink", new object[] {
                        scn,
                        level});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeviceHistoryRootLinkAsync(string scn, int level) {
            this.GetDeviceHistoryRootLinkAsync(scn, level, null);
        }
        
        /// <remarks/>
        public void GetDeviceHistoryRootLinkAsync(string scn, int level, object userState) {
            if ((this.GetDeviceHistoryRootLinkOperationCompleted == null)) {
                this.GetDeviceHistoryRootLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceHistoryRootLinkOperationCompleted);
            }
            this.InvokeAsync("GetDeviceHistoryRootLink", new object[] {
                        scn,
                        level}, this.GetDeviceHistoryRootLinkOperationCompleted, userState);
        }
        
        private void OnGetDeviceHistoryRootLinkOperationCompleted(object arg) {
            if ((this.GetDeviceHistoryRootLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeviceHistoryRootLinkCompleted(this, new GetDeviceHistoryRootLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/GetDeviceHistoryRootLink_New", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDeviceHistoryRootLink_New(string scn, int level) {
            object[] results = this.Invoke("GetDeviceHistoryRootLink_New", new object[] {
                        scn,
                        level});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeviceHistoryRootLink_NewAsync(string scn, int level) {
            this.GetDeviceHistoryRootLink_NewAsync(scn, level, null);
        }
        
        /// <remarks/>
        public void GetDeviceHistoryRootLink_NewAsync(string scn, int level, object userState) {
            if ((this.GetDeviceHistoryRootLink_NewOperationCompleted == null)) {
                this.GetDeviceHistoryRootLink_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeviceHistoryRootLink_NewOperationCompleted);
            }
            this.InvokeAsync("GetDeviceHistoryRootLink_New", new object[] {
                        scn,
                        level}, this.GetDeviceHistoryRootLink_NewOperationCompleted, userState);
        }
        
        private void OnGetDeviceHistoryRootLink_NewOperationCompleted(object arg) {
            if ((this.GetDeviceHistoryRootLink_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeviceHistoryRootLink_NewCompleted(this, new GetDeviceHistoryRootLink_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_FaultAcknowledgement_Data", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_FaultAcknowledgement_Data(int SettingsID) {
            this.Invoke("Delete_FaultAcknowledgement_Data", new object[] {
                        SettingsID});
        }
        
        /// <remarks/>
        public void Delete_FaultAcknowledgement_DataAsync(int SettingsID) {
            this.Delete_FaultAcknowledgement_DataAsync(SettingsID, null);
        }
        
        /// <remarks/>
        public void Delete_FaultAcknowledgement_DataAsync(int SettingsID, object userState) {
            if ((this.Delete_FaultAcknowledgement_DataOperationCompleted == null)) {
                this.Delete_FaultAcknowledgement_DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_FaultAcknowledgement_DataOperationCompleted);
            }
            this.InvokeAsync("Delete_FaultAcknowledgement_Data", new object[] {
                        SettingsID}, this.Delete_FaultAcknowledgement_DataOperationCompleted, userState);
        }
        
        private void OnDelete_FaultAcknowledgement_DataOperationCompleted(object arg) {
            if ((this.Delete_FaultAcknowledgement_DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_FaultAcknowledgement_DataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/GetDayType", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDayType() {
            object[] results = this.Invoke("GetDayType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDayTypeAsync() {
            this.GetDayTypeAsync(null);
        }
        
        /// <remarks/>
        public void GetDayTypeAsync(object userState) {
            if ((this.GetDayTypeOperationCompleted == null)) {
                this.GetDayTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDayTypeOperationCompleted);
            }
            this.InvokeAsync("GetDayType", new object[0], this.GetDayTypeOperationCompleted, userState);
        }
        
        private void OnGetDayTypeOperationCompleted(object arg) {
            if ((this.GetDayTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDayTypeCompleted(this, new GetDayTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/GetDataSource", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDataSource() {
            object[] results = this.Invoke("GetDataSource", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataSourceAsync() {
            this.GetDataSourceAsync(null);
        }
        
        /// <remarks/>
        public void GetDataSourceAsync(object userState) {
            if ((this.GetDataSourceOperationCompleted == null)) {
                this.GetDataSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataSourceOperationCompleted);
            }
            this.InvokeAsync("GetDataSource", new object[0], this.GetDataSourceOperationCompleted, userState);
        }
        
        private void OnGetDataSourceOperationCompleted(object arg) {
            if ((this.GetDataSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataSourceCompleted(this, new GetDataSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/GetSeverity", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSeverity() {
            object[] results = this.Invoke("GetSeverity", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeverityAsync() {
            this.GetSeverityAsync(null);
        }
        
        /// <remarks/>
        public void GetSeverityAsync(object userState) {
            if ((this.GetSeverityOperationCompleted == null)) {
                this.GetSeverityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeverityOperationCompleted);
            }
            this.InvokeAsync("GetSeverity", new object[0], this.GetSeverityOperationCompleted, userState);
        }
        
        private void OnGetSeverityOperationCompleted(object arg) {
            if ((this.GetSeverityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeverityCompleted(this, new GetSeverityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_FaultTypesByObjectId", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_FaultTypesByObjectId(int objectTypeId, int DataSourceID) {
            object[] results = this.Invoke("List_FaultTypesByObjectId", new object[] {
                        objectTypeId,
                        DataSourceID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_FaultTypesByObjectIdAsync(int objectTypeId, int DataSourceID) {
            this.List_FaultTypesByObjectIdAsync(objectTypeId, DataSourceID, null);
        }
        
        /// <remarks/>
        public void List_FaultTypesByObjectIdAsync(int objectTypeId, int DataSourceID, object userState) {
            if ((this.List_FaultTypesByObjectIdOperationCompleted == null)) {
                this.List_FaultTypesByObjectIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_FaultTypesByObjectIdOperationCompleted);
            }
            this.InvokeAsync("List_FaultTypesByObjectId", new object[] {
                        objectTypeId,
                        DataSourceID}, this.List_FaultTypesByObjectIdOperationCompleted, userState);
        }
        
        private void OnList_FaultTypesByObjectIdOperationCompleted(object arg) {
            if ((this.List_FaultTypesByObjectIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_FaultTypesByObjectIdCompleted(this, new List_FaultTypesByObjectIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_FaultType_DataSource", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_FaultType_DataSource(string objectName, int datasourceTypeId) {
            object[] results = this.Invoke("List_FaultType_DataSource", new object[] {
                        objectName,
                        datasourceTypeId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_FaultType_DataSourceAsync(string objectName, int datasourceTypeId) {
            this.List_FaultType_DataSourceAsync(objectName, datasourceTypeId, null);
        }
        
        /// <remarks/>
        public void List_FaultType_DataSourceAsync(string objectName, int datasourceTypeId, object userState) {
            if ((this.List_FaultType_DataSourceOperationCompleted == null)) {
                this.List_FaultType_DataSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_FaultType_DataSourceOperationCompleted);
            }
            this.InvokeAsync("List_FaultType_DataSource", new object[] {
                        objectName,
                        datasourceTypeId}, this.List_FaultType_DataSourceOperationCompleted, userState);
        }
        
        private void OnList_FaultType_DataSourceOperationCompleted(object arg) {
            if ((this.List_FaultType_DataSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_FaultType_DataSourceCompleted(this, new List_FaultType_DataSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_FaultAcknowledgementSettings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_FaultAcknowledgementSettings(int DayTypeID, int Severity, int datasourceID, System.DateTime dtFromTime, System.DateTime dtToTime, int objectTypeID, int faultTypeID) {
            this.Invoke("New_FaultAcknowledgementSettings", new object[] {
                        DayTypeID,
                        Severity,
                        datasourceID,
                        dtFromTime,
                        dtToTime,
                        objectTypeID,
                        faultTypeID});
        }
        
        /// <remarks/>
        public void New_FaultAcknowledgementSettingsAsync(int DayTypeID, int Severity, int datasourceID, System.DateTime dtFromTime, System.DateTime dtToTime, int objectTypeID, int faultTypeID) {
            this.New_FaultAcknowledgementSettingsAsync(DayTypeID, Severity, datasourceID, dtFromTime, dtToTime, objectTypeID, faultTypeID, null);
        }
        
        /// <remarks/>
        public void New_FaultAcknowledgementSettingsAsync(int DayTypeID, int Severity, int datasourceID, System.DateTime dtFromTime, System.DateTime dtToTime, int objectTypeID, int faultTypeID, object userState) {
            if ((this.New_FaultAcknowledgementSettingsOperationCompleted == null)) {
                this.New_FaultAcknowledgementSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_FaultAcknowledgementSettingsOperationCompleted);
            }
            this.InvokeAsync("New_FaultAcknowledgementSettings", new object[] {
                        DayTypeID,
                        Severity,
                        datasourceID,
                        dtFromTime,
                        dtToTime,
                        objectTypeID,
                        faultTypeID}, this.New_FaultAcknowledgementSettingsOperationCompleted, userState);
        }
        
        private void OnNew_FaultAcknowledgementSettingsOperationCompleted(object arg) {
            if ((this.New_FaultAcknowledgementSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_FaultAcknowledgementSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/GetRegion", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRegion() {
            object[] results = this.Invoke("GetRegion", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRegionAsync() {
            this.GetRegionAsync(null);
        }
        
        /// <remarks/>
        public void GetRegionAsync(object userState) {
            if ((this.GetRegionOperationCompleted == null)) {
                this.GetRegionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRegionOperationCompleted);
            }
            this.InvokeAsync("GetRegion", new object[0], this.GetRegionOperationCompleted, userState);
        }
        
        private void OnGetRegionOperationCompleted(object arg) {
            if ((this.GetRegionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRegionCompleted(this, new GetRegionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/CheckSCNExist", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckSCNExist(string SystemCodeNumber, string tableName) {
            object[] results = this.Invoke("CheckSCNExist", new object[] {
                        SystemCodeNumber,
                        tableName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckSCNExistAsync(string SystemCodeNumber, string tableName) {
            this.CheckSCNExistAsync(SystemCodeNumber, tableName, null);
        }
        
        /// <remarks/>
        public void CheckSCNExistAsync(string SystemCodeNumber, string tableName, object userState) {
            if ((this.CheckSCNExistOperationCompleted == null)) {
                this.CheckSCNExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckSCNExistOperationCompleted);
            }
            this.InvokeAsync("CheckSCNExist", new object[] {
                        SystemCodeNumber,
                        tableName}, this.CheckSCNExistOperationCompleted, userState);
        }
        
        private void OnCheckSCNExistOperationCompleted(object arg) {
            if ((this.CheckSCNExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckSCNExistCompleted(this, new CheckSCNExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DataSource", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DataSource() {
            object[] results = this.Invoke("List_DataSource", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DataSourceAsync() {
            this.List_DataSourceAsync(null);
        }
        
        /// <remarks/>
        public void List_DataSourceAsync(object userState) {
            if ((this.List_DataSourceOperationCompleted == null)) {
                this.List_DataSourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DataSourceOperationCompleted);
            }
            this.InvokeAsync("List_DataSource", new object[0], this.List_DataSourceOperationCompleted, userState);
        }
        
        private void OnList_DataSourceOperationCompleted(object arg) {
            if ((this.List_DataSourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DataSourceCompleted(this, new List_DataSourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Severity", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Severity() {
            object[] results = this.Invoke("List_Severity", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_SeverityAsync() {
            this.List_SeverityAsync(null);
        }
        
        /// <remarks/>
        public void List_SeverityAsync(object userState) {
            if ((this.List_SeverityOperationCompleted == null)) {
                this.List_SeverityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_SeverityOperationCompleted);
            }
            this.InvokeAsync("List_Severity", new object[0], this.List_SeverityOperationCompleted, userState);
        }
        
        private void OnList_SeverityOperationCompleted(object arg) {
            if ((this.List_SeverityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_SeverityCompleted(this, new List_SeverityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Severity_WithClosures", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Severity_WithClosures() {
            object[] results = this.Invoke("List_Severity_WithClosures", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_Severity_WithClosuresAsync() {
            this.List_Severity_WithClosuresAsync(null);
        }
        
        /// <remarks/>
        public void List_Severity_WithClosuresAsync(object userState) {
            if ((this.List_Severity_WithClosuresOperationCompleted == null)) {
                this.List_Severity_WithClosuresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_Severity_WithClosuresOperationCompleted);
            }
            this.InvokeAsync("List_Severity_WithClosures", new object[0], this.List_Severity_WithClosuresOperationCompleted, userState);
        }
        
        private void OnList_Severity_WithClosuresOperationCompleted(object arg) {
            if ((this.List_Severity_WithClosuresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_Severity_WithClosuresCompleted(this, new List_Severity_WithClosuresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Type", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Type(string ObjectName) {
            object[] results = this.Invoke("List_Type", new object[] {
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_TypeAsync(string ObjectName) {
            this.List_TypeAsync(ObjectName, null);
        }
        
        /// <remarks/>
        public void List_TypeAsync(string ObjectName, object userState) {
            if ((this.List_TypeOperationCompleted == null)) {
                this.List_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_TypeOperationCompleted);
            }
            this.InvokeAsync("List_Type", new object[] {
                        ObjectName}, this.List_TypeOperationCompleted, userState);
        }
        
        private void OnList_TypeOperationCompleted(object arg) {
            if ((this.List_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_TypeCompleted(this, new List_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_QualityStatement", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_QualityStatement(string ObjectName) {
            object[] results = this.Invoke("List_QualityStatement", new object[] {
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_QualityStatementAsync(string ObjectName) {
            this.List_QualityStatementAsync(ObjectName, null);
        }
        
        /// <remarks/>
        public void List_QualityStatementAsync(string ObjectName, object userState) {
            if ((this.List_QualityStatementOperationCompleted == null)) {
                this.List_QualityStatementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_QualityStatementOperationCompleted);
            }
            this.InvokeAsync("List_QualityStatement", new object[] {
                        ObjectName}, this.List_QualityStatementOperationCompleted, userState);
        }
        
        private void OnList_QualityStatementOperationCompleted(object arg) {
            if ((this.List_QualityStatementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_QualityStatementCompleted(this, new List_QualityStatementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Passable_Route", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_Passable_Route(string RoueName, string GML, string LineString, int PassableState) {
            this.Invoke("New_Passable_Route", new object[] {
                        RoueName,
                        GML,
                        LineString,
                        PassableState});
        }
        
        /// <remarks/>
        public void New_Passable_RouteAsync(string RoueName, string GML, string LineString, int PassableState) {
            this.New_Passable_RouteAsync(RoueName, GML, LineString, PassableState, null);
        }
        
        /// <remarks/>
        public void New_Passable_RouteAsync(string RoueName, string GML, string LineString, int PassableState, object userState) {
            if ((this.New_Passable_RouteOperationCompleted == null)) {
                this.New_Passable_RouteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_Passable_RouteOperationCompleted);
            }
            this.InvokeAsync("New_Passable_Route", new object[] {
                        RoueName,
                        GML,
                        LineString,
                        PassableState}, this.New_Passable_RouteOperationCompleted, userState);
        }
        
        private void OnNew_Passable_RouteOperationCompleted(object arg) {
            if ((this.New_Passable_RouteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_Passable_RouteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Edit_Passable_Route", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Edit_Passable_Route(string SystemCodeNumber, string RoueName, string GML, string LineString, int PassableState) {
            this.Invoke("Edit_Passable_Route", new object[] {
                        SystemCodeNumber,
                        RoueName,
                        GML,
                        LineString,
                        PassableState});
        }
        
        /// <remarks/>
        public void Edit_Passable_RouteAsync(string SystemCodeNumber, string RoueName, string GML, string LineString, int PassableState) {
            this.Edit_Passable_RouteAsync(SystemCodeNumber, RoueName, GML, LineString, PassableState, null);
        }
        
        /// <remarks/>
        public void Edit_Passable_RouteAsync(string SystemCodeNumber, string RoueName, string GML, string LineString, int PassableState, object userState) {
            if ((this.Edit_Passable_RouteOperationCompleted == null)) {
                this.Edit_Passable_RouteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEdit_Passable_RouteOperationCompleted);
            }
            this.InvokeAsync("Edit_Passable_Route", new object[] {
                        SystemCodeNumber,
                        RoueName,
                        GML,
                        LineString,
                        PassableState}, this.Edit_Passable_RouteOperationCompleted, userState);
        }
        
        private void OnEdit_Passable_RouteOperationCompleted(object arg) {
            if ((this.Edit_Passable_RouteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Edit_Passable_RouteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Passable_Route", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Passable_Route() {
            object[] results = this.Invoke("List_Passable_Route", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_Passable_RouteAsync() {
            this.List_Passable_RouteAsync(null);
        }
        
        /// <remarks/>
        public void List_Passable_RouteAsync(object userState) {
            if ((this.List_Passable_RouteOperationCompleted == null)) {
                this.List_Passable_RouteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_Passable_RouteOperationCompleted);
            }
            this.InvokeAsync("List_Passable_Route", new object[0], this.List_Passable_RouteOperationCompleted, userState);
        }
        
        private void OnList_Passable_RouteOperationCompleted(object arg) {
            if ((this.List_Passable_RouteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_Passable_RouteCompleted(this, new List_Passable_RouteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_PassableRouteBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_PassableRouteBySCN(string SystemCodeNumber) {
            object[] results = this.Invoke("View_PassableRouteBySCN", new object[] {
                        SystemCodeNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_PassableRouteBySCNAsync(string SystemCodeNumber) {
            this.View_PassableRouteBySCNAsync(SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void View_PassableRouteBySCNAsync(string SystemCodeNumber, object userState) {
            if ((this.View_PassableRouteBySCNOperationCompleted == null)) {
                this.View_PassableRouteBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_PassableRouteBySCNOperationCompleted);
            }
            this.InvokeAsync("View_PassableRouteBySCN", new object[] {
                        SystemCodeNumber}, this.View_PassableRouteBySCNOperationCompleted, userState);
        }
        
        private void OnView_PassableRouteBySCNOperationCompleted(object arg) {
            if ((this.View_PassableRouteBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_PassableRouteBySCNCompleted(this, new View_PassableRouteBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Update_Passable_Route", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_Passable_Route(string[] PassableRoute) {
            this.Invoke("Update_Passable_Route", new object[] {
                        PassableRoute});
        }
        
        /// <remarks/>
        public void Update_Passable_RouteAsync(string[] PassableRoute) {
            this.Update_Passable_RouteAsync(PassableRoute, null);
        }
        
        /// <remarks/>
        public void Update_Passable_RouteAsync(string[] PassableRoute, object userState) {
            if ((this.Update_Passable_RouteOperationCompleted == null)) {
                this.Update_Passable_RouteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Passable_RouteOperationCompleted);
            }
            this.InvokeAsync("Update_Passable_Route", new object[] {
                        PassableRoute}, this.Update_Passable_RouteOperationCompleted, userState);
        }
        
        private void OnUpdate_Passable_RouteOperationCompleted(object arg) {
            if ((this.Update_Passable_RouteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_Passable_RouteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/isPassableStateChanged", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isPassableStateChanged(string[] PassableRoute) {
            object[] results = this.Invoke("isPassableStateChanged", new object[] {
                        PassableRoute});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isPassableStateChangedAsync(string[] PassableRoute) {
            this.isPassableStateChangedAsync(PassableRoute, null);
        }
        
        /// <remarks/>
        public void isPassableStateChangedAsync(string[] PassableRoute, object userState) {
            if ((this.isPassableStateChangedOperationCompleted == null)) {
                this.isPassableStateChangedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisPassableStateChangedOperationCompleted);
            }
            this.InvokeAsync("isPassableStateChanged", new object[] {
                        PassableRoute}, this.isPassableStateChangedOperationCompleted, userState);
        }
        
        private void OnisPassableStateChangedOperationCompleted(object arg) {
            if ((this.isPassableStateChangedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isPassableStateChangedCompleted(this, new isPassableStateChangedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_Passable_Route", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_Passable_Route(string SystemCodeNumber) {
            this.Invoke("Delete_Passable_Route", new object[] {
                        SystemCodeNumber});
        }
        
        /// <remarks/>
        public void Delete_Passable_RouteAsync(string SystemCodeNumber) {
            this.Delete_Passable_RouteAsync(SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void Delete_Passable_RouteAsync(string SystemCodeNumber, object userState) {
            if ((this.Delete_Passable_RouteOperationCompleted == null)) {
                this.Delete_Passable_RouteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Passable_RouteOperationCompleted);
            }
            this.InvokeAsync("Delete_Passable_Route", new object[] {
                        SystemCodeNumber}, this.Delete_Passable_RouteOperationCompleted, userState);
        }
        
        private void OnDelete_Passable_RouteOperationCompleted(object arg) {
            if ((this.Delete_Passable_RouteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Passable_RouteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_Subscription_Alert_Incident", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_Subscription_Alert_Incident(string ObjectName, string SystemCodeNumber) {
            this.Invoke("Delete_Subscription_Alert_Incident", new object[] {
                        ObjectName,
                        SystemCodeNumber});
        }
        
        /// <remarks/>
        public void Delete_Subscription_Alert_IncidentAsync(string ObjectName, string SystemCodeNumber) {
            this.Delete_Subscription_Alert_IncidentAsync(ObjectName, SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void Delete_Subscription_Alert_IncidentAsync(string ObjectName, string SystemCodeNumber, object userState) {
            if ((this.Delete_Subscription_Alert_IncidentOperationCompleted == null)) {
                this.Delete_Subscription_Alert_IncidentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Subscription_Alert_IncidentOperationCompleted);
            }
            this.InvokeAsync("Delete_Subscription_Alert_Incident", new object[] {
                        ObjectName,
                        SystemCodeNumber}, this.Delete_Subscription_Alert_IncidentOperationCompleted, userState);
        }
        
        private void OnDelete_Subscription_Alert_IncidentOperationCompleted(object arg) {
            if ((this.Delete_Subscription_Alert_IncidentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Subscription_Alert_IncidentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_PanelTypeID", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_PanelTypeID() {
            object[] results = this.Invoke("List_PanelTypeID", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_PanelTypeIDAsync() {
            this.List_PanelTypeIDAsync(null);
        }
        
        /// <remarks/>
        public void List_PanelTypeIDAsync(object userState) {
            if ((this.List_PanelTypeIDOperationCompleted == null)) {
                this.List_PanelTypeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_PanelTypeIDOperationCompleted);
            }
            this.InvokeAsync("List_PanelTypeID", new object[0], this.List_PanelTypeIDOperationCompleted, userState);
        }
        
        private void OnList_PanelTypeIDOperationCompleted(object arg) {
            if ((this.List_PanelTypeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_PanelTypeIDCompleted(this, new List_PanelTypeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_DeviceHistoryEntry", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_DeviceHistoryEntry(string UserID, string SystemCodeNumber, string ActionID, string SourceID) {
            this.Invoke("New_DeviceHistoryEntry", new object[] {
                        UserID,
                        SystemCodeNumber,
                        ActionID,
                        SourceID});
        }
        
        /// <remarks/>
        public void New_DeviceHistoryEntryAsync(string UserID, string SystemCodeNumber, string ActionID, string SourceID) {
            this.New_DeviceHistoryEntryAsync(UserID, SystemCodeNumber, ActionID, SourceID, null);
        }
        
        /// <remarks/>
        public void New_DeviceHistoryEntryAsync(string UserID, string SystemCodeNumber, string ActionID, string SourceID, object userState) {
            if ((this.New_DeviceHistoryEntryOperationCompleted == null)) {
                this.New_DeviceHistoryEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_DeviceHistoryEntryOperationCompleted);
            }
            this.InvokeAsync("New_DeviceHistoryEntry", new object[] {
                        UserID,
                        SystemCodeNumber,
                        ActionID,
                        SourceID}, this.New_DeviceHistoryEntryOperationCompleted, userState);
        }
        
        private void OnNew_DeviceHistoryEntryOperationCompleted(object arg) {
            if ((this.New_DeviceHistoryEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_DeviceHistoryEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_AccidentWithLocation", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string New_AccidentWithLocation(
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime AccidentTime, 
                    System.DateTime EndDate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Phase, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> LanesAffected, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string[] DiversionRoutesSCNS, 
                    bool IsTwitter, 
                    int Voyager, 
                    string Summary, 
                    string Advice, 
                    int Status, 
                    bool IsRecuuring) {
            object[] results = this.Invoke("New_AccidentWithLocation", new object[] {
                        Name,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        AccidentTime,
                        EndDate,
                        DiversionInForce,
                        DiversionRoute,
                        Phase,
                        LanesAffected,
                        UserID,
                        unmappedSystemCodeNumber,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        WardName,
                        Area,
                        UserName,
                        DiversionRoutesSCNS,
                        IsTwitter,
                        Voyager,
                        Summary,
                        Advice,
                        Status,
                        IsRecuuring});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void New_AccidentWithLocationAsync(
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime AccidentTime, 
                    System.DateTime EndDate, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Phase, 
                    System.Nullable<int> LanesAffected, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string[] DiversionRoutesSCNS, 
                    bool IsTwitter, 
                    int Voyager, 
                    string Summary, 
                    string Advice, 
                    int Status, 
                    bool IsRecuuring) {
            this.New_AccidentWithLocationAsync(Name, ShortDescription, LongDescription, LocationDesc, TypeID, QualityStatementID, DataSource_TypeID, Severity, AccidentTime, EndDate, DiversionInForce, DiversionRoute, Phase, LanesAffected, UserID, unmappedSystemCodeNumber, easting, northing, diversionRoute1, diversionRoute2, diversionRoute3, diversionRoute4, WardName, Area, UserName, DiversionRoutesSCNS, IsTwitter, Voyager, Summary, Advice, Status, IsRecuuring, null);
        }
        
        /// <remarks/>
        public void New_AccidentWithLocationAsync(
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime AccidentTime, 
                    System.DateTime EndDate, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Phase, 
                    System.Nullable<int> LanesAffected, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string[] DiversionRoutesSCNS, 
                    bool IsTwitter, 
                    int Voyager, 
                    string Summary, 
                    string Advice, 
                    int Status, 
                    bool IsRecuuring, 
                    object userState) {
            if ((this.New_AccidentWithLocationOperationCompleted == null)) {
                this.New_AccidentWithLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_AccidentWithLocationOperationCompleted);
            }
            this.InvokeAsync("New_AccidentWithLocation", new object[] {
                        Name,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        AccidentTime,
                        EndDate,
                        DiversionInForce,
                        DiversionRoute,
                        Phase,
                        LanesAffected,
                        UserID,
                        unmappedSystemCodeNumber,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        WardName,
                        Area,
                        UserName,
                        DiversionRoutesSCNS,
                        IsTwitter,
                        Voyager,
                        Summary,
                        Advice,
                        Status,
                        IsRecuuring}, this.New_AccidentWithLocationOperationCompleted, userState);
        }
        
        private void OnNew_AccidentWithLocationOperationCompleted(object arg) {
            if ((this.New_AccidentWithLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_AccidentWithLocationCompleted(this, new New_AccidentWithLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Edit_AccidentWithLocation", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Edit_AccidentWithLocation(
                    string SystemCodeNumber, 
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime AccidentTime, 
                    System.DateTime EndDate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Phase, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> LanesAffected, 
                    string UserID, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string existingSCN, 
                    string[] DiversionRoutesSCNS, 
                    bool IsTwitter, 
                    int Voyager, 
                    string Summary, 
                    string Advice, 
                    int Status, 
                    bool IsRecurring) {
            this.Invoke("Edit_AccidentWithLocation", new object[] {
                        SystemCodeNumber,
                        Name,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        AccidentTime,
                        EndDate,
                        DiversionInForce,
                        DiversionRoute,
                        Phase,
                        LanesAffected,
                        UserID,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        WardName,
                        Area,
                        UserName,
                        existingSCN,
                        DiversionRoutesSCNS,
                        IsTwitter,
                        Voyager,
                        Summary,
                        Advice,
                        Status,
                        IsRecurring});
        }
        
        /// <remarks/>
        public void Edit_AccidentWithLocationAsync(
                    string SystemCodeNumber, 
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime AccidentTime, 
                    System.DateTime EndDate, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Phase, 
                    System.Nullable<int> LanesAffected, 
                    string UserID, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string existingSCN, 
                    string[] DiversionRoutesSCNS, 
                    bool IsTwitter, 
                    int Voyager, 
                    string Summary, 
                    string Advice, 
                    int Status, 
                    bool IsRecurring) {
            this.Edit_AccidentWithLocationAsync(SystemCodeNumber, Name, ShortDescription, LongDescription, LocationDesc, TypeID, QualityStatementID, DataSource_TypeID, Severity, AccidentTime, EndDate, DiversionInForce, DiversionRoute, Phase, LanesAffected, UserID, easting, northing, diversionRoute1, diversionRoute2, diversionRoute3, diversionRoute4, WardName, Area, UserName, existingSCN, DiversionRoutesSCNS, IsTwitter, Voyager, Summary, Advice, Status, IsRecurring, null);
        }
        
        /// <remarks/>
        public void Edit_AccidentWithLocationAsync(
                    string SystemCodeNumber, 
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime AccidentTime, 
                    System.DateTime EndDate, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Phase, 
                    System.Nullable<int> LanesAffected, 
                    string UserID, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string existingSCN, 
                    string[] DiversionRoutesSCNS, 
                    bool IsTwitter, 
                    int Voyager, 
                    string Summary, 
                    string Advice, 
                    int Status, 
                    bool IsRecurring, 
                    object userState) {
            if ((this.Edit_AccidentWithLocationOperationCompleted == null)) {
                this.Edit_AccidentWithLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEdit_AccidentWithLocationOperationCompleted);
            }
            this.InvokeAsync("Edit_AccidentWithLocation", new object[] {
                        SystemCodeNumber,
                        Name,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        AccidentTime,
                        EndDate,
                        DiversionInForce,
                        DiversionRoute,
                        Phase,
                        LanesAffected,
                        UserID,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        WardName,
                        Area,
                        UserName,
                        existingSCN,
                        DiversionRoutesSCNS,
                        IsTwitter,
                        Voyager,
                        Summary,
                        Advice,
                        Status,
                        IsRecurring}, this.Edit_AccidentWithLocationOperationCompleted, userState);
        }
        
        private void OnEdit_AccidentWithLocationOperationCompleted(object arg) {
            if ((this.Edit_AccidentWithLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Edit_AccidentWithLocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_IncidentWithLocation", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string New_IncidentWithLocation(
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime IncidentTime, 
                    System.DateTime EndDate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Phase, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> lanesAffected, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string[] DiversionRoutesSCNS, 
                    bool IsTwitter, 
                    int Voyager, 
                    bool IsScnModified, 
                    string Summary, 
                    string Advice, 
                    int Status, 
                    bool IsRecurring) {
            object[] results = this.Invoke("New_IncidentWithLocation", new object[] {
                        Name,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        IncidentTime,
                        EndDate,
                        DiversionInForce,
                        DiversionRoute,
                        Phase,
                        lanesAffected,
                        UserID,
                        unmappedSystemCodeNumber,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        WardName,
                        Area,
                        UserName,
                        DiversionRoutesSCNS,
                        IsTwitter,
                        Voyager,
                        IsScnModified,
                        Summary,
                        Advice,
                        Status,
                        IsRecurring});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void New_IncidentWithLocationAsync(
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime IncidentTime, 
                    System.DateTime EndDate, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Phase, 
                    System.Nullable<int> lanesAffected, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string[] DiversionRoutesSCNS, 
                    bool IsTwitter, 
                    int Voyager, 
                    bool IsScnModified, 
                    string Summary, 
                    string Advice, 
                    int Status, 
                    bool IsRecurring) {
            this.New_IncidentWithLocationAsync(Name, ShortDescription, LongDescription, LocationDesc, TypeID, QualityStatementID, DataSource_TypeID, Severity, IncidentTime, EndDate, DiversionInForce, DiversionRoute, Phase, lanesAffected, UserID, unmappedSystemCodeNumber, easting, northing, diversionRoute1, diversionRoute2, diversionRoute3, diversionRoute4, WardName, Area, UserName, DiversionRoutesSCNS, IsTwitter, Voyager, IsScnModified, Summary, Advice, Status, IsRecurring, null);
        }
        
        /// <remarks/>
        public void New_IncidentWithLocationAsync(
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime IncidentTime, 
                    System.DateTime EndDate, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Phase, 
                    System.Nullable<int> lanesAffected, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string[] DiversionRoutesSCNS, 
                    bool IsTwitter, 
                    int Voyager, 
                    bool IsScnModified, 
                    string Summary, 
                    string Advice, 
                    int Status, 
                    bool IsRecurring, 
                    object userState) {
            if ((this.New_IncidentWithLocationOperationCompleted == null)) {
                this.New_IncidentWithLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_IncidentWithLocationOperationCompleted);
            }
            this.InvokeAsync("New_IncidentWithLocation", new object[] {
                        Name,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        IncidentTime,
                        EndDate,
                        DiversionInForce,
                        DiversionRoute,
                        Phase,
                        lanesAffected,
                        UserID,
                        unmappedSystemCodeNumber,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        WardName,
                        Area,
                        UserName,
                        DiversionRoutesSCNS,
                        IsTwitter,
                        Voyager,
                        IsScnModified,
                        Summary,
                        Advice,
                        Status,
                        IsRecurring}, this.New_IncidentWithLocationOperationCompleted, userState);
        }
        
        private void OnNew_IncidentWithLocationOperationCompleted(object arg) {
            if ((this.New_IncidentWithLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_IncidentWithLocationCompleted(this, new New_IncidentWithLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Edit_IncidentWithLocation", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Edit_IncidentWithLocation(
                    string SystemCodeNumber, 
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime IncidentTime, 
                    System.DateTime EndDate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Phase, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> LanesAffected, 
                    string UserID, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string existingSCN, 
                    string[] DiversionRoutesSCNS, 
                    bool IsTwitter, 
                    int Voyager, 
                    string Summary, 
                    string Advice, 
                    int Status, 
                    bool IsRecurring) {
            this.Invoke("Edit_IncidentWithLocation", new object[] {
                        SystemCodeNumber,
                        Name,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        IncidentTime,
                        EndDate,
                        DiversionInForce,
                        DiversionRoute,
                        Phase,
                        LanesAffected,
                        UserID,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        WardName,
                        Area,
                        UserName,
                        existingSCN,
                        DiversionRoutesSCNS,
                        IsTwitter,
                        Voyager,
                        Summary,
                        Advice,
                        Status,
                        IsRecurring});
        }
        
        /// <remarks/>
        public void Edit_IncidentWithLocationAsync(
                    string SystemCodeNumber, 
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime IncidentTime, 
                    System.DateTime EndDate, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Phase, 
                    System.Nullable<int> LanesAffected, 
                    string UserID, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string existingSCN, 
                    string[] DiversionRoutesSCNS, 
                    bool IsTwitter, 
                    int Voyager, 
                    string Summary, 
                    string Advice, 
                    int Status, 
                    bool IsRecurring) {
            this.Edit_IncidentWithLocationAsync(SystemCodeNumber, Name, ShortDescription, LongDescription, LocationDesc, TypeID, QualityStatementID, DataSource_TypeID, Severity, IncidentTime, EndDate, DiversionInForce, DiversionRoute, Phase, LanesAffected, UserID, easting, northing, diversionRoute1, diversionRoute2, diversionRoute3, diversionRoute4, WardName, Area, UserName, existingSCN, DiversionRoutesSCNS, IsTwitter, Voyager, Summary, Advice, Status, IsRecurring, null);
        }
        
        /// <remarks/>
        public void Edit_IncidentWithLocationAsync(
                    string SystemCodeNumber, 
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime IncidentTime, 
                    System.DateTime EndDate, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Phase, 
                    System.Nullable<int> LanesAffected, 
                    string UserID, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string existingSCN, 
                    string[] DiversionRoutesSCNS, 
                    bool IsTwitter, 
                    int Voyager, 
                    string Summary, 
                    string Advice, 
                    int Status, 
                    bool IsRecurring, 
                    object userState) {
            if ((this.Edit_IncidentWithLocationOperationCompleted == null)) {
                this.Edit_IncidentWithLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEdit_IncidentWithLocationOperationCompleted);
            }
            this.InvokeAsync("Edit_IncidentWithLocation", new object[] {
                        SystemCodeNumber,
                        Name,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        IncidentTime,
                        EndDate,
                        DiversionInForce,
                        DiversionRoute,
                        Phase,
                        LanesAffected,
                        UserID,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        WardName,
                        Area,
                        UserName,
                        existingSCN,
                        DiversionRoutesSCNS,
                        IsTwitter,
                        Voyager,
                        Summary,
                        Advice,
                        Status,
                        IsRecurring}, this.Edit_IncidentWithLocationOperationCompleted, userState);
        }
        
        private void OnEdit_IncidentWithLocationOperationCompleted(object arg) {
            if ((this.Edit_IncidentWithLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Edit_IncidentWithLocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_RoadworksWithLocation", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string New_RoadworksWithLocation(
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime PlannedStart, 
                    System.DateTime PlannedEnd, 
                    System.DateTime ActualStart, 
                    System.DateTime ActualEnd, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Contractor, 
                    string ContactName, 
                    string ContactNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> TrafficSignals, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> Contraflow, 
                    string Phase, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> lanesAffected, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> weatherDependent, 
                    string sUserName, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string url1, 
                    string url2, 
                    string url3, 
                    string url4, 
                    string WardName, 
                    string Area, 
                    string[] DiversionRouteSCNS, 
                    int locationtype, 
                    bool IsTwitter, 
                    int Voyager, 
                    string[] POIAffected, 
                    string[] CarParkAffected, 
                    string[] NAPTANAffected, 
                    string summary, 
                    string advice, 
                    int status, 
                    bool IsRecurring) {
            object[] results = this.Invoke("New_RoadworksWithLocation", new object[] {
                        Name,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        PlannedStart,
                        PlannedEnd,
                        ActualStart,
                        ActualEnd,
                        DiversionInForce,
                        DiversionRoute,
                        Contractor,
                        ContactName,
                        ContactNo,
                        TrafficSignals,
                        Contraflow,
                        Phase,
                        lanesAffected,
                        UserID,
                        unmappedSystemCodeNumber,
                        weatherDependent,
                        sUserName,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        url1,
                        url2,
                        url3,
                        url4,
                        WardName,
                        Area,
                        DiversionRouteSCNS,
                        locationtype,
                        IsTwitter,
                        Voyager,
                        POIAffected,
                        CarParkAffected,
                        NAPTANAffected,
                        summary,
                        advice,
                        status,
                        IsRecurring});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void New_RoadworksWithLocationAsync(
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime PlannedStart, 
                    System.DateTime PlannedEnd, 
                    System.DateTime ActualStart, 
                    System.DateTime ActualEnd, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Contractor, 
                    string ContactName, 
                    string ContactNo, 
                    System.Nullable<char> TrafficSignals, 
                    System.Nullable<char> Contraflow, 
                    string Phase, 
                    System.Nullable<int> lanesAffected, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    System.Nullable<char> weatherDependent, 
                    string sUserName, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string url1, 
                    string url2, 
                    string url3, 
                    string url4, 
                    string WardName, 
                    string Area, 
                    string[] DiversionRouteSCNS, 
                    int locationtype, 
                    bool IsTwitter, 
                    int Voyager, 
                    string[] POIAffected, 
                    string[] CarParkAffected, 
                    string[] NAPTANAffected, 
                    string summary, 
                    string advice, 
                    int status, 
                    bool IsRecurring) {
            this.New_RoadworksWithLocationAsync(Name, ShortDescription, LongDescription, LocationDesc, TypeID, QualityStatementID, DataSource_TypeID, Severity, PlannedStart, PlannedEnd, ActualStart, ActualEnd, DiversionInForce, DiversionRoute, Contractor, ContactName, ContactNo, TrafficSignals, Contraflow, Phase, lanesAffected, UserID, unmappedSystemCodeNumber, weatherDependent, sUserName, easting, northing, diversionRoute1, diversionRoute2, diversionRoute3, diversionRoute4, url1, url2, url3, url4, WardName, Area, DiversionRouteSCNS, locationtype, IsTwitter, Voyager, POIAffected, CarParkAffected, NAPTANAffected, summary, advice, status, IsRecurring, null);
        }
        
        /// <remarks/>
        public void New_RoadworksWithLocationAsync(
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime PlannedStart, 
                    System.DateTime PlannedEnd, 
                    System.DateTime ActualStart, 
                    System.DateTime ActualEnd, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Contractor, 
                    string ContactName, 
                    string ContactNo, 
                    System.Nullable<char> TrafficSignals, 
                    System.Nullable<char> Contraflow, 
                    string Phase, 
                    System.Nullable<int> lanesAffected, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    System.Nullable<char> weatherDependent, 
                    string sUserName, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string url1, 
                    string url2, 
                    string url3, 
                    string url4, 
                    string WardName, 
                    string Area, 
                    string[] DiversionRouteSCNS, 
                    int locationtype, 
                    bool IsTwitter, 
                    int Voyager, 
                    string[] POIAffected, 
                    string[] CarParkAffected, 
                    string[] NAPTANAffected, 
                    string summary, 
                    string advice, 
                    int status, 
                    bool IsRecurring, 
                    object userState) {
            if ((this.New_RoadworksWithLocationOperationCompleted == null)) {
                this.New_RoadworksWithLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_RoadworksWithLocationOperationCompleted);
            }
            this.InvokeAsync("New_RoadworksWithLocation", new object[] {
                        Name,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        PlannedStart,
                        PlannedEnd,
                        ActualStart,
                        ActualEnd,
                        DiversionInForce,
                        DiversionRoute,
                        Contractor,
                        ContactName,
                        ContactNo,
                        TrafficSignals,
                        Contraflow,
                        Phase,
                        lanesAffected,
                        UserID,
                        unmappedSystemCodeNumber,
                        weatherDependent,
                        sUserName,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        url1,
                        url2,
                        url3,
                        url4,
                        WardName,
                        Area,
                        DiversionRouteSCNS,
                        locationtype,
                        IsTwitter,
                        Voyager,
                        POIAffected,
                        CarParkAffected,
                        NAPTANAffected,
                        summary,
                        advice,
                        status,
                        IsRecurring}, this.New_RoadworksWithLocationOperationCompleted, userState);
        }
        
        private void OnNew_RoadworksWithLocationOperationCompleted(object arg) {
            if ((this.New_RoadworksWithLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_RoadworksWithLocationCompleted(this, new New_RoadworksWithLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Edit_RoadworksWithLocation", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Edit_RoadworksWithLocation(
                    string SystemCodeNumber, 
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime PlannedStart, 
                    System.DateTime PlannedEnd, 
                    System.DateTime ActualStart, 
                    System.DateTime ActualEnd, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Contractor, 
                    string ContactName, 
                    string ContactNo, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> TrafficSignals, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> Contraflow, 
                    string Phase, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> LanesAffected, 
                    string UserID, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> weatherDependent, 
                    string sUserName, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string url1, 
                    string url2, 
                    string url3, 
                    string url4, 
                    string WardName, 
                    string Area, 
                    string existingSCN, 
                    string[] DiversionRoutesSCNS, 
                    int locationtype, 
                    bool IsTwitter, 
                    int Voyager, 
                    string[] POIAffected, 
                    string[] CarParkAffected, 
                    string[] NAPTANAffected, 
                    string summary, 
                    string advice, 
                    int status, 
                    bool IsRecurring) {
            this.Invoke("Edit_RoadworksWithLocation", new object[] {
                        SystemCodeNumber,
                        Name,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        PlannedStart,
                        PlannedEnd,
                        ActualStart,
                        ActualEnd,
                        DiversionInForce,
                        DiversionRoute,
                        Contractor,
                        ContactName,
                        ContactNo,
                        TrafficSignals,
                        Contraflow,
                        Phase,
                        LanesAffected,
                        UserID,
                        weatherDependent,
                        sUserName,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        url1,
                        url2,
                        url3,
                        url4,
                        WardName,
                        Area,
                        existingSCN,
                        DiversionRoutesSCNS,
                        locationtype,
                        IsTwitter,
                        Voyager,
                        POIAffected,
                        CarParkAffected,
                        NAPTANAffected,
                        summary,
                        advice,
                        status,
                        IsRecurring});
        }
        
        /// <remarks/>
        public void Edit_RoadworksWithLocationAsync(
                    string SystemCodeNumber, 
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime PlannedStart, 
                    System.DateTime PlannedEnd, 
                    System.DateTime ActualStart, 
                    System.DateTime ActualEnd, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Contractor, 
                    string ContactName, 
                    string ContactNo, 
                    System.Nullable<char> TrafficSignals, 
                    System.Nullable<char> Contraflow, 
                    string Phase, 
                    System.Nullable<int> LanesAffected, 
                    string UserID, 
                    System.Nullable<char> weatherDependent, 
                    string sUserName, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string url1, 
                    string url2, 
                    string url3, 
                    string url4, 
                    string WardName, 
                    string Area, 
                    string existingSCN, 
                    string[] DiversionRoutesSCNS, 
                    int locationtype, 
                    bool IsTwitter, 
                    int Voyager, 
                    string[] POIAffected, 
                    string[] CarParkAffected, 
                    string[] NAPTANAffected, 
                    string summary, 
                    string advice, 
                    int status, 
                    bool IsRecurring) {
            this.Edit_RoadworksWithLocationAsync(SystemCodeNumber, Name, ShortDescription, LongDescription, LocationDesc, TypeID, QualityStatementID, DataSource_TypeID, Severity, PlannedStart, PlannedEnd, ActualStart, ActualEnd, DiversionInForce, DiversionRoute, Contractor, ContactName, ContactNo, TrafficSignals, Contraflow, Phase, LanesAffected, UserID, weatherDependent, sUserName, easting, northing, diversionRoute1, diversionRoute2, diversionRoute3, diversionRoute4, url1, url2, url3, url4, WardName, Area, existingSCN, DiversionRoutesSCNS, locationtype, IsTwitter, Voyager, POIAffected, CarParkAffected, NAPTANAffected, summary, advice, status, IsRecurring, null);
        }
        
        /// <remarks/>
        public void Edit_RoadworksWithLocationAsync(
                    string SystemCodeNumber, 
                    string Name, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime PlannedStart, 
                    System.DateTime PlannedEnd, 
                    System.DateTime ActualStart, 
                    System.DateTime ActualEnd, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Contractor, 
                    string ContactName, 
                    string ContactNo, 
                    System.Nullable<char> TrafficSignals, 
                    System.Nullable<char> Contraflow, 
                    string Phase, 
                    System.Nullable<int> LanesAffected, 
                    string UserID, 
                    System.Nullable<char> weatherDependent, 
                    string sUserName, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string url1, 
                    string url2, 
                    string url3, 
                    string url4, 
                    string WardName, 
                    string Area, 
                    string existingSCN, 
                    string[] DiversionRoutesSCNS, 
                    int locationtype, 
                    bool IsTwitter, 
                    int Voyager, 
                    string[] POIAffected, 
                    string[] CarParkAffected, 
                    string[] NAPTANAffected, 
                    string summary, 
                    string advice, 
                    int status, 
                    bool IsRecurring, 
                    object userState) {
            if ((this.Edit_RoadworksWithLocationOperationCompleted == null)) {
                this.Edit_RoadworksWithLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEdit_RoadworksWithLocationOperationCompleted);
            }
            this.InvokeAsync("Edit_RoadworksWithLocation", new object[] {
                        SystemCodeNumber,
                        Name,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        PlannedStart,
                        PlannedEnd,
                        ActualStart,
                        ActualEnd,
                        DiversionInForce,
                        DiversionRoute,
                        Contractor,
                        ContactName,
                        ContactNo,
                        TrafficSignals,
                        Contraflow,
                        Phase,
                        LanesAffected,
                        UserID,
                        weatherDependent,
                        sUserName,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        url1,
                        url2,
                        url3,
                        url4,
                        WardName,
                        Area,
                        existingSCN,
                        DiversionRoutesSCNS,
                        locationtype,
                        IsTwitter,
                        Voyager,
                        POIAffected,
                        CarParkAffected,
                        NAPTANAffected,
                        summary,
                        advice,
                        status,
                        IsRecurring}, this.Edit_RoadworksWithLocationOperationCompleted, userState);
        }
        
        private void OnEdit_RoadworksWithLocationOperationCompleted(object arg) {
            if ((this.Edit_RoadworksWithLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Edit_RoadworksWithLocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_EventWithLocation", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string New_EventWithLocation(
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime PlannedStart, 
                    System.DateTime PlannedEnd, 
                    System.DateTime ActualStart, 
                    System.DateTime ActualEnd, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Organiser, 
                    string ContactName, 
                    string ContactNo, 
                    string VenueName, 
                    string Phase, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> lanesAffected, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    string name, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> weatherDependent, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string[] DiversionRoutesSCNS, 
                    int LocationType, 
                    bool IsTwitter, 
                    int Voyager, 
                    string url1, 
                    string url2, 
                    string url3, 
                    string url4, 
                    string attendance, 
                    string[] POIAffected, 
                    string[] CarParkAffected, 
                    string[] NAPTANAffected, 
                    string summary, 
                    string advice, 
                    int status, 
                    bool IsRecurring) {
            object[] results = this.Invoke("New_EventWithLocation", new object[] {
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        PlannedStart,
                        PlannedEnd,
                        ActualStart,
                        ActualEnd,
                        DiversionInForce,
                        DiversionRoute,
                        Organiser,
                        ContactName,
                        ContactNo,
                        VenueName,
                        Phase,
                        lanesAffected,
                        UserID,
                        unmappedSystemCodeNumber,
                        name,
                        weatherDependent,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        WardName,
                        Area,
                        UserName,
                        DiversionRoutesSCNS,
                        LocationType,
                        IsTwitter,
                        Voyager,
                        url1,
                        url2,
                        url3,
                        url4,
                        attendance,
                        POIAffected,
                        CarParkAffected,
                        NAPTANAffected,
                        summary,
                        advice,
                        status,
                        IsRecurring});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void New_EventWithLocationAsync(
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime PlannedStart, 
                    System.DateTime PlannedEnd, 
                    System.DateTime ActualStart, 
                    System.DateTime ActualEnd, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Organiser, 
                    string ContactName, 
                    string ContactNo, 
                    string VenueName, 
                    string Phase, 
                    System.Nullable<int> lanesAffected, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    string name, 
                    System.Nullable<char> weatherDependent, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string[] DiversionRoutesSCNS, 
                    int LocationType, 
                    bool IsTwitter, 
                    int Voyager, 
                    string url1, 
                    string url2, 
                    string url3, 
                    string url4, 
                    string attendance, 
                    string[] POIAffected, 
                    string[] CarParkAffected, 
                    string[] NAPTANAffected, 
                    string summary, 
                    string advice, 
                    int status, 
                    bool IsRecurring) {
            this.New_EventWithLocationAsync(ShortDescription, LongDescription, LocationDesc, TypeID, QualityStatementID, DataSource_TypeID, Severity, PlannedStart, PlannedEnd, ActualStart, ActualEnd, DiversionInForce, DiversionRoute, Organiser, ContactName, ContactNo, VenueName, Phase, lanesAffected, UserID, unmappedSystemCodeNumber, name, weatherDependent, easting, northing, diversionRoute1, diversionRoute2, diversionRoute3, diversionRoute4, WardName, Area, UserName, DiversionRoutesSCNS, LocationType, IsTwitter, Voyager, url1, url2, url3, url4, attendance, POIAffected, CarParkAffected, NAPTANAffected, summary, advice, status, IsRecurring, null);
        }
        
        /// <remarks/>
        public void New_EventWithLocationAsync(
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime PlannedStart, 
                    System.DateTime PlannedEnd, 
                    System.DateTime ActualStart, 
                    System.DateTime ActualEnd, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Organiser, 
                    string ContactName, 
                    string ContactNo, 
                    string VenueName, 
                    string Phase, 
                    System.Nullable<int> lanesAffected, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    string name, 
                    System.Nullable<char> weatherDependent, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string[] DiversionRoutesSCNS, 
                    int LocationType, 
                    bool IsTwitter, 
                    int Voyager, 
                    string url1, 
                    string url2, 
                    string url3, 
                    string url4, 
                    string attendance, 
                    string[] POIAffected, 
                    string[] CarParkAffected, 
                    string[] NAPTANAffected, 
                    string summary, 
                    string advice, 
                    int status, 
                    bool IsRecurring, 
                    object userState) {
            if ((this.New_EventWithLocationOperationCompleted == null)) {
                this.New_EventWithLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_EventWithLocationOperationCompleted);
            }
            this.InvokeAsync("New_EventWithLocation", new object[] {
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        PlannedStart,
                        PlannedEnd,
                        ActualStart,
                        ActualEnd,
                        DiversionInForce,
                        DiversionRoute,
                        Organiser,
                        ContactName,
                        ContactNo,
                        VenueName,
                        Phase,
                        lanesAffected,
                        UserID,
                        unmappedSystemCodeNumber,
                        name,
                        weatherDependent,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        WardName,
                        Area,
                        UserName,
                        DiversionRoutesSCNS,
                        LocationType,
                        IsTwitter,
                        Voyager,
                        url1,
                        url2,
                        url3,
                        url4,
                        attendance,
                        POIAffected,
                        CarParkAffected,
                        NAPTANAffected,
                        summary,
                        advice,
                        status,
                        IsRecurring}, this.New_EventWithLocationOperationCompleted, userState);
        }
        
        private void OnNew_EventWithLocationOperationCompleted(object arg) {
            if ((this.New_EventWithLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_EventWithLocationCompleted(this, new New_EventWithLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Edit_EventWithLocation", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Edit_EventWithLocation(
                    string SystemCodeNumber, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime PlannedStart, 
                    System.DateTime PlannedEnd, 
                    System.DateTime ActualStart, 
                    System.DateTime ActualEnd, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Organiser, 
                    string ContactName, 
                    string ContactNo, 
                    string Venue, 
                    string Phase, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> lanesAffected, 
                    string UserID, 
                    string name, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<char> weatherDependent, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string existingSCN, 
                    string[] DiversionRoutesSCNS, 
                    int LocationType, 
                    bool IsTwitter, 
                    int Voyager, 
                    string url1, 
                    string url2, 
                    string url3, 
                    string url4, 
                    string attendance, 
                    string[] POIAffected, 
                    string[] CarParkAffected, 
                    string[] NAPTANAffected, 
                    string summary, 
                    string advice, 
                    int status, 
                    bool IsRecurring) {
            this.Invoke("Edit_EventWithLocation", new object[] {
                        SystemCodeNumber,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        PlannedStart,
                        PlannedEnd,
                        ActualStart,
                        ActualEnd,
                        DiversionInForce,
                        DiversionRoute,
                        Organiser,
                        ContactName,
                        ContactNo,
                        Venue,
                        Phase,
                        lanesAffected,
                        UserID,
                        name,
                        weatherDependent,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        WardName,
                        Area,
                        UserName,
                        existingSCN,
                        DiversionRoutesSCNS,
                        LocationType,
                        IsTwitter,
                        Voyager,
                        url1,
                        url2,
                        url3,
                        url4,
                        attendance,
                        POIAffected,
                        CarParkAffected,
                        NAPTANAffected,
                        summary,
                        advice,
                        status,
                        IsRecurring});
        }
        
        /// <remarks/>
        public void Edit_EventWithLocationAsync(
                    string SystemCodeNumber, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime PlannedStart, 
                    System.DateTime PlannedEnd, 
                    System.DateTime ActualStart, 
                    System.DateTime ActualEnd, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Organiser, 
                    string ContactName, 
                    string ContactNo, 
                    string Venue, 
                    string Phase, 
                    System.Nullable<int> lanesAffected, 
                    string UserID, 
                    string name, 
                    System.Nullable<char> weatherDependent, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string existingSCN, 
                    string[] DiversionRoutesSCNS, 
                    int LocationType, 
                    bool IsTwitter, 
                    int Voyager, 
                    string url1, 
                    string url2, 
                    string url3, 
                    string url4, 
                    string attendance, 
                    string[] POIAffected, 
                    string[] CarParkAffected, 
                    string[] NAPTANAffected, 
                    string summary, 
                    string advice, 
                    int status, 
                    bool IsRecurring) {
            this.Edit_EventWithLocationAsync(SystemCodeNumber, ShortDescription, LongDescription, LocationDesc, TypeID, QualityStatementID, DataSource_TypeID, Severity, PlannedStart, PlannedEnd, ActualStart, ActualEnd, DiversionInForce, DiversionRoute, Organiser, ContactName, ContactNo, Venue, Phase, lanesAffected, UserID, name, weatherDependent, easting, northing, diversionRoute1, diversionRoute2, diversionRoute3, diversionRoute4, WardName, Area, UserName, existingSCN, DiversionRoutesSCNS, LocationType, IsTwitter, Voyager, url1, url2, url3, url4, attendance, POIAffected, CarParkAffected, NAPTANAffected, summary, advice, status, IsRecurring, null);
        }
        
        /// <remarks/>
        public void Edit_EventWithLocationAsync(
                    string SystemCodeNumber, 
                    string ShortDescription, 
                    string LongDescription, 
                    string LocationDesc, 
                    int TypeID, 
                    int QualityStatementID, 
                    int DataSource_TypeID, 
                    int Severity, 
                    System.DateTime PlannedStart, 
                    System.DateTime PlannedEnd, 
                    System.DateTime ActualStart, 
                    System.DateTime ActualEnd, 
                    System.Nullable<char> DiversionInForce, 
                    string DiversionRoute, 
                    string Organiser, 
                    string ContactName, 
                    string ContactNo, 
                    string Venue, 
                    string Phase, 
                    System.Nullable<int> lanesAffected, 
                    string UserID, 
                    string name, 
                    System.Nullable<char> weatherDependent, 
                    double easting, 
                    double northing, 
                    string diversionRoute1, 
                    string diversionRoute2, 
                    string diversionRoute3, 
                    string diversionRoute4, 
                    string WardName, 
                    string Area, 
                    string UserName, 
                    string existingSCN, 
                    string[] DiversionRoutesSCNS, 
                    int LocationType, 
                    bool IsTwitter, 
                    int Voyager, 
                    string url1, 
                    string url2, 
                    string url3, 
                    string url4, 
                    string attendance, 
                    string[] POIAffected, 
                    string[] CarParkAffected, 
                    string[] NAPTANAffected, 
                    string summary, 
                    string advice, 
                    int status, 
                    bool IsRecurring, 
                    object userState) {
            if ((this.Edit_EventWithLocationOperationCompleted == null)) {
                this.Edit_EventWithLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEdit_EventWithLocationOperationCompleted);
            }
            this.InvokeAsync("Edit_EventWithLocation", new object[] {
                        SystemCodeNumber,
                        ShortDescription,
                        LongDescription,
                        LocationDesc,
                        TypeID,
                        QualityStatementID,
                        DataSource_TypeID,
                        Severity,
                        PlannedStart,
                        PlannedEnd,
                        ActualStart,
                        ActualEnd,
                        DiversionInForce,
                        DiversionRoute,
                        Organiser,
                        ContactName,
                        ContactNo,
                        Venue,
                        Phase,
                        lanesAffected,
                        UserID,
                        name,
                        weatherDependent,
                        easting,
                        northing,
                        diversionRoute1,
                        diversionRoute2,
                        diversionRoute3,
                        diversionRoute4,
                        WardName,
                        Area,
                        UserName,
                        existingSCN,
                        DiversionRoutesSCNS,
                        LocationType,
                        IsTwitter,
                        Voyager,
                        url1,
                        url2,
                        url3,
                        url4,
                        attendance,
                        POIAffected,
                        CarParkAffected,
                        NAPTANAffected,
                        summary,
                        advice,
                        status,
                        IsRecurring}, this.Edit_EventWithLocationOperationCompleted, userState);
        }
        
        private void OnEdit_EventWithLocationOperationCompleted(object arg) {
            if ((this.Edit_EventWithLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Edit_EventWithLocationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/ListAllRoadClosure", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListAllRoadClosure() {
            object[] results = this.Invoke("ListAllRoadClosure", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListAllRoadClosureAsync() {
            this.ListAllRoadClosureAsync(null);
        }
        
        /// <remarks/>
        public void ListAllRoadClosureAsync(object userState) {
            if ((this.ListAllRoadClosureOperationCompleted == null)) {
                this.ListAllRoadClosureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllRoadClosureOperationCompleted);
            }
            this.InvokeAsync("ListAllRoadClosure", new object[0], this.ListAllRoadClosureOperationCompleted, userState);
        }
        
        private void OnListAllRoadClosureOperationCompleted(object arg) {
            if ((this.ListAllRoadClosureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAllRoadClosureCompleted(this, new ListAllRoadClosureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/ListAllDiversionRoutes", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListAllDiversionRoutes(string RCSysytemCodeNumber) {
            object[] results = this.Invoke("ListAllDiversionRoutes", new object[] {
                        RCSysytemCodeNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListAllDiversionRoutesAsync(string RCSysytemCodeNumber) {
            this.ListAllDiversionRoutesAsync(RCSysytemCodeNumber, null);
        }
        
        /// <remarks/>
        public void ListAllDiversionRoutesAsync(string RCSysytemCodeNumber, object userState) {
            if ((this.ListAllDiversionRoutesOperationCompleted == null)) {
                this.ListAllDiversionRoutesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllDiversionRoutesOperationCompleted);
            }
            this.InvokeAsync("ListAllDiversionRoutes", new object[] {
                        RCSysytemCodeNumber}, this.ListAllDiversionRoutesOperationCompleted, userState);
        }
        
        private void OnListAllDiversionRoutesOperationCompleted(object arg) {
            if ((this.ListAllDiversionRoutesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAllDiversionRoutesCompleted(this, new ListAllDiversionRoutesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Diversions_Objects", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_Diversions_Objects(string SystemCodeNumber, string[] DR_SystemCodeNumber, string ObjectName) {
            this.Invoke("New_Diversions_Objects", new object[] {
                        SystemCodeNumber,
                        DR_SystemCodeNumber,
                        ObjectName});
        }
        
        /// <remarks/>
        public void New_Diversions_ObjectsAsync(string SystemCodeNumber, string[] DR_SystemCodeNumber, string ObjectName) {
            this.New_Diversions_ObjectsAsync(SystemCodeNumber, DR_SystemCodeNumber, ObjectName, null);
        }
        
        /// <remarks/>
        public void New_Diversions_ObjectsAsync(string SystemCodeNumber, string[] DR_SystemCodeNumber, string ObjectName, object userState) {
            if ((this.New_Diversions_ObjectsOperationCompleted == null)) {
                this.New_Diversions_ObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_Diversions_ObjectsOperationCompleted);
            }
            this.InvokeAsync("New_Diversions_Objects", new object[] {
                        SystemCodeNumber,
                        DR_SystemCodeNumber,
                        ObjectName}, this.New_Diversions_ObjectsOperationCompleted, userState);
        }
        
        private void OnNew_Diversions_ObjectsOperationCompleted(object arg) {
            if ((this.New_Diversions_ObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_Diversions_ObjectsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Get_Diversions_Objects", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Diversions_Objects(string SystemCodeNumber) {
            object[] results = this.Invoke("Get_Diversions_Objects", new object[] {
                        SystemCodeNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Diversions_ObjectsAsync(string SystemCodeNumber) {
            this.Get_Diversions_ObjectsAsync(SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void Get_Diversions_ObjectsAsync(string SystemCodeNumber, object userState) {
            if ((this.Get_Diversions_ObjectsOperationCompleted == null)) {
                this.Get_Diversions_ObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Diversions_ObjectsOperationCompleted);
            }
            this.InvokeAsync("Get_Diversions_Objects", new object[] {
                        SystemCodeNumber}, this.Get_Diversions_ObjectsOperationCompleted, userState);
        }
        
        private void OnGet_Diversions_ObjectsOperationCompleted(object arg) {
            if ((this.Get_Diversions_ObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Diversions_ObjectsCompleted(this, new Get_Diversions_ObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_Diversions_Objects", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_Diversions_Objects(string SystemCodeNumber) {
            this.Invoke("Delete_Diversions_Objects", new object[] {
                        SystemCodeNumber});
        }
        
        /// <remarks/>
        public void Delete_Diversions_ObjectsAsync(string SystemCodeNumber) {
            this.Delete_Diversions_ObjectsAsync(SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void Delete_Diversions_ObjectsAsync(string SystemCodeNumber, object userState) {
            if ((this.Delete_Diversions_ObjectsOperationCompleted == null)) {
                this.Delete_Diversions_ObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Diversions_ObjectsOperationCompleted);
            }
            this.InvokeAsync("Delete_Diversions_Objects", new object[] {
                        SystemCodeNumber}, this.Delete_Diversions_ObjectsOperationCompleted, userState);
        }
        
        private void OnDelete_Diversions_ObjectsOperationCompleted(object arg) {
            if ((this.Delete_Diversions_ObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Diversions_ObjectsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_Active_FaultsBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_Active_FaultsBySCN(string ObjectName, string SystemCodeNumber) {
            object[] results = this.Invoke("View_Active_FaultsBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_Active_FaultsBySCNAsync(string ObjectName, string SystemCodeNumber) {
            this.View_Active_FaultsBySCNAsync(ObjectName, SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void View_Active_FaultsBySCNAsync(string ObjectName, string SystemCodeNumber, object userState) {
            if ((this.View_Active_FaultsBySCNOperationCompleted == null)) {
                this.View_Active_FaultsBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_Active_FaultsBySCNOperationCompleted);
            }
            this.InvokeAsync("View_Active_FaultsBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber}, this.View_Active_FaultsBySCNOperationCompleted, userState);
        }
        
        private void OnView_Active_FaultsBySCNOperationCompleted(object arg) {
            if ((this.View_Active_FaultsBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_Active_FaultsBySCNCompleted(this, new View_Active_FaultsBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_FaultsBySCN_New", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_FaultsBySCN_New(string ObjectName, string SystemCodeNumber, bool filterClearedFault, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> fromTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> toTime) {
            object[] results = this.Invoke("View_FaultsBySCN_New", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        filterClearedFault,
                        fromTime,
                        toTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_FaultsBySCN_NewAsync(string ObjectName, string SystemCodeNumber, bool filterClearedFault, System.Nullable<System.DateTime> fromTime, System.Nullable<System.DateTime> toTime) {
            this.View_FaultsBySCN_NewAsync(ObjectName, SystemCodeNumber, filterClearedFault, fromTime, toTime, null);
        }
        
        /// <remarks/>
        public void View_FaultsBySCN_NewAsync(string ObjectName, string SystemCodeNumber, bool filterClearedFault, System.Nullable<System.DateTime> fromTime, System.Nullable<System.DateTime> toTime, object userState) {
            if ((this.View_FaultsBySCN_NewOperationCompleted == null)) {
                this.View_FaultsBySCN_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_FaultsBySCN_NewOperationCompleted);
            }
            this.InvokeAsync("View_FaultsBySCN_New", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        filterClearedFault,
                        fromTime,
                        toTime}, this.View_FaultsBySCN_NewOperationCompleted, userState);
        }
        
        private void OnView_FaultsBySCN_NewOperationCompleted(object arg) {
            if ((this.View_FaultsBySCN_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_FaultsBySCN_NewCompleted(this, new View_FaultsBySCN_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_Fault_Type", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_Fault_Type(string ObjectName) {
            object[] results = this.Invoke("View_Fault_Type", new object[] {
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_Fault_TypeAsync(string ObjectName) {
            this.View_Fault_TypeAsync(ObjectName, null);
        }
        
        /// <remarks/>
        public void View_Fault_TypeAsync(string ObjectName, object userState) {
            if ((this.View_Fault_TypeOperationCompleted == null)) {
                this.View_Fault_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_Fault_TypeOperationCompleted);
            }
            this.InvokeAsync("View_Fault_Type", new object[] {
                        ObjectName}, this.View_Fault_TypeOperationCompleted, userState);
        }
        
        private void OnView_Fault_TypeOperationCompleted(object arg) {
            if ((this.View_Fault_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_Fault_TypeCompleted(this, new View_Fault_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_Fault_Type_Description", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_Fault_Type_Description(string ObjectName) {
            object[] results = this.Invoke("View_Fault_Type_Description", new object[] {
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_Fault_Type_DescriptionAsync(string ObjectName) {
            this.View_Fault_Type_DescriptionAsync(ObjectName, null);
        }
        
        /// <remarks/>
        public void View_Fault_Type_DescriptionAsync(string ObjectName, object userState) {
            if ((this.View_Fault_Type_DescriptionOperationCompleted == null)) {
                this.View_Fault_Type_DescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_Fault_Type_DescriptionOperationCompleted);
            }
            this.InvokeAsync("View_Fault_Type_Description", new object[] {
                        ObjectName}, this.View_Fault_Type_DescriptionOperationCompleted, userState);
        }
        
        private void OnView_Fault_Type_DescriptionOperationCompleted(object arg) {
            if ((this.View_Fault_Type_DescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_Fault_Type_DescriptionCompleted(this, new View_Fault_Type_DescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_FaultType", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_FaultType(string objectName, string faultTypeID) {
            object[] results = this.Invoke("View_FaultType", new object[] {
                        objectName,
                        faultTypeID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_FaultTypeAsync(string objectName, string faultTypeID) {
            this.View_FaultTypeAsync(objectName, faultTypeID, null);
        }
        
        /// <remarks/>
        public void View_FaultTypeAsync(string objectName, string faultTypeID, object userState) {
            if ((this.View_FaultTypeOperationCompleted == null)) {
                this.View_FaultTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_FaultTypeOperationCompleted);
            }
            this.InvokeAsync("View_FaultType", new object[] {
                        objectName,
                        faultTypeID}, this.View_FaultTypeOperationCompleted, userState);
        }
        
        private void OnView_FaultTypeOperationCompleted(object arg) {
            if ((this.View_FaultTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_FaultTypeCompleted(this, new View_FaultTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_DataSource_ByFault", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_DataSource_ByFault(string objectName, string faultTypeID, string faultDescription) {
            object[] results = this.Invoke("View_DataSource_ByFault", new object[] {
                        objectName,
                        faultTypeID,
                        faultDescription});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_DataSource_ByFaultAsync(string objectName, string faultTypeID, string faultDescription) {
            this.View_DataSource_ByFaultAsync(objectName, faultTypeID, faultDescription, null);
        }
        
        /// <remarks/>
        public void View_DataSource_ByFaultAsync(string objectName, string faultTypeID, string faultDescription, object userState) {
            if ((this.View_DataSource_ByFaultOperationCompleted == null)) {
                this.View_DataSource_ByFaultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_DataSource_ByFaultOperationCompleted);
            }
            this.InvokeAsync("View_DataSource_ByFault", new object[] {
                        objectName,
                        faultTypeID,
                        faultDescription}, this.View_DataSource_ByFaultOperationCompleted, userState);
        }
        
        private void OnView_DataSource_ByFaultOperationCompleted(object arg) {
            if ((this.View_DataSource_ByFaultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_DataSource_ByFaultCompleted(this, new View_DataSource_ByFaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Edit_FaultType", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Edit_FaultType(string objectName, int faultTypeID, int SubSystemTypeID, int DataSource_TypeID, string FaultDescription, int FaultSeverity) {
            this.Invoke("Edit_FaultType", new object[] {
                        objectName,
                        faultTypeID,
                        SubSystemTypeID,
                        DataSource_TypeID,
                        FaultDescription,
                        FaultSeverity});
        }
        
        /// <remarks/>
        public void Edit_FaultTypeAsync(string objectName, int faultTypeID, int SubSystemTypeID, int DataSource_TypeID, string FaultDescription, int FaultSeverity) {
            this.Edit_FaultTypeAsync(objectName, faultTypeID, SubSystemTypeID, DataSource_TypeID, FaultDescription, FaultSeverity, null);
        }
        
        /// <remarks/>
        public void Edit_FaultTypeAsync(string objectName, int faultTypeID, int SubSystemTypeID, int DataSource_TypeID, string FaultDescription, int FaultSeverity, object userState) {
            if ((this.Edit_FaultTypeOperationCompleted == null)) {
                this.Edit_FaultTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEdit_FaultTypeOperationCompleted);
            }
            this.InvokeAsync("Edit_FaultType", new object[] {
                        objectName,
                        faultTypeID,
                        SubSystemTypeID,
                        DataSource_TypeID,
                        FaultDescription,
                        FaultSeverity}, this.Edit_FaultTypeOperationCompleted, userState);
        }
        
        private void OnEdit_FaultTypeOperationCompleted(object arg) {
            if ((this.Edit_FaultTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Edit_FaultTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_FaultType", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_FaultType(string objectName, int faultTypeID) {
            this.Invoke("Delete_FaultType", new object[] {
                        objectName,
                        faultTypeID});
        }
        
        /// <remarks/>
        public void Delete_FaultTypeAsync(string objectName, int faultTypeID) {
            this.Delete_FaultTypeAsync(objectName, faultTypeID, null);
        }
        
        /// <remarks/>
        public void Delete_FaultTypeAsync(string objectName, int faultTypeID, object userState) {
            if ((this.Delete_FaultTypeOperationCompleted == null)) {
                this.Delete_FaultTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_FaultTypeOperationCompleted);
            }
            this.InvokeAsync("Delete_FaultType", new object[] {
                        objectName,
                        faultTypeID}, this.Delete_FaultTypeOperationCompleted, userState);
        }
        
        private void OnDelete_FaultTypeOperationCompleted(object arg) {
            if ((this.Delete_FaultTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_FaultTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Fault_Type_Search", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Fault_Type_Search(string SearchText, string ObjectName) {
            object[] results = this.Invoke("List_Fault_Type_Search", new object[] {
                        SearchText,
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_Fault_Type_SearchAsync(string SearchText, string ObjectName) {
            this.List_Fault_Type_SearchAsync(SearchText, ObjectName, null);
        }
        
        /// <remarks/>
        public void List_Fault_Type_SearchAsync(string SearchText, string ObjectName, object userState) {
            if ((this.List_Fault_Type_SearchOperationCompleted == null)) {
                this.List_Fault_Type_SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_Fault_Type_SearchOperationCompleted);
            }
            this.InvokeAsync("List_Fault_Type_Search", new object[] {
                        SearchText,
                        ObjectName}, this.List_Fault_Type_SearchOperationCompleted, userState);
        }
        
        private void OnList_Fault_Type_SearchOperationCompleted(object arg) {
            if ((this.List_Fault_Type_SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_Fault_Type_SearchCompleted(this, new List_Fault_Type_SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Objects_Search", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Objects_Search(string SearchText, string ObjectName) {
            object[] results = this.Invoke("List_Objects_Search", new object[] {
                        SearchText,
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_Objects_SearchAsync(string SearchText, string ObjectName) {
            this.List_Objects_SearchAsync(SearchText, ObjectName, null);
        }
        
        /// <remarks/>
        public void List_Objects_SearchAsync(string SearchText, string ObjectName, object userState) {
            if ((this.List_Objects_SearchOperationCompleted == null)) {
                this.List_Objects_SearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_Objects_SearchOperationCompleted);
            }
            this.InvokeAsync("List_Objects_Search", new object[] {
                        SearchText,
                        ObjectName}, this.List_Objects_SearchOperationCompleted, userState);
        }
        
        private void OnList_Objects_SearchOperationCompleted(object arg) {
            if ((this.List_Objects_SearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_Objects_SearchCompleted(this, new List_Objects_SearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_FaultTypeDescription", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_FaultTypeDescription(string ObjectName, string TypeDescriptionPrefix, string TypeDescription, string severityDescription) {
            object[] results = this.Invoke("View_FaultTypeDescription", new object[] {
                        ObjectName,
                        TypeDescriptionPrefix,
                        TypeDescription,
                        severityDescription});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_FaultTypeDescriptionAsync(string ObjectName, string TypeDescriptionPrefix, string TypeDescription, string severityDescription) {
            this.View_FaultTypeDescriptionAsync(ObjectName, TypeDescriptionPrefix, TypeDescription, severityDescription, null);
        }
        
        /// <remarks/>
        public void View_FaultTypeDescriptionAsync(string ObjectName, string TypeDescriptionPrefix, string TypeDescription, string severityDescription, object userState) {
            if ((this.View_FaultTypeDescriptionOperationCompleted == null)) {
                this.View_FaultTypeDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_FaultTypeDescriptionOperationCompleted);
            }
            this.InvokeAsync("View_FaultTypeDescription", new object[] {
                        ObjectName,
                        TypeDescriptionPrefix,
                        TypeDescription,
                        severityDescription}, this.View_FaultTypeDescriptionOperationCompleted, userState);
        }
        
        private void OnView_FaultTypeDescriptionOperationCompleted(object arg) {
            if ((this.View_FaultTypeDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_FaultTypeDescriptionCompleted(this, new View_FaultTypeDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Get_ShortDescriptionByScn", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Get_ShortDescriptionByScn(string ObjectName, string SCN) {
            object[] results = this.Invoke("Get_ShortDescriptionByScn", new object[] {
                        ObjectName,
                        SCN});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Get_ShortDescriptionByScnAsync(string ObjectName, string SCN) {
            this.Get_ShortDescriptionByScnAsync(ObjectName, SCN, null);
        }
        
        /// <remarks/>
        public void Get_ShortDescriptionByScnAsync(string ObjectName, string SCN, object userState) {
            if ((this.Get_ShortDescriptionByScnOperationCompleted == null)) {
                this.Get_ShortDescriptionByScnOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_ShortDescriptionByScnOperationCompleted);
            }
            this.InvokeAsync("Get_ShortDescriptionByScn", new object[] {
                        ObjectName,
                        SCN}, this.Get_ShortDescriptionByScnOperationCompleted, userState);
        }
        
        private void OnGet_ShortDescriptionByScnOperationCompleted(object arg) {
            if ((this.Get_ShortDescriptionByScnCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_ShortDescriptionByScnCompleted(this, new Get_ShortDescriptionByScnCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_Congestion_Severity_Ratings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_Congestion_Severity_Ratings() {
            object[] results = this.Invoke("View_Congestion_Severity_Ratings", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_Congestion_Severity_RatingsAsync() {
            this.View_Congestion_Severity_RatingsAsync(null);
        }
        
        /// <remarks/>
        public void View_Congestion_Severity_RatingsAsync(object userState) {
            if ((this.View_Congestion_Severity_RatingsOperationCompleted == null)) {
                this.View_Congestion_Severity_RatingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_Congestion_Severity_RatingsOperationCompleted);
            }
            this.InvokeAsync("View_Congestion_Severity_Ratings", new object[0], this.View_Congestion_Severity_RatingsOperationCompleted, userState);
        }
        
        private void OnView_Congestion_Severity_RatingsOperationCompleted(object arg) {
            if ((this.View_Congestion_Severity_RatingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_Congestion_Severity_RatingsCompleted(this, new View_Congestion_Severity_RatingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_datasource_typeid", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_datasource_typeid() {
            object[] results = this.Invoke("List_datasource_typeid", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_datasource_typeidAsync() {
            this.List_datasource_typeidAsync(null);
        }
        
        /// <remarks/>
        public void List_datasource_typeidAsync(object userState) {
            if ((this.List_datasource_typeidOperationCompleted == null)) {
                this.List_datasource_typeidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_datasource_typeidOperationCompleted);
            }
            this.InvokeAsync("List_datasource_typeid", new object[0], this.List_datasource_typeidOperationCompleted, userState);
        }
        
        private void OnList_datasource_typeidOperationCompleted(object arg) {
            if ((this.List_datasource_typeidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_datasource_typeidCompleted(this, new List_datasource_typeidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DataSourceCategory", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DataSourceCategory() {
            object[] results = this.Invoke("List_DataSourceCategory", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DataSourceCategoryAsync() {
            this.List_DataSourceCategoryAsync(null);
        }
        
        /// <remarks/>
        public void List_DataSourceCategoryAsync(object userState) {
            if ((this.List_DataSourceCategoryOperationCompleted == null)) {
                this.List_DataSourceCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DataSourceCategoryOperationCompleted);
            }
            this.InvokeAsync("List_DataSourceCategory", new object[0], this.List_DataSourceCategoryOperationCompleted, userState);
        }
        
        private void OnList_DataSourceCategoryOperationCompleted(object arg) {
            if ((this.List_DataSourceCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DataSourceCategoryCompleted(this, new List_DataSourceCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DayType", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DayType() {
            object[] results = this.Invoke("List_DayType", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DayTypeAsync() {
            this.List_DayTypeAsync(null);
        }
        
        /// <remarks/>
        public void List_DayTypeAsync(object userState) {
            if ((this.List_DayTypeOperationCompleted == null)) {
                this.List_DayTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DayTypeOperationCompleted);
            }
            this.InvokeAsync("List_DayType", new object[0], this.List_DayTypeOperationCompleted, userState);
        }
        
        private void OnList_DayTypeOperationCompleted(object arg) {
            if ((this.List_DayTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DayTypeCompleted(this, new List_DayTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Insert_SpeedWeightage", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_SpeedWeightage(int DataSourceCategoryId, int DataSourceTypeId, int DayTypeId, int SpeedWeightage, int MaxItemInQueue) {
            this.Invoke("Insert_SpeedWeightage", new object[] {
                        DataSourceCategoryId,
                        DataSourceTypeId,
                        DayTypeId,
                        SpeedWeightage,
                        MaxItemInQueue});
        }
        
        /// <remarks/>
        public void Insert_SpeedWeightageAsync(int DataSourceCategoryId, int DataSourceTypeId, int DayTypeId, int SpeedWeightage, int MaxItemInQueue) {
            this.Insert_SpeedWeightageAsync(DataSourceCategoryId, DataSourceTypeId, DayTypeId, SpeedWeightage, MaxItemInQueue, null);
        }
        
        /// <remarks/>
        public void Insert_SpeedWeightageAsync(int DataSourceCategoryId, int DataSourceTypeId, int DayTypeId, int SpeedWeightage, int MaxItemInQueue, object userState) {
            if ((this.Insert_SpeedWeightageOperationCompleted == null)) {
                this.Insert_SpeedWeightageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_SpeedWeightageOperationCompleted);
            }
            this.InvokeAsync("Insert_SpeedWeightage", new object[] {
                        DataSourceCategoryId,
                        DataSourceTypeId,
                        DayTypeId,
                        SpeedWeightage,
                        MaxItemInQueue}, this.Insert_SpeedWeightageOperationCompleted, userState);
        }
        
        private void OnInsert_SpeedWeightageOperationCompleted(object arg) {
            if ((this.Insert_SpeedWeightageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_SpeedWeightageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_SpeedWeightageSettings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_SpeedWeightageSettings(int DataSourceCategoryId) {
            object[] results = this.Invoke("List_SpeedWeightageSettings", new object[] {
                        DataSourceCategoryId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_SpeedWeightageSettingsAsync(int DataSourceCategoryId) {
            this.List_SpeedWeightageSettingsAsync(DataSourceCategoryId, null);
        }
        
        /// <remarks/>
        public void List_SpeedWeightageSettingsAsync(int DataSourceCategoryId, object userState) {
            if ((this.List_SpeedWeightageSettingsOperationCompleted == null)) {
                this.List_SpeedWeightageSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_SpeedWeightageSettingsOperationCompleted);
            }
            this.InvokeAsync("List_SpeedWeightageSettings", new object[] {
                        DataSourceCategoryId}, this.List_SpeedWeightageSettingsOperationCompleted, userState);
        }
        
        private void OnList_SpeedWeightageSettingsOperationCompleted(object arg) {
            if ((this.List_SpeedWeightageSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_SpeedWeightageSettingsCompleted(this, new List_SpeedWeightageSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/update_SpeedWeightage", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void update_SpeedWeightage(int DataSourceCategoryId, int DataSourceTypeId, int DayTypeId, int SpeedWeightage) {
            this.Invoke("update_SpeedWeightage", new object[] {
                        DataSourceCategoryId,
                        DataSourceTypeId,
                        DayTypeId,
                        SpeedWeightage});
        }
        
        /// <remarks/>
        public void update_SpeedWeightageAsync(int DataSourceCategoryId, int DataSourceTypeId, int DayTypeId, int SpeedWeightage) {
            this.update_SpeedWeightageAsync(DataSourceCategoryId, DataSourceTypeId, DayTypeId, SpeedWeightage, null);
        }
        
        /// <remarks/>
        public void update_SpeedWeightageAsync(int DataSourceCategoryId, int DataSourceTypeId, int DayTypeId, int SpeedWeightage, object userState) {
            if ((this.update_SpeedWeightageOperationCompleted == null)) {
                this.update_SpeedWeightageOperationCompleted = new System.Threading.SendOrPostCallback(this.Onupdate_SpeedWeightageOperationCompleted);
            }
            this.InvokeAsync("update_SpeedWeightage", new object[] {
                        DataSourceCategoryId,
                        DataSourceTypeId,
                        DayTypeId,
                        SpeedWeightage}, this.update_SpeedWeightageOperationCompleted, userState);
        }
        
        private void Onupdate_SpeedWeightageOperationCompleted(object arg) {
            if ((this.update_SpeedWeightageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.update_SpeedWeightageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_SpeedWeightage", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_SpeedWeightage(int DataSourceCategoryId, int DataSourceTypeId) {
            this.Invoke("Delete_SpeedWeightage", new object[] {
                        DataSourceCategoryId,
                        DataSourceTypeId});
        }
        
        /// <remarks/>
        public void Delete_SpeedWeightageAsync(int DataSourceCategoryId, int DataSourceTypeId) {
            this.Delete_SpeedWeightageAsync(DataSourceCategoryId, DataSourceTypeId, null);
        }
        
        /// <remarks/>
        public void Delete_SpeedWeightageAsync(int DataSourceCategoryId, int DataSourceTypeId, object userState) {
            if ((this.Delete_SpeedWeightageOperationCompleted == null)) {
                this.Delete_SpeedWeightageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_SpeedWeightageOperationCompleted);
            }
            this.InvokeAsync("Delete_SpeedWeightage", new object[] {
                        DataSourceCategoryId,
                        DataSourceTypeId}, this.Delete_SpeedWeightageOperationCompleted, userState);
        }
        
        private void OnDelete_SpeedWeightageOperationCompleted(object arg) {
            if ((this.Delete_SpeedWeightageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_SpeedWeightageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Check_Existence_SpeedWeightage", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Check_Existence_SpeedWeightage(int DataSourceCategoryId, int DataSourceTypeId) {
            object[] results = this.Invoke("Check_Existence_SpeedWeightage", new object[] {
                        DataSourceCategoryId,
                        DataSourceTypeId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Check_Existence_SpeedWeightageAsync(int DataSourceCategoryId, int DataSourceTypeId) {
            this.Check_Existence_SpeedWeightageAsync(DataSourceCategoryId, DataSourceTypeId, null);
        }
        
        /// <remarks/>
        public void Check_Existence_SpeedWeightageAsync(int DataSourceCategoryId, int DataSourceTypeId, object userState) {
            if ((this.Check_Existence_SpeedWeightageOperationCompleted == null)) {
                this.Check_Existence_SpeedWeightageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheck_Existence_SpeedWeightageOperationCompleted);
            }
            this.InvokeAsync("Check_Existence_SpeedWeightage", new object[] {
                        DataSourceCategoryId,
                        DataSourceTypeId}, this.Check_Existence_SpeedWeightageOperationCompleted, userState);
        }
        
        private void OnCheck_Existence_SpeedWeightageOperationCompleted(object arg) {
            if ((this.Check_Existence_SpeedWeightageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Check_Existence_SpeedWeightageCompleted(this, new Check_Existence_SpeedWeightageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Save_Severity_Ratings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Save_Severity_Ratings(System.Data.DataTable dt) {
            this.Invoke("Save_Severity_Ratings", new object[] {
                        dt});
        }
        
        /// <remarks/>
        public void Save_Severity_RatingsAsync(System.Data.DataTable dt) {
            this.Save_Severity_RatingsAsync(dt, null);
        }
        
        /// <remarks/>
        public void Save_Severity_RatingsAsync(System.Data.DataTable dt, object userState) {
            if ((this.Save_Severity_RatingsOperationCompleted == null)) {
                this.Save_Severity_RatingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_Severity_RatingsOperationCompleted);
            }
            this.InvokeAsync("Save_Severity_Ratings", new object[] {
                        dt}, this.Save_Severity_RatingsOperationCompleted, userState);
        }
        
        private void OnSave_Severity_RatingsOperationCompleted(object arg) {
            if ((this.Save_Severity_RatingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_Severity_RatingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/GetLatestDynamicRecord", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> GetLatestDynamicRecord(string objectName, string subType, bool isArchive, string systemCodeNumber, string startDate, string endDate) {
            object[] results = this.Invoke("GetLatestDynamicRecord", new object[] {
                        objectName,
                        subType,
                        isArchive,
                        systemCodeNumber,
                        startDate,
                        endDate});
            return ((System.Nullable<System.DateTime>)(results[0]));
        }
        
        /// <remarks/>
        public void GetLatestDynamicRecordAsync(string objectName, string subType, bool isArchive, string systemCodeNumber, string startDate, string endDate) {
            this.GetLatestDynamicRecordAsync(objectName, subType, isArchive, systemCodeNumber, startDate, endDate, null);
        }
        
        /// <remarks/>
        public void GetLatestDynamicRecordAsync(string objectName, string subType, bool isArchive, string systemCodeNumber, string startDate, string endDate, object userState) {
            if ((this.GetLatestDynamicRecordOperationCompleted == null)) {
                this.GetLatestDynamicRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLatestDynamicRecordOperationCompleted);
            }
            this.InvokeAsync("GetLatestDynamicRecord", new object[] {
                        objectName,
                        subType,
                        isArchive,
                        systemCodeNumber,
                        startDate,
                        endDate}, this.GetLatestDynamicRecordOperationCompleted, userState);
        }
        
        private void OnGetLatestDynamicRecordOperationCompleted(object arg) {
            if ((this.GetLatestDynamicRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLatestDynamicRecordCompleted(this, new GetLatestDynamicRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_SeveritySettings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_SeveritySettings() {
            object[] results = this.Invoke("List_SeveritySettings", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_SeveritySettingsAsync() {
            this.List_SeveritySettingsAsync(null);
        }
        
        /// <remarks/>
        public void List_SeveritySettingsAsync(object userState) {
            if ((this.List_SeveritySettingsOperationCompleted == null)) {
                this.List_SeveritySettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_SeveritySettingsOperationCompleted);
            }
            this.InvokeAsync("List_SeveritySettings", new object[0], this.List_SeveritySettingsOperationCompleted, userState);
        }
        
        private void OnList_SeveritySettingsOperationCompleted(object arg) {
            if ((this.List_SeveritySettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_SeveritySettingsCompleted(this, new List_SeveritySettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/update_SeverityDelay", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void update_SeverityDelay(string Delay, string Message, string Message_Welsh, int SeverityId) {
            this.Invoke("update_SeverityDelay", new object[] {
                        Delay,
                        Message,
                        Message_Welsh,
                        SeverityId});
        }
        
        /// <remarks/>
        public void update_SeverityDelayAsync(string Delay, string Message, string Message_Welsh, int SeverityId) {
            this.update_SeverityDelayAsync(Delay, Message, Message_Welsh, SeverityId, null);
        }
        
        /// <remarks/>
        public void update_SeverityDelayAsync(string Delay, string Message, string Message_Welsh, int SeverityId, object userState) {
            if ((this.update_SeverityDelayOperationCompleted == null)) {
                this.update_SeverityDelayOperationCompleted = new System.Threading.SendOrPostCallback(this.Onupdate_SeverityDelayOperationCompleted);
            }
            this.InvokeAsync("update_SeverityDelay", new object[] {
                        Delay,
                        Message,
                        Message_Welsh,
                        SeverityId}, this.update_SeverityDelayOperationCompleted, userState);
        }
        
        private void Onupdate_SeverityDelayOperationCompleted(object arg) {
            if ((this.update_SeverityDelayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.update_SeverityDelayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/delete_SeverityDelay", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void delete_SeverityDelay(int SeverityId) {
            this.Invoke("delete_SeverityDelay", new object[] {
                        SeverityId});
        }
        
        /// <remarks/>
        public void delete_SeverityDelayAsync(int SeverityId) {
            this.delete_SeverityDelayAsync(SeverityId, null);
        }
        
        /// <remarks/>
        public void delete_SeverityDelayAsync(int SeverityId, object userState) {
            if ((this.delete_SeverityDelayOperationCompleted == null)) {
                this.delete_SeverityDelayOperationCompleted = new System.Threading.SendOrPostCallback(this.Ondelete_SeverityDelayOperationCompleted);
            }
            this.InvokeAsync("delete_SeverityDelay", new object[] {
                        SeverityId}, this.delete_SeverityDelayOperationCompleted, userState);
        }
        
        private void Ondelete_SeverityDelayOperationCompleted(object arg) {
            if ((this.delete_SeverityDelayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.delete_SeverityDelayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Severity_Type", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Severity_Type() {
            object[] results = this.Invoke("List_Severity_Type", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_Severity_TypeAsync() {
            this.List_Severity_TypeAsync(null);
        }
        
        /// <remarks/>
        public void List_Severity_TypeAsync(object userState) {
            if ((this.List_Severity_TypeOperationCompleted == null)) {
                this.List_Severity_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_Severity_TypeOperationCompleted);
            }
            this.InvokeAsync("List_Severity_Type", new object[0], this.List_Severity_TypeOperationCompleted, userState);
        }
        
        private void OnList_Severity_TypeOperationCompleted(object arg) {
            if ((this.List_Severity_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_Severity_TypeCompleted(this, new List_Severity_TypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Distruption_Severity_Delay", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_Distruption_Severity_Delay(int SeverityId, string Delay, string Message, string Message_Welsh) {
            this.Invoke("New_Distruption_Severity_Delay", new object[] {
                        SeverityId,
                        Delay,
                        Message,
                        Message_Welsh});
        }
        
        /// <remarks/>
        public void New_Distruption_Severity_DelayAsync(int SeverityId, string Delay, string Message, string Message_Welsh) {
            this.New_Distruption_Severity_DelayAsync(SeverityId, Delay, Message, Message_Welsh, null);
        }
        
        /// <remarks/>
        public void New_Distruption_Severity_DelayAsync(int SeverityId, string Delay, string Message, string Message_Welsh, object userState) {
            if ((this.New_Distruption_Severity_DelayOperationCompleted == null)) {
                this.New_Distruption_Severity_DelayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_Distruption_Severity_DelayOperationCompleted);
            }
            this.InvokeAsync("New_Distruption_Severity_Delay", new object[] {
                        SeverityId,
                        Delay,
                        Message,
                        Message_Welsh}, this.New_Distruption_Severity_DelayOperationCompleted, userState);
        }
        
        private void OnNew_Distruption_Severity_DelayOperationCompleted(object arg) {
            if ((this.New_Distruption_Severity_DelayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_Distruption_Severity_DelayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Check_Existence_Distruption_Delay_Settings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Check_Existence_Distruption_Delay_Settings(int SeverityId) {
            object[] results = this.Invoke("Check_Existence_Distruption_Delay_Settings", new object[] {
                        SeverityId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Check_Existence_Distruption_Delay_SettingsAsync(int SeverityId) {
            this.Check_Existence_Distruption_Delay_SettingsAsync(SeverityId, null);
        }
        
        /// <remarks/>
        public void Check_Existence_Distruption_Delay_SettingsAsync(int SeverityId, object userState) {
            if ((this.Check_Existence_Distruption_Delay_SettingsOperationCompleted == null)) {
                this.Check_Existence_Distruption_Delay_SettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheck_Existence_Distruption_Delay_SettingsOperationCompleted);
            }
            this.InvokeAsync("Check_Existence_Distruption_Delay_Settings", new object[] {
                        SeverityId}, this.Check_Existence_Distruption_Delay_SettingsOperationCompleted, userState);
        }
        
        private void OnCheck_Existence_Distruption_Delay_SettingsOperationCompleted(object arg) {
            if ((this.Check_Existence_Distruption_Delay_SettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Check_Existence_Distruption_Delay_SettingsCompleted(this, new Check_Existence_Distruption_Delay_SettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_AbnormalJourneyTime", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_AbnormalJourneyTime() {
            object[] results = this.Invoke("View_AbnormalJourneyTime", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_AbnormalJourneyTimeAsync() {
            this.View_AbnormalJourneyTimeAsync(null);
        }
        
        /// <remarks/>
        public void View_AbnormalJourneyTimeAsync(object userState) {
            if ((this.View_AbnormalJourneyTimeOperationCompleted == null)) {
                this.View_AbnormalJourneyTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_AbnormalJourneyTimeOperationCompleted);
            }
            this.InvokeAsync("View_AbnormalJourneyTime", new object[0], this.View_AbnormalJourneyTimeOperationCompleted, userState);
        }
        
        private void OnView_AbnormalJourneyTimeOperationCompleted(object arg) {
            if ((this.View_AbnormalJourneyTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_AbnormalJourneyTimeCompleted(this, new View_AbnormalJourneyTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Save_AbnormalJourneyTimeSettings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Save_AbnormalJourneyTimeSettings(System.Data.DataTable dt) {
            this.Invoke("Save_AbnormalJourneyTimeSettings", new object[] {
                        dt});
        }
        
        /// <remarks/>
        public void Save_AbnormalJourneyTimeSettingsAsync(System.Data.DataTable dt) {
            this.Save_AbnormalJourneyTimeSettingsAsync(dt, null);
        }
        
        /// <remarks/>
        public void Save_AbnormalJourneyTimeSettingsAsync(System.Data.DataTable dt, object userState) {
            if ((this.Save_AbnormalJourneyTimeSettingsOperationCompleted == null)) {
                this.Save_AbnormalJourneyTimeSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSave_AbnormalJourneyTimeSettingsOperationCompleted);
            }
            this.InvokeAsync("Save_AbnormalJourneyTimeSettings", new object[] {
                        dt}, this.Save_AbnormalJourneyTimeSettingsOperationCompleted, userState);
        }
        
        private void OnSave_AbnormalJourneyTimeSettingsOperationCompleted(object arg) {
            if ((this.Save_AbnormalJourneyTimeSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Save_AbnormalJourneyTimeSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Get_DescriptiveTermType", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_DescriptiveTermType(bool IsGrid) {
            object[] results = this.Invoke("Get_DescriptiveTermType", new object[] {
                        IsGrid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_DescriptiveTermTypeAsync(bool IsGrid) {
            this.Get_DescriptiveTermTypeAsync(IsGrid, null);
        }
        
        /// <remarks/>
        public void Get_DescriptiveTermTypeAsync(bool IsGrid, object userState) {
            if ((this.Get_DescriptiveTermTypeOperationCompleted == null)) {
                this.Get_DescriptiveTermTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_DescriptiveTermTypeOperationCompleted);
            }
            this.InvokeAsync("Get_DescriptiveTermType", new object[] {
                        IsGrid}, this.Get_DescriptiveTermTypeOperationCompleted, userState);
        }
        
        private void OnGet_DescriptiveTermTypeOperationCompleted(object arg) {
            if ((this.Get_DescriptiveTermTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_DescriptiveTermTypeCompleted(this, new Get_DescriptiveTermTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Add_SpeedLimit", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Add_SpeedLimit(int TypeId, int Speed, bool IsDelete) {
            this.Invoke("Add_SpeedLimit", new object[] {
                        TypeId,
                        Speed,
                        IsDelete});
        }
        
        /// <remarks/>
        public void Add_SpeedLimitAsync(int TypeId, int Speed, bool IsDelete) {
            this.Add_SpeedLimitAsync(TypeId, Speed, IsDelete, null);
        }
        
        /// <remarks/>
        public void Add_SpeedLimitAsync(int TypeId, int Speed, bool IsDelete, object userState) {
            if ((this.Add_SpeedLimitOperationCompleted == null)) {
                this.Add_SpeedLimitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAdd_SpeedLimitOperationCompleted);
            }
            this.InvokeAsync("Add_SpeedLimit", new object[] {
                        TypeId,
                        Speed,
                        IsDelete}, this.Add_SpeedLimitOperationCompleted, userState);
        }
        
        private void OnAdd_SpeedLimitOperationCompleted(object arg) {
            if ((this.Add_SpeedLimitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Add_SpeedLimitCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_DynamicBySCNForGraph", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_DynamicBySCNForGraph(string SystemCodeNumber, string ObjectName, string time, string speed) {
            object[] results = this.Invoke("View_DynamicBySCNForGraph", new object[] {
                        SystemCodeNumber,
                        ObjectName,
                        time,
                        speed});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_DynamicBySCNForGraphAsync(string SystemCodeNumber, string ObjectName, string time, string speed) {
            this.View_DynamicBySCNForGraphAsync(SystemCodeNumber, ObjectName, time, speed, null);
        }
        
        /// <remarks/>
        public void View_DynamicBySCNForGraphAsync(string SystemCodeNumber, string ObjectName, string time, string speed, object userState) {
            if ((this.View_DynamicBySCNForGraphOperationCompleted == null)) {
                this.View_DynamicBySCNForGraphOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_DynamicBySCNForGraphOperationCompleted);
            }
            this.InvokeAsync("View_DynamicBySCNForGraph", new object[] {
                        SystemCodeNumber,
                        ObjectName,
                        time,
                        speed}, this.View_DynamicBySCNForGraphOperationCompleted, userState);
        }
        
        private void OnView_DynamicBySCNForGraphOperationCompleted(object arg) {
            if ((this.View_DynamicBySCNForGraphCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_DynamicBySCNForGraphCompleted(this, new View_DynamicBySCNForGraphCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_DisruptionDetailsBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_DisruptionDetailsBySCN(string SystemCodeNumber, int ObjectId, bool IsDetailsPage) {
            object[] results = this.Invoke("View_DisruptionDetailsBySCN", new object[] {
                        SystemCodeNumber,
                        ObjectId,
                        IsDetailsPage});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_DisruptionDetailsBySCNAsync(string SystemCodeNumber, int ObjectId, bool IsDetailsPage) {
            this.View_DisruptionDetailsBySCNAsync(SystemCodeNumber, ObjectId, IsDetailsPage, null);
        }
        
        /// <remarks/>
        public void View_DisruptionDetailsBySCNAsync(string SystemCodeNumber, int ObjectId, bool IsDetailsPage, object userState) {
            if ((this.View_DisruptionDetailsBySCNOperationCompleted == null)) {
                this.View_DisruptionDetailsBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_DisruptionDetailsBySCNOperationCompleted);
            }
            this.InvokeAsync("View_DisruptionDetailsBySCN", new object[] {
                        SystemCodeNumber,
                        ObjectId,
                        IsDetailsPage}, this.View_DisruptionDetailsBySCNOperationCompleted, userState);
        }
        
        private void OnView_DisruptionDetailsBySCNOperationCompleted(object arg) {
            if ((this.View_DisruptionDetailsBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_DisruptionDetailsBySCNCompleted(this, new View_DisruptionDetailsBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/OpeningTime_ByDayType", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet OpeningTime_ByDayType(string systemCodeNumber, string lastupDated, string objectName) {
            object[] results = this.Invoke("OpeningTime_ByDayType", new object[] {
                        systemCodeNumber,
                        lastupDated,
                        objectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void OpeningTime_ByDayTypeAsync(string systemCodeNumber, string lastupDated, string objectName) {
            this.OpeningTime_ByDayTypeAsync(systemCodeNumber, lastupDated, objectName, null);
        }
        
        /// <remarks/>
        public void OpeningTime_ByDayTypeAsync(string systemCodeNumber, string lastupDated, string objectName, object userState) {
            if ((this.OpeningTime_ByDayTypeOperationCompleted == null)) {
                this.OpeningTime_ByDayTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpeningTime_ByDayTypeOperationCompleted);
            }
            this.InvokeAsync("OpeningTime_ByDayType", new object[] {
                        systemCodeNumber,
                        lastupDated,
                        objectName}, this.OpeningTime_ByDayTypeOperationCompleted, userState);
        }
        
        private void OnOpeningTime_ByDayTypeOperationCompleted(object arg) {
            if ((this.OpeningTime_ByDayTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpeningTime_ByDayTypeCompleted(this, new OpeningTime_ByDayTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/OpeningTime_ByDayType_New", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet OpeningTime_ByDayType_New(string systemCodeNumber, int dayTypeId, string objectName) {
            object[] results = this.Invoke("OpeningTime_ByDayType_New", new object[] {
                        systemCodeNumber,
                        dayTypeId,
                        objectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void OpeningTime_ByDayType_NewAsync(string systemCodeNumber, int dayTypeId, string objectName) {
            this.OpeningTime_ByDayType_NewAsync(systemCodeNumber, dayTypeId, objectName, null);
        }
        
        /// <remarks/>
        public void OpeningTime_ByDayType_NewAsync(string systemCodeNumber, int dayTypeId, string objectName, object userState) {
            if ((this.OpeningTime_ByDayType_NewOperationCompleted == null)) {
                this.OpeningTime_ByDayType_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpeningTime_ByDayType_NewOperationCompleted);
            }
            this.InvokeAsync("OpeningTime_ByDayType_New", new object[] {
                        systemCodeNumber,
                        dayTypeId,
                        objectName}, this.OpeningTime_ByDayType_NewOperationCompleted, userState);
        }
        
        private void OnOpeningTime_ByDayType_NewOperationCompleted(object arg) {
            if ((this.OpeningTime_ByDayType_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpeningTime_ByDayType_NewCompleted(this, new OpeningTime_ByDayType_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/IsDayType_Exists", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDayType_Exists(string systemCodeNumber, int dayTypeId, string objectName) {
            object[] results = this.Invoke("IsDayType_Exists", new object[] {
                        systemCodeNumber,
                        dayTypeId,
                        objectName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDayType_ExistsAsync(string systemCodeNumber, int dayTypeId, string objectName) {
            this.IsDayType_ExistsAsync(systemCodeNumber, dayTypeId, objectName, null);
        }
        
        /// <remarks/>
        public void IsDayType_ExistsAsync(string systemCodeNumber, int dayTypeId, string objectName, object userState) {
            if ((this.IsDayType_ExistsOperationCompleted == null)) {
                this.IsDayType_ExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDayType_ExistsOperationCompleted);
            }
            this.InvokeAsync("IsDayType_Exists", new object[] {
                        systemCodeNumber,
                        dayTypeId,
                        objectName}, this.IsDayType_ExistsOperationCompleted, userState);
        }
        
        private void OnIsDayType_ExistsOperationCompleted(object arg) {
            if ((this.IsDayType_ExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDayType_ExistsCompleted(this, new IsDayType_ExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Check_Date_DateRange", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Check_Date_DateRange(System.DateTime startDate, System.DateTime endDate, ref int dateRangeId, string description) {
            object[] results = this.Invoke("Check_Date_DateRange", new object[] {
                        startDate,
                        endDate,
                        dateRangeId,
                        description});
            dateRangeId = ((int)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Check_Date_DateRangeAsync(System.DateTime startDate, System.DateTime endDate, int dateRangeId, string description) {
            this.Check_Date_DateRangeAsync(startDate, endDate, dateRangeId, description, null);
        }
        
        /// <remarks/>
        public void Check_Date_DateRangeAsync(System.DateTime startDate, System.DateTime endDate, int dateRangeId, string description, object userState) {
            if ((this.Check_Date_DateRangeOperationCompleted == null)) {
                this.Check_Date_DateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheck_Date_DateRangeOperationCompleted);
            }
            this.InvokeAsync("Check_Date_DateRange", new object[] {
                        startDate,
                        endDate,
                        dateRangeId,
                        description}, this.Check_Date_DateRangeOperationCompleted, userState);
        }
        
        private void OnCheck_Date_DateRangeOperationCompleted(object arg) {
            if ((this.Check_Date_DateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Check_Date_DateRangeCompleted(this, new Check_Date_DateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_DateRange", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_DateRange(int dateRangeId) {
            this.Invoke("Delete_DateRange", new object[] {
                        dateRangeId});
        }
        
        /// <remarks/>
        public void Delete_DateRangeAsync(int dateRangeId) {
            this.Delete_DateRangeAsync(dateRangeId, null);
        }
        
        /// <remarks/>
        public void Delete_DateRangeAsync(int dateRangeId, object userState) {
            if ((this.Delete_DateRangeOperationCompleted == null)) {
                this.Delete_DateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_DateRangeOperationCompleted);
            }
            this.InvokeAsync("Delete_DateRange", new object[] {
                        dateRangeId}, this.Delete_DateRangeOperationCompleted, userState);
        }
        
        private void OnDelete_DateRangeOperationCompleted(object arg) {
            if ((this.Delete_DateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_DateRangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Update_Opening_Time_DateRange", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_Opening_Time_DateRange(System.DateTime startDate, System.DateTime endDate, string description, int dateRangeId, string userName, string systemCodeNumber, string objectName) {
            this.Invoke("Update_Opening_Time_DateRange", new object[] {
                        startDate,
                        endDate,
                        description,
                        dateRangeId,
                        userName,
                        systemCodeNumber,
                        objectName});
        }
        
        /// <remarks/>
        public void Update_Opening_Time_DateRangeAsync(System.DateTime startDate, System.DateTime endDate, string description, int dateRangeId, string userName, string systemCodeNumber, string objectName) {
            this.Update_Opening_Time_DateRangeAsync(startDate, endDate, description, dateRangeId, userName, systemCodeNumber, objectName, null);
        }
        
        /// <remarks/>
        public void Update_Opening_Time_DateRangeAsync(System.DateTime startDate, System.DateTime endDate, string description, int dateRangeId, string userName, string systemCodeNumber, string objectName, object userState) {
            if ((this.Update_Opening_Time_DateRangeOperationCompleted == null)) {
                this.Update_Opening_Time_DateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Opening_Time_DateRangeOperationCompleted);
            }
            this.InvokeAsync("Update_Opening_Time_DateRange", new object[] {
                        startDate,
                        endDate,
                        description,
                        dateRangeId,
                        userName,
                        systemCodeNumber,
                        objectName}, this.Update_Opening_Time_DateRangeOperationCompleted, userState);
        }
        
        private void OnUpdate_Opening_Time_DateRangeOperationCompleted(object arg) {
            if ((this.Update_Opening_Time_DateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_Opening_Time_DateRangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_NewOpeningDateRangeID_Description", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_NewOpeningDateRangeID_Description(string SystemCodeNumber, string ObjectName) {
            object[] results = this.Invoke("List_NewOpeningDateRangeID_Description", new object[] {
                        SystemCodeNumber,
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_NewOpeningDateRangeID_DescriptionAsync(string SystemCodeNumber, string ObjectName) {
            this.List_NewOpeningDateRangeID_DescriptionAsync(SystemCodeNumber, ObjectName, null);
        }
        
        /// <remarks/>
        public void List_NewOpeningDateRangeID_DescriptionAsync(string SystemCodeNumber, string ObjectName, object userState) {
            if ((this.List_NewOpeningDateRangeID_DescriptionOperationCompleted == null)) {
                this.List_NewOpeningDateRangeID_DescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_NewOpeningDateRangeID_DescriptionOperationCompleted);
            }
            this.InvokeAsync("List_NewOpeningDateRangeID_Description", new object[] {
                        SystemCodeNumber,
                        ObjectName}, this.List_NewOpeningDateRangeID_DescriptionOperationCompleted, userState);
        }
        
        private void OnList_NewOpeningDateRangeID_DescriptionOperationCompleted(object arg) {
            if ((this.List_NewOpeningDateRangeID_DescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_NewOpeningDateRangeID_DescriptionCompleted(this, new List_NewOpeningDateRangeID_DescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Opening_Time_DateRange", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_Opening_Time_DateRange(string systemCodeNumber, System.DateTime startDate, System.DateTime endDate, string description, string objectName) {
            this.Invoke("New_Opening_Time_DateRange", new object[] {
                        systemCodeNumber,
                        startDate,
                        endDate,
                        description,
                        objectName});
        }
        
        /// <remarks/>
        public void New_Opening_Time_DateRangeAsync(string systemCodeNumber, System.DateTime startDate, System.DateTime endDate, string description, string objectName) {
            this.New_Opening_Time_DateRangeAsync(systemCodeNumber, startDate, endDate, description, objectName, null);
        }
        
        /// <remarks/>
        public void New_Opening_Time_DateRangeAsync(string systemCodeNumber, System.DateTime startDate, System.DateTime endDate, string description, string objectName, object userState) {
            if ((this.New_Opening_Time_DateRangeOperationCompleted == null)) {
                this.New_Opening_Time_DateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_Opening_Time_DateRangeOperationCompleted);
            }
            this.InvokeAsync("New_Opening_Time_DateRange", new object[] {
                        systemCodeNumber,
                        startDate,
                        endDate,
                        description,
                        objectName}, this.New_Opening_Time_DateRangeOperationCompleted, userState);
        }
        
        private void OnNew_Opening_Time_DateRangeOperationCompleted(object arg) {
            if ((this.New_Opening_Time_DateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_Opening_Time_DateRangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Opening_Time_DayTypeID", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_Opening_Time_DayTypeID(string StartDate, string EndDate) {
            this.Invoke("New_Opening_Time_DayTypeID", new object[] {
                        StartDate,
                        EndDate});
        }
        
        /// <remarks/>
        public void New_Opening_Time_DayTypeIDAsync(string StartDate, string EndDate) {
            this.New_Opening_Time_DayTypeIDAsync(StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void New_Opening_Time_DayTypeIDAsync(string StartDate, string EndDate, object userState) {
            if ((this.New_Opening_Time_DayTypeIDOperationCompleted == null)) {
                this.New_Opening_Time_DayTypeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_Opening_Time_DayTypeIDOperationCompleted);
            }
            this.InvokeAsync("New_Opening_Time_DayTypeID", new object[] {
                        StartDate,
                        EndDate}, this.New_Opening_Time_DayTypeIDOperationCompleted, userState);
        }
        
        private void OnNew_Opening_Time_DayTypeIDOperationCompleted(object arg) {
            if ((this.New_Opening_Time_DayTypeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_Opening_Time_DayTypeIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Edit_Opening_Time_DayTypeID", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Edit_Opening_Time_DayTypeID(string StartDate, string EndDate, int DateRangeId) {
            this.Invoke("Edit_Opening_Time_DayTypeID", new object[] {
                        StartDate,
                        EndDate,
                        DateRangeId});
        }
        
        /// <remarks/>
        public void Edit_Opening_Time_DayTypeIDAsync(string StartDate, string EndDate, int DateRangeId) {
            this.Edit_Opening_Time_DayTypeIDAsync(StartDate, EndDate, DateRangeId, null);
        }
        
        /// <remarks/>
        public void Edit_Opening_Time_DayTypeIDAsync(string StartDate, string EndDate, int DateRangeId, object userState) {
            if ((this.Edit_Opening_Time_DayTypeIDOperationCompleted == null)) {
                this.Edit_Opening_Time_DayTypeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEdit_Opening_Time_DayTypeIDOperationCompleted);
            }
            this.InvokeAsync("Edit_Opening_Time_DayTypeID", new object[] {
                        StartDate,
                        EndDate,
                        DateRangeId}, this.Edit_Opening_Time_DayTypeIDOperationCompleted, userState);
        }
        
        private void OnEdit_Opening_Time_DayTypeIDOperationCompleted(object arg) {
            if ((this.Edit_Opening_Time_DayTypeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Edit_Opening_Time_DayTypeIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_NewOpening_dropDownSelection", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_NewOpening_dropDownSelection(int DateRange) {
            object[] results = this.Invoke("List_NewOpening_dropDownSelection", new object[] {
                        DateRange});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_NewOpening_dropDownSelectionAsync(int DateRange) {
            this.List_NewOpening_dropDownSelectionAsync(DateRange, null);
        }
        
        /// <remarks/>
        public void List_NewOpening_dropDownSelectionAsync(int DateRange, object userState) {
            if ((this.List_NewOpening_dropDownSelectionOperationCompleted == null)) {
                this.List_NewOpening_dropDownSelectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_NewOpening_dropDownSelectionOperationCompleted);
            }
            this.InvokeAsync("List_NewOpening_dropDownSelection", new object[] {
                        DateRange}, this.List_NewOpening_dropDownSelectionOperationCompleted, userState);
        }
        
        private void OnList_NewOpening_dropDownSelectionOperationCompleted(object arg) {
            if ((this.List_NewOpening_dropDownSelectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_NewOpening_dropDownSelectionCompleted(this, new List_NewOpening_dropDownSelectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Default_NewOpening_dropDownSelection", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Default_NewOpening_dropDownSelection() {
            object[] results = this.Invoke("List_Default_NewOpening_dropDownSelection", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_Default_NewOpening_dropDownSelectionAsync() {
            this.List_Default_NewOpening_dropDownSelectionAsync(null);
        }
        
        /// <remarks/>
        public void List_Default_NewOpening_dropDownSelectionAsync(object userState) {
            if ((this.List_Default_NewOpening_dropDownSelectionOperationCompleted == null)) {
                this.List_Default_NewOpening_dropDownSelectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_Default_NewOpening_dropDownSelectionOperationCompleted);
            }
            this.InvokeAsync("List_Default_NewOpening_dropDownSelection", new object[0], this.List_Default_NewOpening_dropDownSelectionOperationCompleted, userState);
        }
        
        private void OnList_Default_NewOpening_dropDownSelectionOperationCompleted(object arg) {
            if ((this.List_Default_NewOpening_dropDownSelectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_Default_NewOpening_dropDownSelectionCompleted(this, new List_Default_NewOpening_dropDownSelectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/DateRange_DefinitionBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet DateRange_DefinitionBySCN(int DateRangeID) {
            object[] results = this.Invoke("DateRange_DefinitionBySCN", new object[] {
                        DateRangeID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void DateRange_DefinitionBySCNAsync(int DateRangeID) {
            this.DateRange_DefinitionBySCNAsync(DateRangeID, null);
        }
        
        /// <remarks/>
        public void DateRange_DefinitionBySCNAsync(int DateRangeID, object userState) {
            if ((this.DateRange_DefinitionBySCNOperationCompleted == null)) {
                this.DateRange_DefinitionBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDateRange_DefinitionBySCNOperationCompleted);
            }
            this.InvokeAsync("DateRange_DefinitionBySCN", new object[] {
                        DateRangeID}, this.DateRange_DefinitionBySCNOperationCompleted, userState);
        }
        
        private void OnDateRange_DefinitionBySCNOperationCompleted(object arg) {
            if ((this.DateRange_DefinitionBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DateRange_DefinitionBySCNCompleted(this, new DateRange_DefinitionBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DateRange", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DateRange() {
            object[] results = this.Invoke("List_DateRange", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DateRangeAsync() {
            this.List_DateRangeAsync(null);
        }
        
        /// <remarks/>
        public void List_DateRangeAsync(object userState) {
            if ((this.List_DateRangeOperationCompleted == null)) {
                this.List_DateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DateRangeOperationCompleted);
            }
            this.InvokeAsync("List_DateRange", new object[0], this.List_DateRangeOperationCompleted, userState);
        }
        
        private void OnList_DateRangeOperationCompleted(object arg) {
            if ((this.List_DateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DateRangeCompleted(this, new List_DateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_AllOpeningTimes_BySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_AllOpeningTimes_BySCN(string systemCodeNumber, string objectName) {
            object[] results = this.Invoke("List_AllOpeningTimes_BySCN", new object[] {
                        systemCodeNumber,
                        objectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_AllOpeningTimes_BySCNAsync(string systemCodeNumber, string objectName) {
            this.List_AllOpeningTimes_BySCNAsync(systemCodeNumber, objectName, null);
        }
        
        /// <remarks/>
        public void List_AllOpeningTimes_BySCNAsync(string systemCodeNumber, string objectName, object userState) {
            if ((this.List_AllOpeningTimes_BySCNOperationCompleted == null)) {
                this.List_AllOpeningTimes_BySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_AllOpeningTimes_BySCNOperationCompleted);
            }
            this.InvokeAsync("List_AllOpeningTimes_BySCN", new object[] {
                        systemCodeNumber,
                        objectName}, this.List_AllOpeningTimes_BySCNOperationCompleted, userState);
        }
        
        private void OnList_AllOpeningTimes_BySCNOperationCompleted(object arg) {
            if ((this.List_AllOpeningTimes_BySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_AllOpeningTimes_BySCNCompleted(this, new List_AllOpeningTimes_BySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/OpeningTimes_BySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet OpeningTimes_BySCN(string systemCodeNumber, string objectName) {
            object[] results = this.Invoke("OpeningTimes_BySCN", new object[] {
                        systemCodeNumber,
                        objectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void OpeningTimes_BySCNAsync(string systemCodeNumber, string objectName) {
            this.OpeningTimes_BySCNAsync(systemCodeNumber, objectName, null);
        }
        
        /// <remarks/>
        public void OpeningTimes_BySCNAsync(string systemCodeNumber, string objectName, object userState) {
            if ((this.OpeningTimes_BySCNOperationCompleted == null)) {
                this.OpeningTimes_BySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpeningTimes_BySCNOperationCompleted);
            }
            this.InvokeAsync("OpeningTimes_BySCN", new object[] {
                        systemCodeNumber,
                        objectName}, this.OpeningTimes_BySCNOperationCompleted, userState);
        }
        
        private void OnOpeningTimes_BySCNOperationCompleted(object arg) {
            if ((this.OpeningTimes_BySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpeningTimes_BySCNCompleted(this, new OpeningTimes_BySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_Opening_Time", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_Opening_Time(string SystemCodeNumber, System.Data.DataSet DeleteTimings, string UserName, string objectName) {
            this.Invoke("Delete_Opening_Time", new object[] {
                        SystemCodeNumber,
                        DeleteTimings,
                        UserName,
                        objectName});
        }
        
        /// <remarks/>
        public void Delete_Opening_TimeAsync(string SystemCodeNumber, System.Data.DataSet DeleteTimings, string UserName, string objectName) {
            this.Delete_Opening_TimeAsync(SystemCodeNumber, DeleteTimings, UserName, objectName, null);
        }
        
        /// <remarks/>
        public void Delete_Opening_TimeAsync(string SystemCodeNumber, System.Data.DataSet DeleteTimings, string UserName, string objectName, object userState) {
            if ((this.Delete_Opening_TimeOperationCompleted == null)) {
                this.Delete_Opening_TimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Opening_TimeOperationCompleted);
            }
            this.InvokeAsync("Delete_Opening_Time", new object[] {
                        SystemCodeNumber,
                        DeleteTimings,
                        UserName,
                        objectName}, this.Delete_Opening_TimeOperationCompleted, userState);
        }
        
        private void OnDelete_Opening_TimeOperationCompleted(object arg) {
            if ((this.Delete_Opening_TimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Opening_TimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_Opening_Time_New", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_Opening_Time_New(string SystemCodeNumber, int DayTypeId, string UserName, string objectName) {
            this.Invoke("Delete_Opening_Time_New", new object[] {
                        SystemCodeNumber,
                        DayTypeId,
                        UserName,
                        objectName});
        }
        
        /// <remarks/>
        public void Delete_Opening_Time_NewAsync(string SystemCodeNumber, int DayTypeId, string UserName, string objectName) {
            this.Delete_Opening_Time_NewAsync(SystemCodeNumber, DayTypeId, UserName, objectName, null);
        }
        
        /// <remarks/>
        public void Delete_Opening_Time_NewAsync(string SystemCodeNumber, int DayTypeId, string UserName, string objectName, object userState) {
            if ((this.Delete_Opening_Time_NewOperationCompleted == null)) {
                this.Delete_Opening_Time_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Opening_Time_NewOperationCompleted);
            }
            this.InvokeAsync("Delete_Opening_Time_New", new object[] {
                        SystemCodeNumber,
                        DayTypeId,
                        UserName,
                        objectName}, this.Delete_Opening_Time_NewOperationCompleted, userState);
        }
        
        private void OnDelete_Opening_Time_NewOperationCompleted(object arg) {
            if ((this.Delete_Opening_Time_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Opening_Time_NewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Insert_Opening_Time", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_Opening_Time(string SystemCodeNumber, int FromDayID, int DayIDTo, System.DateTime startDateTime, System.DateTime endDateTime, System.Data.DataSet DeleteTimings, string UserName, string objectName, int Difference, string DateRangeId) {
            this.Invoke("Insert_Opening_Time", new object[] {
                        SystemCodeNumber,
                        FromDayID,
                        DayIDTo,
                        startDateTime,
                        endDateTime,
                        DeleteTimings,
                        UserName,
                        objectName,
                        Difference,
                        DateRangeId});
        }
        
        /// <remarks/>
        public void Insert_Opening_TimeAsync(string SystemCodeNumber, int FromDayID, int DayIDTo, System.DateTime startDateTime, System.DateTime endDateTime, System.Data.DataSet DeleteTimings, string UserName, string objectName, int Difference, string DateRangeId) {
            this.Insert_Opening_TimeAsync(SystemCodeNumber, FromDayID, DayIDTo, startDateTime, endDateTime, DeleteTimings, UserName, objectName, Difference, DateRangeId, null);
        }
        
        /// <remarks/>
        public void Insert_Opening_TimeAsync(string SystemCodeNumber, int FromDayID, int DayIDTo, System.DateTime startDateTime, System.DateTime endDateTime, System.Data.DataSet DeleteTimings, string UserName, string objectName, int Difference, string DateRangeId, object userState) {
            if ((this.Insert_Opening_TimeOperationCompleted == null)) {
                this.Insert_Opening_TimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_Opening_TimeOperationCompleted);
            }
            this.InvokeAsync("Insert_Opening_Time", new object[] {
                        SystemCodeNumber,
                        FromDayID,
                        DayIDTo,
                        startDateTime,
                        endDateTime,
                        DeleteTimings,
                        UserName,
                        objectName,
                        Difference,
                        DateRangeId}, this.Insert_Opening_TimeOperationCompleted, userState);
        }
        
        private void OnInsert_Opening_TimeOperationCompleted(object arg) {
            if ((this.Insert_Opening_TimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_Opening_TimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Insert_Opening_Time_New", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_Opening_Time_New(string SystemCodeNumber, int DayID, System.DateTime startDateTime, System.DateTime endDateTime, string UserName, string objectName, string DateRangeId, bool IsUpdate) {
            this.Invoke("Insert_Opening_Time_New", new object[] {
                        SystemCodeNumber,
                        DayID,
                        startDateTime,
                        endDateTime,
                        UserName,
                        objectName,
                        DateRangeId,
                        IsUpdate});
        }
        
        /// <remarks/>
        public void Insert_Opening_Time_NewAsync(string SystemCodeNumber, int DayID, System.DateTime startDateTime, System.DateTime endDateTime, string UserName, string objectName, string DateRangeId, bool IsUpdate) {
            this.Insert_Opening_Time_NewAsync(SystemCodeNumber, DayID, startDateTime, endDateTime, UserName, objectName, DateRangeId, IsUpdate, null);
        }
        
        /// <remarks/>
        public void Insert_Opening_Time_NewAsync(string SystemCodeNumber, int DayID, System.DateTime startDateTime, System.DateTime endDateTime, string UserName, string objectName, string DateRangeId, bool IsUpdate, object userState) {
            if ((this.Insert_Opening_Time_NewOperationCompleted == null)) {
                this.Insert_Opening_Time_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_Opening_Time_NewOperationCompleted);
            }
            this.InvokeAsync("Insert_Opening_Time_New", new object[] {
                        SystemCodeNumber,
                        DayID,
                        startDateTime,
                        endDateTime,
                        UserName,
                        objectName,
                        DateRangeId,
                        IsUpdate}, this.Insert_Opening_Time_NewOperationCompleted, userState);
        }
        
        private void OnInsert_Opening_Time_NewOperationCompleted(object arg) {
            if ((this.Insert_Opening_Time_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_Opening_Time_NewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Day_TypeID_By_DateRangeId", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Day_TypeID_By_DateRangeId(string DateRangeId) {
            object[] results = this.Invoke("List_Day_TypeID_By_DateRangeId", new object[] {
                        DateRangeId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_Day_TypeID_By_DateRangeIdAsync(string DateRangeId) {
            this.List_Day_TypeID_By_DateRangeIdAsync(DateRangeId, null);
        }
        
        /// <remarks/>
        public void List_Day_TypeID_By_DateRangeIdAsync(string DateRangeId, object userState) {
            if ((this.List_Day_TypeID_By_DateRangeIdOperationCompleted == null)) {
                this.List_Day_TypeID_By_DateRangeIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_Day_TypeID_By_DateRangeIdOperationCompleted);
            }
            this.InvokeAsync("List_Day_TypeID_By_DateRangeId", new object[] {
                        DateRangeId}, this.List_Day_TypeID_By_DateRangeIdOperationCompleted, userState);
        }
        
        private void OnList_Day_TypeID_By_DateRangeIdOperationCompleted(object arg) {
            if ((this.List_Day_TypeID_By_DateRangeIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_Day_TypeID_By_DateRangeIdCompleted(this, new List_Day_TypeID_By_DateRangeIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_OpeningTimesBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_OpeningTimesBySCN(string systemCodeNumber, string objectName) {
            object[] results = this.Invoke("List_OpeningTimesBySCN", new object[] {
                        systemCodeNumber,
                        objectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_OpeningTimesBySCNAsync(string systemCodeNumber, string objectName) {
            this.List_OpeningTimesBySCNAsync(systemCodeNumber, objectName, null);
        }
        
        /// <remarks/>
        public void List_OpeningTimesBySCNAsync(string systemCodeNumber, string objectName, object userState) {
            if ((this.List_OpeningTimesBySCNOperationCompleted == null)) {
                this.List_OpeningTimesBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_OpeningTimesBySCNOperationCompleted);
            }
            this.InvokeAsync("List_OpeningTimesBySCN", new object[] {
                        systemCodeNumber,
                        objectName}, this.List_OpeningTimesBySCNOperationCompleted, userState);
        }
        
        private void OnList_OpeningTimesBySCNOperationCompleted(object arg) {
            if ((this.List_OpeningTimesBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_OpeningTimesBySCNCompleted(this, new List_OpeningTimesBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_TariffsBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_TariffsBySCN(string systemCodeNumber, string objectName) {
            object[] results = this.Invoke("List_TariffsBySCN", new object[] {
                        systemCodeNumber,
                        objectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_TariffsBySCNAsync(string systemCodeNumber, string objectName) {
            this.List_TariffsBySCNAsync(systemCodeNumber, objectName, null);
        }
        
        /// <remarks/>
        public void List_TariffsBySCNAsync(string systemCodeNumber, string objectName, object userState) {
            if ((this.List_TariffsBySCNOperationCompleted == null)) {
                this.List_TariffsBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_TariffsBySCNOperationCompleted);
            }
            this.InvokeAsync("List_TariffsBySCN", new object[] {
                        systemCodeNumber,
                        objectName}, this.List_TariffsBySCNOperationCompleted, userState);
        }
        
        private void OnList_TariffsBySCNOperationCompleted(object arg) {
            if ((this.List_TariffsBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_TariffsBySCNCompleted(this, new List_TariffsBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_TariffsBySCNDayID", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_TariffsBySCNDayID(string SystemCodeNumber, int DayID, int dateRangeId, string Period, double Cost, string UserName, string objectName) {
            this.Invoke("New_TariffsBySCNDayID", new object[] {
                        SystemCodeNumber,
                        DayID,
                        dateRangeId,
                        Period,
                        Cost,
                        UserName,
                        objectName});
        }
        
        /// <remarks/>
        public void New_TariffsBySCNDayIDAsync(string SystemCodeNumber, int DayID, int dateRangeId, string Period, double Cost, string UserName, string objectName) {
            this.New_TariffsBySCNDayIDAsync(SystemCodeNumber, DayID, dateRangeId, Period, Cost, UserName, objectName, null);
        }
        
        /// <remarks/>
        public void New_TariffsBySCNDayIDAsync(string SystemCodeNumber, int DayID, int dateRangeId, string Period, double Cost, string UserName, string objectName, object userState) {
            if ((this.New_TariffsBySCNDayIDOperationCompleted == null)) {
                this.New_TariffsBySCNDayIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_TariffsBySCNDayIDOperationCompleted);
            }
            this.InvokeAsync("New_TariffsBySCNDayID", new object[] {
                        SystemCodeNumber,
                        DayID,
                        dateRangeId,
                        Period,
                        Cost,
                        UserName,
                        objectName}, this.New_TariffsBySCNDayIDOperationCompleted, userState);
        }
        
        private void OnNew_TariffsBySCNDayIDOperationCompleted(object arg) {
            if ((this.New_TariffsBySCNDayIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_TariffsBySCNDayIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Get_Hour", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Hour() {
            object[] results = this.Invoke("Get_Hour", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_HourAsync() {
            this.Get_HourAsync(null);
        }
        
        /// <remarks/>
        public void Get_HourAsync(object userState) {
            if ((this.Get_HourOperationCompleted == null)) {
                this.Get_HourOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_HourOperationCompleted);
            }
            this.InvokeAsync("Get_Hour", new object[0], this.Get_HourOperationCompleted, userState);
        }
        
        private void OnGet_HourOperationCompleted(object arg) {
            if ((this.Get_HourCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_HourCompleted(this, new Get_HourCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_TariffBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_TariffBySCN(string SystemCodeNumber, string ObjectName) {
            object[] results = this.Invoke("View_TariffBySCN", new object[] {
                        SystemCodeNumber,
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_TariffBySCNAsync(string SystemCodeNumber, string ObjectName) {
            this.View_TariffBySCNAsync(SystemCodeNumber, ObjectName, null);
        }
        
        /// <remarks/>
        public void View_TariffBySCNAsync(string SystemCodeNumber, string ObjectName, object userState) {
            if ((this.View_TariffBySCNOperationCompleted == null)) {
                this.View_TariffBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_TariffBySCNOperationCompleted);
            }
            this.InvokeAsync("View_TariffBySCN", new object[] {
                        SystemCodeNumber,
                        ObjectName}, this.View_TariffBySCNOperationCompleted, userState);
        }
        
        private void OnView_TariffBySCNOperationCompleted(object arg) {
            if ((this.View_TariffBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_TariffBySCNCompleted(this, new View_TariffBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_TariffBySCN_For_DateRange", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_TariffBySCN_For_DateRange(string SystemCodeNumber, string ObjectName, int DateRangeId) {
            object[] results = this.Invoke("View_TariffBySCN_For_DateRange", new object[] {
                        SystemCodeNumber,
                        ObjectName,
                        DateRangeId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_TariffBySCN_For_DateRangeAsync(string SystemCodeNumber, string ObjectName, int DateRangeId) {
            this.View_TariffBySCN_For_DateRangeAsync(SystemCodeNumber, ObjectName, DateRangeId, null);
        }
        
        /// <remarks/>
        public void View_TariffBySCN_For_DateRangeAsync(string SystemCodeNumber, string ObjectName, int DateRangeId, object userState) {
            if ((this.View_TariffBySCN_For_DateRangeOperationCompleted == null)) {
                this.View_TariffBySCN_For_DateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_TariffBySCN_For_DateRangeOperationCompleted);
            }
            this.InvokeAsync("View_TariffBySCN_For_DateRange", new object[] {
                        SystemCodeNumber,
                        ObjectName,
                        DateRangeId}, this.View_TariffBySCN_For_DateRangeOperationCompleted, userState);
        }
        
        private void OnView_TariffBySCN_For_DateRangeOperationCompleted(object arg) {
            if ((this.View_TariffBySCN_For_DateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_TariffBySCN_For_DateRangeCompleted(this, new View_TariffBySCN_For_DateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Get_OptisObjects_SignText", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_OptisObjects_SignText(string objectName, string systemCodeNumber) {
            object[] results = this.Invoke("Get_OptisObjects_SignText", new object[] {
                        objectName,
                        systemCodeNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_OptisObjects_SignTextAsync(string objectName, string systemCodeNumber) {
            this.Get_OptisObjects_SignTextAsync(objectName, systemCodeNumber, null);
        }
        
        /// <remarks/>
        public void Get_OptisObjects_SignTextAsync(string objectName, string systemCodeNumber, object userState) {
            if ((this.Get_OptisObjects_SignTextOperationCompleted == null)) {
                this.Get_OptisObjects_SignTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_OptisObjects_SignTextOperationCompleted);
            }
            this.InvokeAsync("Get_OptisObjects_SignText", new object[] {
                        objectName,
                        systemCodeNumber}, this.Get_OptisObjects_SignTextOperationCompleted, userState);
        }
        
        private void OnGet_OptisObjects_SignTextOperationCompleted(object arg) {
            if ((this.Get_OptisObjects_SignTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_OptisObjects_SignTextCompleted(this, new Get_OptisObjects_SignTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_ShortDescriptionByType", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_ShortDescriptionByType(string Type) {
            object[] results = this.Invoke("List_ShortDescriptionByType", new object[] {
                        Type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_ShortDescriptionByTypeAsync(string Type) {
            this.List_ShortDescriptionByTypeAsync(Type, null);
        }
        
        /// <remarks/>
        public void List_ShortDescriptionByTypeAsync(string Type, object userState) {
            if ((this.List_ShortDescriptionByTypeOperationCompleted == null)) {
                this.List_ShortDescriptionByTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_ShortDescriptionByTypeOperationCompleted);
            }
            this.InvokeAsync("List_ShortDescriptionByType", new object[] {
                        Type}, this.List_ShortDescriptionByTypeOperationCompleted, userState);
        }
        
        private void OnList_ShortDescriptionByTypeOperationCompleted(object arg) {
            if ((this.List_ShortDescriptionByTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_ShortDescriptionByTypeCompleted(this, new List_ShortDescriptionByTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Get_Object_DateRange", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_Object_DateRange(string ObjectName, int DateRangeId) {
            object[] results = this.Invoke("Get_Object_DateRange", new object[] {
                        ObjectName,
                        DateRangeId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_Object_DateRangeAsync(string ObjectName, int DateRangeId) {
            this.Get_Object_DateRangeAsync(ObjectName, DateRangeId, null);
        }
        
        /// <remarks/>
        public void Get_Object_DateRangeAsync(string ObjectName, int DateRangeId, object userState) {
            if ((this.Get_Object_DateRangeOperationCompleted == null)) {
                this.Get_Object_DateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_Object_DateRangeOperationCompleted);
            }
            this.InvokeAsync("Get_Object_DateRange", new object[] {
                        ObjectName,
                        DateRangeId}, this.Get_Object_DateRangeOperationCompleted, userState);
        }
        
        private void OnGet_Object_DateRangeOperationCompleted(object arg) {
            if ((this.Get_Object_DateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_Object_DateRangeCompleted(this, new Get_Object_DateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Insert_DateRange", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Insert_DateRange(string Description, string StartDate, string EndDate) {
            object[] results = this.Invoke("Insert_DateRange", new object[] {
                        Description,
                        StartDate,
                        EndDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Insert_DateRangeAsync(string Description, string StartDate, string EndDate) {
            this.Insert_DateRangeAsync(Description, StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void Insert_DateRangeAsync(string Description, string StartDate, string EndDate, object userState) {
            if ((this.Insert_DateRangeOperationCompleted == null)) {
                this.Insert_DateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_DateRangeOperationCompleted);
            }
            this.InvokeAsync("Insert_DateRange", new object[] {
                        Description,
                        StartDate,
                        EndDate}, this.Insert_DateRangeOperationCompleted, userState);
        }
        
        private void OnInsert_DateRangeOperationCompleted(object arg) {
            if ((this.Insert_DateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_DateRangeCompleted(this, new Insert_DateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Validate_DateRange", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Validate_DateRange(string Description, string StartDate, string EndDate, int DateRangeID) {
            object[] results = this.Invoke("Validate_DateRange", new object[] {
                        Description,
                        StartDate,
                        EndDate,
                        DateRangeID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Validate_DateRangeAsync(string Description, string StartDate, string EndDate, int DateRangeID) {
            this.Validate_DateRangeAsync(Description, StartDate, EndDate, DateRangeID, null);
        }
        
        /// <remarks/>
        public void Validate_DateRangeAsync(string Description, string StartDate, string EndDate, int DateRangeID, object userState) {
            if ((this.Validate_DateRangeOperationCompleted == null)) {
                this.Validate_DateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidate_DateRangeOperationCompleted);
            }
            this.InvokeAsync("Validate_DateRange", new object[] {
                        Description,
                        StartDate,
                        EndDate,
                        DateRangeID}, this.Validate_DateRangeOperationCompleted, userState);
        }
        
        private void OnValidate_DateRangeOperationCompleted(object arg) {
            if ((this.Validate_DateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Validate_DateRangeCompleted(this, new Validate_DateRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Update_DateRange", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_DateRange(string Description, string StartDate, string EndDate, int DateRangeId) {
            this.Invoke("Update_DateRange", new object[] {
                        Description,
                        StartDate,
                        EndDate,
                        DateRangeId});
        }
        
        /// <remarks/>
        public void Update_DateRangeAsync(string Description, string StartDate, string EndDate, int DateRangeId) {
            this.Update_DateRangeAsync(Description, StartDate, EndDate, DateRangeId, null);
        }
        
        /// <remarks/>
        public void Update_DateRangeAsync(string Description, string StartDate, string EndDate, int DateRangeId, object userState) {
            if ((this.Update_DateRangeOperationCompleted == null)) {
                this.Update_DateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_DateRangeOperationCompleted);
            }
            this.InvokeAsync("Update_DateRange", new object[] {
                        Description,
                        StartDate,
                        EndDate,
                        DateRangeId}, this.Update_DateRangeOperationCompleted, userState);
        }
        
        private void OnUpdate_DateRangeOperationCompleted(object arg) {
            if ((this.Update_DateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_DateRangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Objects_for_Daterange", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Objects_for_Daterange(string ObjectName, int DateRangeID, string StartDate, string EndDate) {
            object[] results = this.Invoke("List_Objects_for_Daterange", new object[] {
                        ObjectName,
                        DateRangeID,
                        StartDate,
                        EndDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_Objects_for_DaterangeAsync(string ObjectName, int DateRangeID, string StartDate, string EndDate) {
            this.List_Objects_for_DaterangeAsync(ObjectName, DateRangeID, StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void List_Objects_for_DaterangeAsync(string ObjectName, int DateRangeID, string StartDate, string EndDate, object userState) {
            if ((this.List_Objects_for_DaterangeOperationCompleted == null)) {
                this.List_Objects_for_DaterangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_Objects_for_DaterangeOperationCompleted);
            }
            this.InvokeAsync("List_Objects_for_Daterange", new object[] {
                        ObjectName,
                        DateRangeID,
                        StartDate,
                        EndDate}, this.List_Objects_for_DaterangeOperationCompleted, userState);
        }
        
        private void OnList_Objects_for_DaterangeOperationCompleted(object arg) {
            if ((this.List_Objects_for_DaterangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_Objects_for_DaterangeCompleted(this, new List_Objects_for_DaterangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Insert_DateRange_CyCleHubList", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_DateRange_CyCleHubList(int DateRangeId, string[] CycleHubSystemCodeNumber) {
            this.Invoke("Insert_DateRange_CyCleHubList", new object[] {
                        DateRangeId,
                        CycleHubSystemCodeNumber});
        }
        
        /// <remarks/>
        public void Insert_DateRange_CyCleHubListAsync(int DateRangeId, string[] CycleHubSystemCodeNumber) {
            this.Insert_DateRange_CyCleHubListAsync(DateRangeId, CycleHubSystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void Insert_DateRange_CyCleHubListAsync(int DateRangeId, string[] CycleHubSystemCodeNumber, object userState) {
            if ((this.Insert_DateRange_CyCleHubListOperationCompleted == null)) {
                this.Insert_DateRange_CyCleHubListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_DateRange_CyCleHubListOperationCompleted);
            }
            this.InvokeAsync("Insert_DateRange_CyCleHubList", new object[] {
                        DateRangeId,
                        CycleHubSystemCodeNumber}, this.Insert_DateRange_CyCleHubListOperationCompleted, userState);
        }
        
        private void OnInsert_DateRange_CyCleHubListOperationCompleted(object arg) {
            if ((this.Insert_DateRange_CyCleHubListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_DateRange_CyCleHubListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_DateRange_CycleHubList", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_DateRange_CycleHubList(int DateRangeId) {
            this.Invoke("Delete_DateRange_CycleHubList", new object[] {
                        DateRangeId});
        }
        
        /// <remarks/>
        public void Delete_DateRange_CycleHubListAsync(int DateRangeId) {
            this.Delete_DateRange_CycleHubListAsync(DateRangeId, null);
        }
        
        /// <remarks/>
        public void Delete_DateRange_CycleHubListAsync(int DateRangeId, object userState) {
            if ((this.Delete_DateRange_CycleHubListOperationCompleted == null)) {
                this.Delete_DateRange_CycleHubListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_DateRange_CycleHubListOperationCompleted);
            }
            this.InvokeAsync("Delete_DateRange_CycleHubList", new object[] {
                        DateRangeId}, this.Delete_DateRange_CycleHubListOperationCompleted, userState);
        }
        
        private void OnDelete_DateRange_CycleHubListOperationCompleted(object arg) {
            if ((this.Delete_DateRange_CycleHubListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_DateRange_CycleHubListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Insert_DateRange_EVChargingPointList", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_DateRange_EVChargingPointList(int DateRangeId, string[] EVChargingPointSystemCodeNumber) {
            this.Invoke("Insert_DateRange_EVChargingPointList", new object[] {
                        DateRangeId,
                        EVChargingPointSystemCodeNumber});
        }
        
        /// <remarks/>
        public void Insert_DateRange_EVChargingPointListAsync(int DateRangeId, string[] EVChargingPointSystemCodeNumber) {
            this.Insert_DateRange_EVChargingPointListAsync(DateRangeId, EVChargingPointSystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void Insert_DateRange_EVChargingPointListAsync(int DateRangeId, string[] EVChargingPointSystemCodeNumber, object userState) {
            if ((this.Insert_DateRange_EVChargingPointListOperationCompleted == null)) {
                this.Insert_DateRange_EVChargingPointListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_DateRange_EVChargingPointListOperationCompleted);
            }
            this.InvokeAsync("Insert_DateRange_EVChargingPointList", new object[] {
                        DateRangeId,
                        EVChargingPointSystemCodeNumber}, this.Insert_DateRange_EVChargingPointListOperationCompleted, userState);
        }
        
        private void OnInsert_DateRange_EVChargingPointListOperationCompleted(object arg) {
            if ((this.Insert_DateRange_EVChargingPointListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_DateRange_EVChargingPointListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_DateRange_EVChargingPointList", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_DateRange_EVChargingPointList(int DateRangeId) {
            this.Invoke("Delete_DateRange_EVChargingPointList", new object[] {
                        DateRangeId});
        }
        
        /// <remarks/>
        public void Delete_DateRange_EVChargingPointListAsync(int DateRangeId) {
            this.Delete_DateRange_EVChargingPointListAsync(DateRangeId, null);
        }
        
        /// <remarks/>
        public void Delete_DateRange_EVChargingPointListAsync(int DateRangeId, object userState) {
            if ((this.Delete_DateRange_EVChargingPointListOperationCompleted == null)) {
                this.Delete_DateRange_EVChargingPointListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_DateRange_EVChargingPointListOperationCompleted);
            }
            this.InvokeAsync("Delete_DateRange_EVChargingPointList", new object[] {
                        DateRangeId}, this.Delete_DateRange_EVChargingPointListOperationCompleted, userState);
        }
        
        private void OnDelete_DateRange_EVChargingPointListOperationCompleted(object arg) {
            if ((this.Delete_DateRange_EVChargingPointListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_DateRange_EVChargingPointListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Insert_DateRange_PointOfInterestList", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_DateRange_PointOfInterestList(int DateRangeId, string[] PointOfInterestSystemCodeNumber) {
            this.Invoke("Insert_DateRange_PointOfInterestList", new object[] {
                        DateRangeId,
                        PointOfInterestSystemCodeNumber});
        }
        
        /// <remarks/>
        public void Insert_DateRange_PointOfInterestListAsync(int DateRangeId, string[] PointOfInterestSystemCodeNumber) {
            this.Insert_DateRange_PointOfInterestListAsync(DateRangeId, PointOfInterestSystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void Insert_DateRange_PointOfInterestListAsync(int DateRangeId, string[] PointOfInterestSystemCodeNumber, object userState) {
            if ((this.Insert_DateRange_PointOfInterestListOperationCompleted == null)) {
                this.Insert_DateRange_PointOfInterestListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_DateRange_PointOfInterestListOperationCompleted);
            }
            this.InvokeAsync("Insert_DateRange_PointOfInterestList", new object[] {
                        DateRangeId,
                        PointOfInterestSystemCodeNumber}, this.Insert_DateRange_PointOfInterestListOperationCompleted, userState);
        }
        
        private void OnInsert_DateRange_PointOfInterestListOperationCompleted(object arg) {
            if ((this.Insert_DateRange_PointOfInterestListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_DateRange_PointOfInterestListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_DateRange_PointOfInterestList", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_DateRange_PointOfInterestList(int DateRangeId) {
            this.Invoke("Delete_DateRange_PointOfInterestList", new object[] {
                        DateRangeId});
        }
        
        /// <remarks/>
        public void Delete_DateRange_PointOfInterestListAsync(int DateRangeId) {
            this.Delete_DateRange_PointOfInterestListAsync(DateRangeId, null);
        }
        
        /// <remarks/>
        public void Delete_DateRange_PointOfInterestListAsync(int DateRangeId, object userState) {
            if ((this.Delete_DateRange_PointOfInterestListOperationCompleted == null)) {
                this.Delete_DateRange_PointOfInterestListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_DateRange_PointOfInterestListOperationCompleted);
            }
            this.InvokeAsync("Delete_DateRange_PointOfInterestList", new object[] {
                        DateRangeId}, this.Delete_DateRange_PointOfInterestListOperationCompleted, userState);
        }
        
        private void OnDelete_DateRange_PointOfInterestListOperationCompleted(object arg) {
            if ((this.Delete_DateRange_PointOfInterestListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_DateRange_PointOfInterestListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Insert_DateRange_Walkers_FacilityList", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_DateRange_Walkers_FacilityList(int DateRangeId, string[] Walkers_FacilitySystemCodeNumber) {
            this.Invoke("Insert_DateRange_Walkers_FacilityList", new object[] {
                        DateRangeId,
                        Walkers_FacilitySystemCodeNumber});
        }
        
        /// <remarks/>
        public void Insert_DateRange_Walkers_FacilityListAsync(int DateRangeId, string[] Walkers_FacilitySystemCodeNumber) {
            this.Insert_DateRange_Walkers_FacilityListAsync(DateRangeId, Walkers_FacilitySystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void Insert_DateRange_Walkers_FacilityListAsync(int DateRangeId, string[] Walkers_FacilitySystemCodeNumber, object userState) {
            if ((this.Insert_DateRange_Walkers_FacilityListOperationCompleted == null)) {
                this.Insert_DateRange_Walkers_FacilityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_DateRange_Walkers_FacilityListOperationCompleted);
            }
            this.InvokeAsync("Insert_DateRange_Walkers_FacilityList", new object[] {
                        DateRangeId,
                        Walkers_FacilitySystemCodeNumber}, this.Insert_DateRange_Walkers_FacilityListOperationCompleted, userState);
        }
        
        private void OnInsert_DateRange_Walkers_FacilityListOperationCompleted(object arg) {
            if ((this.Insert_DateRange_Walkers_FacilityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_DateRange_Walkers_FacilityListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_DateRange_Walkers_FacilityList", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_DateRange_Walkers_FacilityList(int DateRangeId) {
            this.Invoke("Delete_DateRange_Walkers_FacilityList", new object[] {
                        DateRangeId});
        }
        
        /// <remarks/>
        public void Delete_DateRange_Walkers_FacilityListAsync(int DateRangeId) {
            this.Delete_DateRange_Walkers_FacilityListAsync(DateRangeId, null);
        }
        
        /// <remarks/>
        public void Delete_DateRange_Walkers_FacilityListAsync(int DateRangeId, object userState) {
            if ((this.Delete_DateRange_Walkers_FacilityListOperationCompleted == null)) {
                this.Delete_DateRange_Walkers_FacilityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_DateRange_Walkers_FacilityListOperationCompleted);
            }
            this.InvokeAsync("Delete_DateRange_Walkers_FacilityList", new object[] {
                        DateRangeId}, this.Delete_DateRange_Walkers_FacilityListOperationCompleted, userState);
        }
        
        private void OnDelete_DateRange_Walkers_FacilityListOperationCompleted(object arg) {
            if ((this.Delete_DateRange_Walkers_FacilityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_DateRange_Walkers_FacilityListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Insert_DateRange_CarparkList", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Insert_DateRange_CarparkList(int DateRangeId, string[] CarParkSystemCodeNumber) {
            this.Invoke("Insert_DateRange_CarparkList", new object[] {
                        DateRangeId,
                        CarParkSystemCodeNumber});
        }
        
        /// <remarks/>
        public void Insert_DateRange_CarparkListAsync(int DateRangeId, string[] CarParkSystemCodeNumber) {
            this.Insert_DateRange_CarparkListAsync(DateRangeId, CarParkSystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void Insert_DateRange_CarparkListAsync(int DateRangeId, string[] CarParkSystemCodeNumber, object userState) {
            if ((this.Insert_DateRange_CarparkListOperationCompleted == null)) {
                this.Insert_DateRange_CarparkListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsert_DateRange_CarparkListOperationCompleted);
            }
            this.InvokeAsync("Insert_DateRange_CarparkList", new object[] {
                        DateRangeId,
                        CarParkSystemCodeNumber}, this.Insert_DateRange_CarparkListOperationCompleted, userState);
        }
        
        private void OnInsert_DateRange_CarparkListOperationCompleted(object arg) {
            if ((this.Insert_DateRange_CarparkListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Insert_DateRange_CarparkListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_DateRange_CarparkList", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_DateRange_CarparkList(int DateRangeId) {
            this.Invoke("Delete_DateRange_CarparkList", new object[] {
                        DateRangeId});
        }
        
        /// <remarks/>
        public void Delete_DateRange_CarparkListAsync(int DateRangeId) {
            this.Delete_DateRange_CarparkListAsync(DateRangeId, null);
        }
        
        /// <remarks/>
        public void Delete_DateRange_CarparkListAsync(int DateRangeId, object userState) {
            if ((this.Delete_DateRange_CarparkListOperationCompleted == null)) {
                this.Delete_DateRange_CarparkListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_DateRange_CarparkListOperationCompleted);
            }
            this.InvokeAsync("Delete_DateRange_CarparkList", new object[] {
                        DateRangeId}, this.Delete_DateRange_CarparkListOperationCompleted, userState);
        }
        
        private void OnDelete_DateRange_CarparkListOperationCompleted(object arg) {
            if ((this.Delete_DateRange_CarparkListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_DateRange_CarparkListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_NewDateRange", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_NewDateRange(int DateRangeId) {
            this.Invoke("Delete_NewDateRange", new object[] {
                        DateRangeId});
        }
        
        /// <remarks/>
        public void Delete_NewDateRangeAsync(int DateRangeId) {
            this.Delete_NewDateRangeAsync(DateRangeId, null);
        }
        
        /// <remarks/>
        public void Delete_NewDateRangeAsync(int DateRangeId, object userState) {
            if ((this.Delete_NewDateRangeOperationCompleted == null)) {
                this.Delete_NewDateRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_NewDateRangeOperationCompleted);
            }
            this.InvokeAsync("Delete_NewDateRange", new object[] {
                        DateRangeId}, this.Delete_NewDateRangeOperationCompleted, userState);
        }
        
        private void OnDelete_NewDateRangeOperationCompleted(object arg) {
            if ((this.Delete_NewDateRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_NewDateRangeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Objects", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Objects() {
            object[] results = this.Invoke("List_Objects", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_ObjectsAsync() {
            this.List_ObjectsAsync(null);
        }
        
        /// <remarks/>
        public void List_ObjectsAsync(object userState) {
            if ((this.List_ObjectsOperationCompleted == null)) {
                this.List_ObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_ObjectsOperationCompleted);
            }
            this.InvokeAsync("List_Objects", new object[0], this.List_ObjectsOperationCompleted, userState);
        }
        
        private void OnList_ObjectsOperationCompleted(object arg) {
            if ((this.List_ObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_ObjectsCompleted(this, new List_ObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_ObjectsByObjectName", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_ObjectsByObjectName(string ObjectName) {
            object[] results = this.Invoke("List_ObjectsByObjectName", new object[] {
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_ObjectsByObjectNameAsync(string ObjectName) {
            this.List_ObjectsByObjectNameAsync(ObjectName, null);
        }
        
        /// <remarks/>
        public void List_ObjectsByObjectNameAsync(string ObjectName, object userState) {
            if ((this.List_ObjectsByObjectNameOperationCompleted == null)) {
                this.List_ObjectsByObjectNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_ObjectsByObjectNameOperationCompleted);
            }
            this.InvokeAsync("List_ObjectsByObjectName", new object[] {
                        ObjectName}, this.List_ObjectsByObjectNameOperationCompleted, userState);
        }
        
        private void OnList_ObjectsByObjectNameOperationCompleted(object arg) {
            if ((this.List_ObjectsByObjectNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_ObjectsByObjectNameCompleted(this, new List_ObjectsByObjectNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_ANPRDetectors", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_ANPRDetectors() {
            object[] results = this.Invoke("List_ANPRDetectors", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_ANPRDetectorsAsync() {
            this.List_ANPRDetectorsAsync(null);
        }
        
        /// <remarks/>
        public void List_ANPRDetectorsAsync(object userState) {
            if ((this.List_ANPRDetectorsOperationCompleted == null)) {
                this.List_ANPRDetectorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_ANPRDetectorsOperationCompleted);
            }
            this.InvokeAsync("List_ANPRDetectors", new object[0], this.List_ANPRDetectorsOperationCompleted, userState);
        }
        
        private void OnList_ANPRDetectorsOperationCompleted(object arg) {
            if ((this.List_ANPRDetectorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_ANPRDetectorsCompleted(this, new List_ANPRDetectorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DataSource_TypeID", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DataSource_TypeID() {
            object[] results = this.Invoke("List_DataSource_TypeID", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DataSource_TypeIDAsync() {
            this.List_DataSource_TypeIDAsync(null);
        }
        
        /// <remarks/>
        public void List_DataSource_TypeIDAsync(object userState) {
            if ((this.List_DataSource_TypeIDOperationCompleted == null)) {
                this.List_DataSource_TypeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DataSource_TypeIDOperationCompleted);
            }
            this.InvokeAsync("List_DataSource_TypeID", new object[0], this.List_DataSource_TypeIDOperationCompleted, userState);
        }
        
        private void OnList_DataSource_TypeIDOperationCompleted(object arg) {
            if ((this.List_DataSource_TypeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DataSource_TypeIDCompleted(this, new List_DataSource_TypeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Day_TypeID", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Day_TypeID() {
            object[] results = this.Invoke("List_Day_TypeID", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_Day_TypeIDAsync() {
            this.List_Day_TypeIDAsync(null);
        }
        
        /// <remarks/>
        public void List_Day_TypeIDAsync(object userState) {
            if ((this.List_Day_TypeIDOperationCompleted == null)) {
                this.List_Day_TypeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_Day_TypeIDOperationCompleted);
            }
            this.InvokeAsync("List_Day_TypeID", new object[0], this.List_Day_TypeIDOperationCompleted, userState);
        }
        
        private void OnList_Day_TypeIDOperationCompleted(object arg) {
            if ((this.List_Day_TypeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_Day_TypeIDCompleted(this, new List_Day_TypeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DayTypeIDDescription", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DayTypeIDDescription() {
            object[] results = this.Invoke("List_DayTypeIDDescription", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DayTypeIDDescriptionAsync() {
            this.List_DayTypeIDDescriptionAsync(null);
        }
        
        /// <remarks/>
        public void List_DayTypeIDDescriptionAsync(object userState) {
            if ((this.List_DayTypeIDDescriptionOperationCompleted == null)) {
                this.List_DayTypeIDDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DayTypeIDDescriptionOperationCompleted);
            }
            this.InvokeAsync("List_DayTypeIDDescription", new object[0], this.List_DayTypeIDDescriptionOperationCompleted, userState);
        }
        
        private void OnList_DayTypeIDDescriptionOperationCompleted(object arg) {
            if ((this.List_DayTypeIDDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DayTypeIDDescriptionCompleted(this, new List_DayTypeIDDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Severity_TypeID", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Severity_TypeID() {
            object[] results = this.Invoke("List_Severity_TypeID", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_Severity_TypeIDAsync() {
            this.List_Severity_TypeIDAsync(null);
        }
        
        /// <remarks/>
        public void List_Severity_TypeIDAsync(object userState) {
            if ((this.List_Severity_TypeIDOperationCompleted == null)) {
                this.List_Severity_TypeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_Severity_TypeIDOperationCompleted);
            }
            this.InvokeAsync("List_Severity_TypeID", new object[0], this.List_Severity_TypeIDOperationCompleted, userState);
        }
        
        private void OnList_Severity_TypeIDOperationCompleted(object arg) {
            if ((this.List_Severity_TypeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_Severity_TypeIDCompleted(this, new List_Severity_TypeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_TypeID", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_TypeID(string ObjectName) {
            object[] results = this.Invoke("List_TypeID", new object[] {
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_TypeIDAsync(string ObjectName) {
            this.List_TypeIDAsync(ObjectName, null);
        }
        
        /// <remarks/>
        public void List_TypeIDAsync(string ObjectName, object userState) {
            if ((this.List_TypeIDOperationCompleted == null)) {
                this.List_TypeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_TypeIDOperationCompleted);
            }
            this.InvokeAsync("List_TypeID", new object[] {
                        ObjectName}, this.List_TypeIDOperationCompleted, userState);
        }
        
        private void OnList_TypeIDOperationCompleted(object arg) {
            if ((this.List_TypeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_TypeIDCompleted(this, new List_TypeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_QualityStatementID", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_QualityStatementID(string ObjectName) {
            object[] results = this.Invoke("List_QualityStatementID", new object[] {
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_QualityStatementIDAsync(string ObjectName) {
            this.List_QualityStatementIDAsync(ObjectName, null);
        }
        
        /// <remarks/>
        public void List_QualityStatementIDAsync(string ObjectName, object userState) {
            if ((this.List_QualityStatementIDOperationCompleted == null)) {
                this.List_QualityStatementIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_QualityStatementIDOperationCompleted);
            }
            this.InvokeAsync("List_QualityStatementID", new object[] {
                        ObjectName}, this.List_QualityStatementIDOperationCompleted, userState);
        }
        
        private void OnList_QualityStatementIDOperationCompleted(object arg) {
            if ((this.List_QualityStatementIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_QualityStatementIDCompleted(this, new List_QualityStatementIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_FaultType", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_FaultType(string ObjectName) {
            object[] results = this.Invoke("List_FaultType", new object[] {
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_FaultTypeAsync(string ObjectName) {
            this.List_FaultTypeAsync(ObjectName, null);
        }
        
        /// <remarks/>
        public void List_FaultTypeAsync(string ObjectName, object userState) {
            if ((this.List_FaultTypeOperationCompleted == null)) {
                this.List_FaultTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_FaultTypeOperationCompleted);
            }
            this.InvokeAsync("List_FaultType", new object[] {
                        ObjectName}, this.List_FaultTypeOperationCompleted, userState);
        }
        
        private void OnList_FaultTypeOperationCompleted(object arg) {
            if ((this.List_FaultTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_FaultTypeCompleted(this, new List_FaultTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Quality", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_Quality(string ObjectName, string SourceName, string SourceType, string UserID) {
            this.Invoke("New_Quality", new object[] {
                        ObjectName,
                        SourceName,
                        SourceType,
                        UserID});
        }
        
        /// <remarks/>
        public void New_QualityAsync(string ObjectName, string SourceName, string SourceType, string UserID) {
            this.New_QualityAsync(ObjectName, SourceName, SourceType, UserID, null);
        }
        
        /// <remarks/>
        public void New_QualityAsync(string ObjectName, string SourceName, string SourceType, string UserID, object userState) {
            if ((this.New_QualityOperationCompleted == null)) {
                this.New_QualityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_QualityOperationCompleted);
            }
            this.InvokeAsync("New_Quality", new object[] {
                        ObjectName,
                        SourceName,
                        SourceType,
                        UserID}, this.New_QualityOperationCompleted, userState);
        }
        
        private void OnNew_QualityOperationCompleted(object arg) {
            if ((this.New_QualityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_QualityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_FaultType", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_FaultType(string ObjectName, int SubSystem_TypeID, int DataSource_TypeID, string FaultDescription, int FaultSeverity, string UserID) {
            this.Invoke("New_FaultType", new object[] {
                        ObjectName,
                        SubSystem_TypeID,
                        DataSource_TypeID,
                        FaultDescription,
                        FaultSeverity,
                        UserID});
        }
        
        /// <remarks/>
        public void New_FaultTypeAsync(string ObjectName, int SubSystem_TypeID, int DataSource_TypeID, string FaultDescription, int FaultSeverity, string UserID) {
            this.New_FaultTypeAsync(ObjectName, SubSystem_TypeID, DataSource_TypeID, FaultDescription, FaultSeverity, UserID, null);
        }
        
        /// <remarks/>
        public void New_FaultTypeAsync(string ObjectName, int SubSystem_TypeID, int DataSource_TypeID, string FaultDescription, int FaultSeverity, string UserID, object userState) {
            if ((this.New_FaultTypeOperationCompleted == null)) {
                this.New_FaultTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_FaultTypeOperationCompleted);
            }
            this.InvokeAsync("New_FaultType", new object[] {
                        ObjectName,
                        SubSystem_TypeID,
                        DataSource_TypeID,
                        FaultDescription,
                        FaultSeverity,
                        UserID}, this.New_FaultTypeOperationCompleted, userState);
        }
        
        private void OnNew_FaultTypeOperationCompleted(object arg) {
            if ((this.New_FaultTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_FaultTypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Type", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_Type(string ObjectName, string TypeDescription, string TypeNotes, string UserID) {
            this.Invoke("New_Type", new object[] {
                        ObjectName,
                        TypeDescription,
                        TypeNotes,
                        UserID});
        }
        
        /// <remarks/>
        public void New_TypeAsync(string ObjectName, string TypeDescription, string TypeNotes, string UserID) {
            this.New_TypeAsync(ObjectName, TypeDescription, TypeNotes, UserID, null);
        }
        
        /// <remarks/>
        public void New_TypeAsync(string ObjectName, string TypeDescription, string TypeNotes, string UserID, object userState) {
            if ((this.New_TypeOperationCompleted == null)) {
                this.New_TypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_TypeOperationCompleted);
            }
            this.InvokeAsync("New_Type", new object[] {
                        ObjectName,
                        TypeDescription,
                        TypeNotes,
                        UserID}, this.New_TypeOperationCompleted, userState);
        }
        
        private void OnNew_TypeOperationCompleted(object arg) {
            if ((this.New_TypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_TypeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Fault", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string New_Fault(
                    string ObjectName, 
                    string SystemCodeNumber, 
                    int FaultType, 
                    int SubSystemTypeID, 
                    int DataSource_TypeID, 
                    string SupplierFaultNumber, 
                    char EquipmentFault, 
                    char CommunicationsFault, 
                    string Description, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    string freeTextDescription, 
                    string userName, 
                    System.DateTime CreationDate, 
                    string faultTypeDesc, 
                    string severityDesc) {
            object[] results = this.Invoke("New_Fault", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        FaultType,
                        SubSystemTypeID,
                        DataSource_TypeID,
                        SupplierFaultNumber,
                        EquipmentFault,
                        CommunicationsFault,
                        Description,
                        UserID,
                        unmappedSystemCodeNumber,
                        freeTextDescription,
                        userName,
                        CreationDate,
                        faultTypeDesc,
                        severityDesc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void New_FaultAsync(
                    string ObjectName, 
                    string SystemCodeNumber, 
                    int FaultType, 
                    int SubSystemTypeID, 
                    int DataSource_TypeID, 
                    string SupplierFaultNumber, 
                    char EquipmentFault, 
                    char CommunicationsFault, 
                    string Description, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    string freeTextDescription, 
                    string userName, 
                    System.DateTime CreationDate, 
                    string faultTypeDesc, 
                    string severityDesc) {
            this.New_FaultAsync(ObjectName, SystemCodeNumber, FaultType, SubSystemTypeID, DataSource_TypeID, SupplierFaultNumber, EquipmentFault, CommunicationsFault, Description, UserID, unmappedSystemCodeNumber, freeTextDescription, userName, CreationDate, faultTypeDesc, severityDesc, null);
        }
        
        /// <remarks/>
        public void New_FaultAsync(
                    string ObjectName, 
                    string SystemCodeNumber, 
                    int FaultType, 
                    int SubSystemTypeID, 
                    int DataSource_TypeID, 
                    string SupplierFaultNumber, 
                    char EquipmentFault, 
                    char CommunicationsFault, 
                    string Description, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    string freeTextDescription, 
                    string userName, 
                    System.DateTime CreationDate, 
                    string faultTypeDesc, 
                    string severityDesc, 
                    object userState) {
            if ((this.New_FaultOperationCompleted == null)) {
                this.New_FaultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_FaultOperationCompleted);
            }
            this.InvokeAsync("New_Fault", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        FaultType,
                        SubSystemTypeID,
                        DataSource_TypeID,
                        SupplierFaultNumber,
                        EquipmentFault,
                        CommunicationsFault,
                        Description,
                        UserID,
                        unmappedSystemCodeNumber,
                        freeTextDescription,
                        userName,
                        CreationDate,
                        faultTypeDesc,
                        severityDesc}, this.New_FaultOperationCompleted, userState);
        }
        
        private void OnNew_FaultOperationCompleted(object arg) {
            if ((this.New_FaultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_FaultCompleted(this, new New_FaultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Fault_FaultId", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string New_Fault_FaultId(
                    string ObjectName, 
                    string SystemCodeNumber, 
                    int FaultType, 
                    int SubSystemTypeID, 
                    int DataSource_TypeID, 
                    string SupplierFaultNumber, 
                    char EquipmentFault, 
                    char CommunicationsFault, 
                    string Description, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    string freeTextDescription, 
                    string userName, 
                    System.DateTime CreationDate, 
                    string faultTypeDesc, 
                    string severityDesc) {
            object[] results = this.Invoke("New_Fault_FaultId", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        FaultType,
                        SubSystemTypeID,
                        DataSource_TypeID,
                        SupplierFaultNumber,
                        EquipmentFault,
                        CommunicationsFault,
                        Description,
                        UserID,
                        unmappedSystemCodeNumber,
                        freeTextDescription,
                        userName,
                        CreationDate,
                        faultTypeDesc,
                        severityDesc});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void New_Fault_FaultIdAsync(
                    string ObjectName, 
                    string SystemCodeNumber, 
                    int FaultType, 
                    int SubSystemTypeID, 
                    int DataSource_TypeID, 
                    string SupplierFaultNumber, 
                    char EquipmentFault, 
                    char CommunicationsFault, 
                    string Description, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    string freeTextDescription, 
                    string userName, 
                    System.DateTime CreationDate, 
                    string faultTypeDesc, 
                    string severityDesc) {
            this.New_Fault_FaultIdAsync(ObjectName, SystemCodeNumber, FaultType, SubSystemTypeID, DataSource_TypeID, SupplierFaultNumber, EquipmentFault, CommunicationsFault, Description, UserID, unmappedSystemCodeNumber, freeTextDescription, userName, CreationDate, faultTypeDesc, severityDesc, null);
        }
        
        /// <remarks/>
        public void New_Fault_FaultIdAsync(
                    string ObjectName, 
                    string SystemCodeNumber, 
                    int FaultType, 
                    int SubSystemTypeID, 
                    int DataSource_TypeID, 
                    string SupplierFaultNumber, 
                    char EquipmentFault, 
                    char CommunicationsFault, 
                    string Description, 
                    string UserID, 
                    string unmappedSystemCodeNumber, 
                    string freeTextDescription, 
                    string userName, 
                    System.DateTime CreationDate, 
                    string faultTypeDesc, 
                    string severityDesc, 
                    object userState) {
            if ((this.New_Fault_FaultIdOperationCompleted == null)) {
                this.New_Fault_FaultIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_Fault_FaultIdOperationCompleted);
            }
            this.InvokeAsync("New_Fault_FaultId", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        FaultType,
                        SubSystemTypeID,
                        DataSource_TypeID,
                        SupplierFaultNumber,
                        EquipmentFault,
                        CommunicationsFault,
                        Description,
                        UserID,
                        unmappedSystemCodeNumber,
                        freeTextDescription,
                        userName,
                        CreationDate,
                        faultTypeDesc,
                        severityDesc}, this.New_Fault_FaultIdOperationCompleted, userState);
        }
        
        private void OnNew_Fault_FaultIdOperationCompleted(object arg) {
            if ((this.New_Fault_FaultIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_Fault_FaultIdCompleted(this, new New_Fault_FaultIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Acknowledge_Fault", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_Acknowledge_Fault(string objectName, string FaultID, string Description, int AckTypeID, string comments, string mailID, bool isSCN, string SystemCodeNumber, string UserId, string userName, string supplierFaultRef, string faultTypeDesc, string severityDesc) {
            this.Invoke("New_Acknowledge_Fault", new object[] {
                        objectName,
                        FaultID,
                        Description,
                        AckTypeID,
                        comments,
                        mailID,
                        isSCN,
                        SystemCodeNumber,
                        UserId,
                        userName,
                        supplierFaultRef,
                        faultTypeDesc,
                        severityDesc});
        }
        
        /// <remarks/>
        public void New_Acknowledge_FaultAsync(string objectName, string FaultID, string Description, int AckTypeID, string comments, string mailID, bool isSCN, string SystemCodeNumber, string UserId, string userName, string supplierFaultRef, string faultTypeDesc, string severityDesc) {
            this.New_Acknowledge_FaultAsync(objectName, FaultID, Description, AckTypeID, comments, mailID, isSCN, SystemCodeNumber, UserId, userName, supplierFaultRef, faultTypeDesc, severityDesc, null);
        }
        
        /// <remarks/>
        public void New_Acknowledge_FaultAsync(string objectName, string FaultID, string Description, int AckTypeID, string comments, string mailID, bool isSCN, string SystemCodeNumber, string UserId, string userName, string supplierFaultRef, string faultTypeDesc, string severityDesc, object userState) {
            if ((this.New_Acknowledge_FaultOperationCompleted == null)) {
                this.New_Acknowledge_FaultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_Acknowledge_FaultOperationCompleted);
            }
            this.InvokeAsync("New_Acknowledge_Fault", new object[] {
                        objectName,
                        FaultID,
                        Description,
                        AckTypeID,
                        comments,
                        mailID,
                        isSCN,
                        SystemCodeNumber,
                        UserId,
                        userName,
                        supplierFaultRef,
                        faultTypeDesc,
                        severityDesc}, this.New_Acknowledge_FaultOperationCompleted, userState);
        }
        
        private void OnNew_Acknowledge_FaultOperationCompleted(object arg) {
            if ((this.New_Acknowledge_FaultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_Acknowledge_FaultCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Command", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_Command(string ObjectName, string SystemCodeNumber, int CommandFormat, int DataSource_TypeID, string Command, string Parameters, int Priority, string UserID, bool setFlashers, string ExtendedDelimiter) {
            this.Invoke("New_Command", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        CommandFormat,
                        DataSource_TypeID,
                        Command,
                        Parameters,
                        Priority,
                        UserID,
                        setFlashers,
                        ExtendedDelimiter});
        }
        
        /// <remarks/>
        public void New_CommandAsync(string ObjectName, string SystemCodeNumber, int CommandFormat, int DataSource_TypeID, string Command, string Parameters, int Priority, string UserID, bool setFlashers, string ExtendedDelimiter) {
            this.New_CommandAsync(ObjectName, SystemCodeNumber, CommandFormat, DataSource_TypeID, Command, Parameters, Priority, UserID, setFlashers, ExtendedDelimiter, null);
        }
        
        /// <remarks/>
        public void New_CommandAsync(string ObjectName, string SystemCodeNumber, int CommandFormat, int DataSource_TypeID, string Command, string Parameters, int Priority, string UserID, bool setFlashers, string ExtendedDelimiter, object userState) {
            if ((this.New_CommandOperationCompleted == null)) {
                this.New_CommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_CommandOperationCompleted);
            }
            this.InvokeAsync("New_Command", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        CommandFormat,
                        DataSource_TypeID,
                        Command,
                        Parameters,
                        Priority,
                        UserID,
                        setFlashers,
                        ExtendedDelimiter}, this.New_CommandOperationCompleted, userState);
        }
        
        private void OnNew_CommandOperationCompleted(object arg) {
            if ((this.New_CommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_CommandCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_VMS_Command_Active_Message", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_VMS_Command_Active_Message(string ObjectName, string SystemCodeNumber, int CommandFormat, int DataSource_TypeID, string Command, string Parameters, int Priority, string UserID, System.DateTime EndTime, System.DateTime StartTime, int source_TypeID, string SourceDescription, string ExtendedDelimiter, bool setFlashers) {
            this.Invoke("New_VMS_Command_Active_Message", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        CommandFormat,
                        DataSource_TypeID,
                        Command,
                        Parameters,
                        Priority,
                        UserID,
                        EndTime,
                        StartTime,
                        source_TypeID,
                        SourceDescription,
                        ExtendedDelimiter,
                        setFlashers});
        }
        
        /// <remarks/>
        public void New_VMS_Command_Active_MessageAsync(string ObjectName, string SystemCodeNumber, int CommandFormat, int DataSource_TypeID, string Command, string Parameters, int Priority, string UserID, System.DateTime EndTime, System.DateTime StartTime, int source_TypeID, string SourceDescription, string ExtendedDelimiter, bool setFlashers) {
            this.New_VMS_Command_Active_MessageAsync(ObjectName, SystemCodeNumber, CommandFormat, DataSource_TypeID, Command, Parameters, Priority, UserID, EndTime, StartTime, source_TypeID, SourceDescription, ExtendedDelimiter, setFlashers, null);
        }
        
        /// <remarks/>
        public void New_VMS_Command_Active_MessageAsync(string ObjectName, string SystemCodeNumber, int CommandFormat, int DataSource_TypeID, string Command, string Parameters, int Priority, string UserID, System.DateTime EndTime, System.DateTime StartTime, int source_TypeID, string SourceDescription, string ExtendedDelimiter, bool setFlashers, object userState) {
            if ((this.New_VMS_Command_Active_MessageOperationCompleted == null)) {
                this.New_VMS_Command_Active_MessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_VMS_Command_Active_MessageOperationCompleted);
            }
            this.InvokeAsync("New_VMS_Command_Active_Message", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        CommandFormat,
                        DataSource_TypeID,
                        Command,
                        Parameters,
                        Priority,
                        UserID,
                        EndTime,
                        StartTime,
                        source_TypeID,
                        SourceDescription,
                        ExtendedDelimiter,
                        setFlashers}, this.New_VMS_Command_Active_MessageOperationCompleted, userState);
        }
        
        private void OnNew_VMS_Command_Active_MessageOperationCompleted(object arg) {
            if ((this.New_VMS_Command_Active_MessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_VMS_Command_Active_MessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Group_Command", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_Group_Command(string ObjectName, string GroupSystemCodeNumber, int CommandFormat, int DataSource_TypeID, string Command, string Parameters, int Priority, string UserID, bool setFlashers, string ExtendedDelimiter) {
            this.Invoke("New_Group_Command", new object[] {
                        ObjectName,
                        GroupSystemCodeNumber,
                        CommandFormat,
                        DataSource_TypeID,
                        Command,
                        Parameters,
                        Priority,
                        UserID,
                        setFlashers,
                        ExtendedDelimiter});
        }
        
        /// <remarks/>
        public void New_Group_CommandAsync(string ObjectName, string GroupSystemCodeNumber, int CommandFormat, int DataSource_TypeID, string Command, string Parameters, int Priority, string UserID, bool setFlashers, string ExtendedDelimiter) {
            this.New_Group_CommandAsync(ObjectName, GroupSystemCodeNumber, CommandFormat, DataSource_TypeID, Command, Parameters, Priority, UserID, setFlashers, ExtendedDelimiter, null);
        }
        
        /// <remarks/>
        public void New_Group_CommandAsync(string ObjectName, string GroupSystemCodeNumber, int CommandFormat, int DataSource_TypeID, string Command, string Parameters, int Priority, string UserID, bool setFlashers, string ExtendedDelimiter, object userState) {
            if ((this.New_Group_CommandOperationCompleted == null)) {
                this.New_Group_CommandOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_Group_CommandOperationCompleted);
            }
            this.InvokeAsync("New_Group_Command", new object[] {
                        ObjectName,
                        GroupSystemCodeNumber,
                        CommandFormat,
                        DataSource_TypeID,
                        Command,
                        Parameters,
                        Priority,
                        UserID,
                        setFlashers,
                        ExtendedDelimiter}, this.New_Group_CommandOperationCompleted, userState);
        }
        
        private void OnNew_Group_CommandOperationCompleted(object arg) {
            if ((this.New_Group_CommandCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_Group_CommandCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_VMS_Group_Command_Active_Message", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_VMS_Group_Command_Active_Message(string GroupSystemCodeNumber, int CommandFormat, int DataSource_TypeID, string Command, string Parameters, int Priority, string UserID, System.DateTime EndTime, System.DateTime StartTime, int SourceID, string SourceDescription, string ExtendedDelimiter, bool setFlashers) {
            this.Invoke("New_VMS_Group_Command_Active_Message", new object[] {
                        GroupSystemCodeNumber,
                        CommandFormat,
                        DataSource_TypeID,
                        Command,
                        Parameters,
                        Priority,
                        UserID,
                        EndTime,
                        StartTime,
                        SourceID,
                        SourceDescription,
                        ExtendedDelimiter,
                        setFlashers});
        }
        
        /// <remarks/>
        public void New_VMS_Group_Command_Active_MessageAsync(string GroupSystemCodeNumber, int CommandFormat, int DataSource_TypeID, string Command, string Parameters, int Priority, string UserID, System.DateTime EndTime, System.DateTime StartTime, int SourceID, string SourceDescription, string ExtendedDelimiter, bool setFlashers) {
            this.New_VMS_Group_Command_Active_MessageAsync(GroupSystemCodeNumber, CommandFormat, DataSource_TypeID, Command, Parameters, Priority, UserID, EndTime, StartTime, SourceID, SourceDescription, ExtendedDelimiter, setFlashers, null);
        }
        
        /// <remarks/>
        public void New_VMS_Group_Command_Active_MessageAsync(string GroupSystemCodeNumber, int CommandFormat, int DataSource_TypeID, string Command, string Parameters, int Priority, string UserID, System.DateTime EndTime, System.DateTime StartTime, int SourceID, string SourceDescription, string ExtendedDelimiter, bool setFlashers, object userState) {
            if ((this.New_VMS_Group_Command_Active_MessageOperationCompleted == null)) {
                this.New_VMS_Group_Command_Active_MessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_VMS_Group_Command_Active_MessageOperationCompleted);
            }
            this.InvokeAsync("New_VMS_Group_Command_Active_Message", new object[] {
                        GroupSystemCodeNumber,
                        CommandFormat,
                        DataSource_TypeID,
                        Command,
                        Parameters,
                        Priority,
                        UserID,
                        EndTime,
                        StartTime,
                        SourceID,
                        SourceDescription,
                        ExtendedDelimiter,
                        setFlashers}, this.New_VMS_Group_Command_Active_MessageOperationCompleted, userState);
        }
        
        private void OnNew_VMS_Group_Command_Active_MessageOperationCompleted(object arg) {
            if ((this.New_VMS_Group_Command_Active_MessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_VMS_Group_Command_Active_MessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_History", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_History(string ObjectName, string SystemCodeNumber, string Entry, string UserName) {
            this.Invoke("New_History", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        Entry,
                        UserName});
        }
        
        /// <remarks/>
        public void New_HistoryAsync(string ObjectName, string SystemCodeNumber, string Entry, string UserName) {
            this.New_HistoryAsync(ObjectName, SystemCodeNumber, Entry, UserName, null);
        }
        
        /// <remarks/>
        public void New_HistoryAsync(string ObjectName, string SystemCodeNumber, string Entry, string UserName, object userState) {
            if ((this.New_HistoryOperationCompleted == null)) {
                this.New_HistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_HistoryOperationCompleted);
            }
            this.InvokeAsync("New_History", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        Entry,
                        UserName}, this.New_HistoryOperationCompleted, userState);
        }
        
        private void OnNew_HistoryOperationCompleted(object arg) {
            if ((this.New_HistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_HistoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_LocationBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_LocationBySCN(string ObjectName, string SystemCodeNumber) {
            object[] results = this.Invoke("View_LocationBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_LocationBySCNAsync(string ObjectName, string SystemCodeNumber) {
            this.View_LocationBySCNAsync(ObjectName, SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void View_LocationBySCNAsync(string ObjectName, string SystemCodeNumber, object userState) {
            if ((this.View_LocationBySCNOperationCompleted == null)) {
                this.View_LocationBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_LocationBySCNOperationCompleted);
            }
            this.InvokeAsync("View_LocationBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber}, this.View_LocationBySCNOperationCompleted, userState);
        }
        
        private void OnView_LocationBySCNOperationCompleted(object arg) {
            if ((this.View_LocationBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_LocationBySCNCompleted(this, new View_LocationBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_CommandsBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_CommandsBySCN(string ObjectName, string SystemCodeNumber) {
            object[] results = this.Invoke("View_CommandsBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_CommandsBySCNAsync(string ObjectName, string SystemCodeNumber) {
            this.View_CommandsBySCNAsync(ObjectName, SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void View_CommandsBySCNAsync(string ObjectName, string SystemCodeNumber, object userState) {
            if ((this.View_CommandsBySCNOperationCompleted == null)) {
                this.View_CommandsBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_CommandsBySCNOperationCompleted);
            }
            this.InvokeAsync("View_CommandsBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber}, this.View_CommandsBySCNOperationCompleted, userState);
        }
        
        private void OnView_CommandsBySCNOperationCompleted(object arg) {
            if ((this.View_CommandsBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_CommandsBySCNCompleted(this, new View_CommandsBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_FaultsBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_FaultsBySCN(string ObjectName, string SystemCodeNumber) {
            object[] results = this.Invoke("View_FaultsBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_FaultsBySCNAsync(string ObjectName, string SystemCodeNumber) {
            this.View_FaultsBySCNAsync(ObjectName, SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void View_FaultsBySCNAsync(string ObjectName, string SystemCodeNumber, object userState) {
            if ((this.View_FaultsBySCNOperationCompleted == null)) {
                this.View_FaultsBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_FaultsBySCNOperationCompleted);
            }
            this.InvokeAsync("View_FaultsBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber}, this.View_FaultsBySCNOperationCompleted, userState);
        }
        
        private void OnView_FaultsBySCNOperationCompleted(object arg) {
            if ((this.View_FaultsBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_FaultsBySCNCompleted(this, new View_FaultsBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_FaultTypes", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_FaultTypes(string ObjectName) {
            object[] results = this.Invoke("View_FaultTypes", new object[] {
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_FaultTypesAsync(string ObjectName) {
            this.View_FaultTypesAsync(ObjectName, null);
        }
        
        /// <remarks/>
        public void View_FaultTypesAsync(string ObjectName, object userState) {
            if ((this.View_FaultTypesOperationCompleted == null)) {
                this.View_FaultTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_FaultTypesOperationCompleted);
            }
            this.InvokeAsync("View_FaultTypes", new object[] {
                        ObjectName}, this.View_FaultTypesOperationCompleted, userState);
        }
        
        private void OnView_FaultTypesOperationCompleted(object arg) {
            if ((this.View_FaultTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_FaultTypesCompleted(this, new View_FaultTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_Quality", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_Quality(string ObjectName) {
            object[] results = this.Invoke("View_Quality", new object[] {
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_QualityAsync(string ObjectName) {
            this.View_QualityAsync(ObjectName, null);
        }
        
        /// <remarks/>
        public void View_QualityAsync(string ObjectName, object userState) {
            if ((this.View_QualityOperationCompleted == null)) {
                this.View_QualityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_QualityOperationCompleted);
            }
            this.InvokeAsync("View_Quality", new object[] {
                        ObjectName}, this.View_QualityOperationCompleted, userState);
        }
        
        private void OnView_QualityOperationCompleted(object arg) {
            if ((this.View_QualityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_QualityCompleted(this, new View_QualityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_TypeID", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_TypeID(string ObjectName) {
            object[] results = this.Invoke("View_TypeID", new object[] {
                        ObjectName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_TypeIDAsync(string ObjectName) {
            this.View_TypeIDAsync(ObjectName, null);
        }
        
        /// <remarks/>
        public void View_TypeIDAsync(string ObjectName, object userState) {
            if ((this.View_TypeIDOperationCompleted == null)) {
                this.View_TypeIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_TypeIDOperationCompleted);
            }
            this.InvokeAsync("View_TypeID", new object[] {
                        ObjectName}, this.View_TypeIDOperationCompleted, userState);
        }
        
        private void OnView_TypeIDOperationCompleted(object arg) {
            if ((this.View_TypeIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_TypeIDCompleted(this, new View_TypeIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_Commands_CommandSet", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_Commands_CommandSet(string ObjectName, int TypeID) {
            object[] results = this.Invoke("View_Commands_CommandSet", new object[] {
                        ObjectName,
                        TypeID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_Commands_CommandSetAsync(string ObjectName, int TypeID) {
            this.View_Commands_CommandSetAsync(ObjectName, TypeID, null);
        }
        
        /// <remarks/>
        public void View_Commands_CommandSetAsync(string ObjectName, int TypeID, object userState) {
            if ((this.View_Commands_CommandSetOperationCompleted == null)) {
                this.View_Commands_CommandSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_Commands_CommandSetOperationCompleted);
            }
            this.InvokeAsync("View_Commands_CommandSet", new object[] {
                        ObjectName,
                        TypeID}, this.View_Commands_CommandSetOperationCompleted, userState);
        }
        
        private void OnView_Commands_CommandSetOperationCompleted(object arg) {
            if ((this.View_Commands_CommandSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_Commands_CommandSetCompleted(this, new View_Commands_CommandSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_Commands_ParameterSet", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_Commands_ParameterSet(string ObjectName, int CommandSetID) {
            object[] results = this.Invoke("View_Commands_ParameterSet", new object[] {
                        ObjectName,
                        CommandSetID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_Commands_ParameterSetAsync(string ObjectName, int CommandSetID) {
            this.View_Commands_ParameterSetAsync(ObjectName, CommandSetID, null);
        }
        
        /// <remarks/>
        public void View_Commands_ParameterSetAsync(string ObjectName, int CommandSetID, object userState) {
            if ((this.View_Commands_ParameterSetOperationCompleted == null)) {
                this.View_Commands_ParameterSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_Commands_ParameterSetOperationCompleted);
            }
            this.InvokeAsync("View_Commands_ParameterSet", new object[] {
                        ObjectName,
                        CommandSetID}, this.View_Commands_ParameterSetOperationCompleted, userState);
        }
        
        private void OnView_Commands_ParameterSetOperationCompleted(object arg) {
            if ((this.View_Commands_ParameterSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_Commands_ParameterSetCompleted(this, new View_Commands_ParameterSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_HistoryBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_HistoryBySCN(string ObjectName, string SystemCodeNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> fromTime, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> toTime) {
            object[] results = this.Invoke("View_HistoryBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        fromTime,
                        toTime});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_HistoryBySCNAsync(string ObjectName, string SystemCodeNumber, System.Nullable<System.DateTime> fromTime, System.Nullable<System.DateTime> toTime) {
            this.View_HistoryBySCNAsync(ObjectName, SystemCodeNumber, fromTime, toTime, null);
        }
        
        /// <remarks/>
        public void View_HistoryBySCNAsync(string ObjectName, string SystemCodeNumber, System.Nullable<System.DateTime> fromTime, System.Nullable<System.DateTime> toTime, object userState) {
            if ((this.View_HistoryBySCNOperationCompleted == null)) {
                this.View_HistoryBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_HistoryBySCNOperationCompleted);
            }
            this.InvokeAsync("View_HistoryBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        fromTime,
                        toTime}, this.View_HistoryBySCNOperationCompleted, userState);
        }
        
        private void OnView_HistoryBySCNOperationCompleted(object arg) {
            if ((this.View_HistoryBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_HistoryBySCNCompleted(this, new View_HistoryBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Edit_LocationBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Edit_LocationBySCN(string ObjectName, string SystemCodeNumber, double Easting, double Northing, string UserID, string NptgLocalityCode, string NptgLocalityName, double NPTGEasting, double NPTGNorthing) {
            this.Invoke("Edit_LocationBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        Easting,
                        Northing,
                        UserID,
                        NptgLocalityCode,
                        NptgLocalityName,
                        NPTGEasting,
                        NPTGNorthing});
        }
        
        /// <remarks/>
        public void Edit_LocationBySCNAsync(string ObjectName, string SystemCodeNumber, double Easting, double Northing, string UserID, string NptgLocalityCode, string NptgLocalityName, double NPTGEasting, double NPTGNorthing) {
            this.Edit_LocationBySCNAsync(ObjectName, SystemCodeNumber, Easting, Northing, UserID, NptgLocalityCode, NptgLocalityName, NPTGEasting, NPTGNorthing, null);
        }
        
        /// <remarks/>
        public void Edit_LocationBySCNAsync(string ObjectName, string SystemCodeNumber, double Easting, double Northing, string UserID, string NptgLocalityCode, string NptgLocalityName, double NPTGEasting, double NPTGNorthing, object userState) {
            if ((this.Edit_LocationBySCNOperationCompleted == null)) {
                this.Edit_LocationBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEdit_LocationBySCNOperationCompleted);
            }
            this.InvokeAsync("Edit_LocationBySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        Easting,
                        Northing,
                        UserID,
                        NptgLocalityCode,
                        NptgLocalityName,
                        NPTGEasting,
                        NPTGNorthing}, this.Edit_LocationBySCNOperationCompleted, userState);
        }
        
        private void OnEdit_LocationBySCNOperationCompleted(object arg) {
            if ((this.Edit_LocationBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Edit_LocationBySCNCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Update_WardName", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_WardName(string SystemCodeNumber, string ObjectName, string WardName, string Area) {
            this.Invoke("Update_WardName", new object[] {
                        SystemCodeNumber,
                        ObjectName,
                        WardName,
                        Area});
        }
        
        /// <remarks/>
        public void Update_WardNameAsync(string SystemCodeNumber, string ObjectName, string WardName, string Area) {
            this.Update_WardNameAsync(SystemCodeNumber, ObjectName, WardName, Area, null);
        }
        
        /// <remarks/>
        public void Update_WardNameAsync(string SystemCodeNumber, string ObjectName, string WardName, string Area, object userState) {
            if ((this.Update_WardNameOperationCompleted == null)) {
                this.Update_WardNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_WardNameOperationCompleted);
            }
            this.InvokeAsync("Update_WardName", new object[] {
                        SystemCodeNumber,
                        ObjectName,
                        WardName,
                        Area}, this.Update_WardNameOperationCompleted, userState);
        }
        
        private void OnUpdate_WardNameOperationCompleted(object arg) {
            if ((this.Update_WardNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_WardNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Update_Name_ShortDescription", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_Name_ShortDescription(string SystemCodeNumber, string ObjectName, string Name) {
            this.Invoke("Update_Name_ShortDescription", new object[] {
                        SystemCodeNumber,
                        ObjectName,
                        Name});
        }
        
        /// <remarks/>
        public void Update_Name_ShortDescriptionAsync(string SystemCodeNumber, string ObjectName, string Name) {
            this.Update_Name_ShortDescriptionAsync(SystemCodeNumber, ObjectName, Name, null);
        }
        
        /// <remarks/>
        public void Update_Name_ShortDescriptionAsync(string SystemCodeNumber, string ObjectName, string Name, object userState) {
            if ((this.Update_Name_ShortDescriptionOperationCompleted == null)) {
                this.Update_Name_ShortDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_Name_ShortDescriptionOperationCompleted);
            }
            this.InvokeAsync("Update_Name_ShortDescription", new object[] {
                        SystemCodeNumber,
                        ObjectName,
                        Name}, this.Update_Name_ShortDescriptionOperationCompleted, userState);
        }
        
        private void OnUpdate_Name_ShortDescriptionOperationCompleted(object arg) {
            if ((this.Update_Name_ShortDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_Name_ShortDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_OldDataValueMetEvents", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_OldDataValueMetEvents() {
            this.Invoke("Delete_OldDataValueMetEvents", new object[0]);
        }
        
        /// <remarks/>
        public void Delete_OldDataValueMetEventsAsync() {
            this.Delete_OldDataValueMetEventsAsync(null);
        }
        
        /// <remarks/>
        public void Delete_OldDataValueMetEventsAsync(object userState) {
            if ((this.Delete_OldDataValueMetEventsOperationCompleted == null)) {
                this.Delete_OldDataValueMetEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_OldDataValueMetEventsOperationCompleted);
            }
            this.InvokeAsync("Delete_OldDataValueMetEvents", new object[0], this.Delete_OldDataValueMetEventsOperationCompleted, userState);
        }
        
        private void OnDelete_OldDataValueMetEventsOperationCompleted(object arg) {
            if ((this.Delete_OldDataValueMetEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_OldDataValueMetEventsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_BySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_BySCN(string ObjectName, string SystemCodeNumber, string UserID) {
            this.Invoke("Delete_BySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        UserID});
        }
        
        /// <remarks/>
        public void Delete_BySCNAsync(string ObjectName, string SystemCodeNumber, string UserID) {
            this.Delete_BySCNAsync(ObjectName, SystemCodeNumber, UserID, null);
        }
        
        /// <remarks/>
        public void Delete_BySCNAsync(string ObjectName, string SystemCodeNumber, string UserID, object userState) {
            if ((this.Delete_BySCNOperationCompleted == null)) {
                this.Delete_BySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_BySCNOperationCompleted);
            }
            this.InvokeAsync("Delete_BySCN", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        UserID}, this.Delete_BySCNOperationCompleted, userState);
        }
        
        private void OnDelete_BySCNOperationCompleted(object arg) {
            if ((this.Delete_BySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_BySCNCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Restore_UnMappedSCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Restore_UnMappedSCN(string ObjectName, string SystemCodeNumber) {
            this.Invoke("Restore_UnMappedSCN", new object[] {
                        ObjectName,
                        SystemCodeNumber});
        }
        
        /// <remarks/>
        public void Restore_UnMappedSCNAsync(string ObjectName, string SystemCodeNumber) {
            this.Restore_UnMappedSCNAsync(ObjectName, SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void Restore_UnMappedSCNAsync(string ObjectName, string SystemCodeNumber, object userState) {
            if ((this.Restore_UnMappedSCNOperationCompleted == null)) {
                this.Restore_UnMappedSCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestore_UnMappedSCNOperationCompleted);
            }
            this.InvokeAsync("Restore_UnMappedSCN", new object[] {
                        ObjectName,
                        SystemCodeNumber}, this.Restore_UnMappedSCNOperationCompleted, userState);
        }
        
        private void OnRestore_UnMappedSCNOperationCompleted(object arg) {
            if ((this.Restore_UnMappedSCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Restore_UnMappedSCNCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Aknowledgement", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Aknowledgement() {
            object[] results = this.Invoke("List_Aknowledgement", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_AknowledgementAsync() {
            this.List_AknowledgementAsync(null);
        }
        
        /// <remarks/>
        public void List_AknowledgementAsync(object userState) {
            if ((this.List_AknowledgementOperationCompleted == null)) {
                this.List_AknowledgementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_AknowledgementOperationCompleted);
            }
            this.InvokeAsync("List_Aknowledgement", new object[0], this.List_AknowledgementOperationCompleted, userState);
        }
        
        private void OnList_AknowledgementOperationCompleted(object arg) {
            if ((this.List_AknowledgementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_AknowledgementCompleted(this, new List_AknowledgementCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_NearByObjects", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_NearByObjects(int easting, int northing, int radius) {
            object[] results = this.Invoke("List_NearByObjects", new object[] {
                        easting,
                        northing,
                        radius});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_NearByObjectsAsync(int easting, int northing, int radius) {
            this.List_NearByObjectsAsync(easting, northing, radius, null);
        }
        
        /// <remarks/>
        public void List_NearByObjectsAsync(int easting, int northing, int radius, object userState) {
            if ((this.List_NearByObjectsOperationCompleted == null)) {
                this.List_NearByObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_NearByObjectsOperationCompleted);
            }
            this.InvokeAsync("List_NearByObjects", new object[] {
                        easting,
                        northing,
                        radius}, this.List_NearByObjectsOperationCompleted, userState);
        }
        
        private void OnList_NearByObjectsOperationCompleted(object arg) {
            if ((this.List_NearByObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_NearByObjectsCompleted(this, new List_NearByObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_DeviceHistory", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_DeviceHistory(string UserID, int TableID, string SystemCodeNumber, int DescriptionID, string ActionID) {
            this.Invoke("New_DeviceHistory", new object[] {
                        UserID,
                        TableID,
                        SystemCodeNumber,
                        DescriptionID,
                        ActionID});
        }
        
        /// <remarks/>
        public void New_DeviceHistoryAsync(string UserID, int TableID, string SystemCodeNumber, int DescriptionID, string ActionID) {
            this.New_DeviceHistoryAsync(UserID, TableID, SystemCodeNumber, DescriptionID, ActionID, null);
        }
        
        /// <remarks/>
        public void New_DeviceHistoryAsync(string UserID, int TableID, string SystemCodeNumber, int DescriptionID, string ActionID, object userState) {
            if ((this.New_DeviceHistoryOperationCompleted == null)) {
                this.New_DeviceHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_DeviceHistoryOperationCompleted);
            }
            this.InvokeAsync("New_DeviceHistory", new object[] {
                        UserID,
                        TableID,
                        SystemCodeNumber,
                        DescriptionID,
                        ActionID}, this.New_DeviceHistoryOperationCompleted, userState);
        }
        
        private void OnNew_DeviceHistoryOperationCompleted(object arg) {
            if ((this.New_DeviceHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_DeviceHistoryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_DeviceHistory_CommandID", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_DeviceHistory_CommandID(string UserID, int TableID, string SystemCodeNumber, int DescriptionID, string ActionID, int CommandID) {
            this.Invoke("New_DeviceHistory_CommandID", new object[] {
                        UserID,
                        TableID,
                        SystemCodeNumber,
                        DescriptionID,
                        ActionID,
                        CommandID});
        }
        
        /// <remarks/>
        public void New_DeviceHistory_CommandIDAsync(string UserID, int TableID, string SystemCodeNumber, int DescriptionID, string ActionID, int CommandID) {
            this.New_DeviceHistory_CommandIDAsync(UserID, TableID, SystemCodeNumber, DescriptionID, ActionID, CommandID, null);
        }
        
        /// <remarks/>
        public void New_DeviceHistory_CommandIDAsync(string UserID, int TableID, string SystemCodeNumber, int DescriptionID, string ActionID, int CommandID, object userState) {
            if ((this.New_DeviceHistory_CommandIDOperationCompleted == null)) {
                this.New_DeviceHistory_CommandIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_DeviceHistory_CommandIDOperationCompleted);
            }
            this.InvokeAsync("New_DeviceHistory_CommandID", new object[] {
                        UserID,
                        TableID,
                        SystemCodeNumber,
                        DescriptionID,
                        ActionID,
                        CommandID}, this.New_DeviceHistory_CommandIDOperationCompleted, userState);
        }
        
        private void OnNew_DeviceHistory_CommandIDOperationCompleted(object arg) {
            if ((this.New_DeviceHistory_CommandIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_DeviceHistory_CommandIDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_DeviceHistory_LinkedEntry", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_DeviceHistory_LinkedEntry(string scn, string linkedSCN, bool includeDynamic) {
            this.Invoke("New_DeviceHistory_LinkedEntry", new object[] {
                        scn,
                        linkedSCN,
                        includeDynamic});
        }
        
        /// <remarks/>
        public void New_DeviceHistory_LinkedEntryAsync(string scn, string linkedSCN, bool includeDynamic) {
            this.New_DeviceHistory_LinkedEntryAsync(scn, linkedSCN, includeDynamic, null);
        }
        
        /// <remarks/>
        public void New_DeviceHistory_LinkedEntryAsync(string scn, string linkedSCN, bool includeDynamic, object userState) {
            if ((this.New_DeviceHistory_LinkedEntryOperationCompleted == null)) {
                this.New_DeviceHistory_LinkedEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_DeviceHistory_LinkedEntryOperationCompleted);
            }
            this.InvokeAsync("New_DeviceHistory_LinkedEntry", new object[] {
                        scn,
                        linkedSCN,
                        includeDynamic}, this.New_DeviceHistory_LinkedEntryOperationCompleted, userState);
        }
        
        private void OnNew_DeviceHistory_LinkedEntryOperationCompleted(object arg) {
            if ((this.New_DeviceHistory_LinkedEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_DeviceHistory_LinkedEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DeviceHistoryObjects", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DeviceHistoryObjects() {
            object[] results = this.Invoke("List_DeviceHistoryObjects", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DeviceHistoryObjectsAsync() {
            this.List_DeviceHistoryObjectsAsync(null);
        }
        
        /// <remarks/>
        public void List_DeviceHistoryObjectsAsync(object userState) {
            if ((this.List_DeviceHistoryObjectsOperationCompleted == null)) {
                this.List_DeviceHistoryObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DeviceHistoryObjectsOperationCompleted);
            }
            this.InvokeAsync("List_DeviceHistoryObjects", new object[0], this.List_DeviceHistoryObjectsOperationCompleted, userState);
        }
        
        private void OnList_DeviceHistoryObjectsOperationCompleted(object arg) {
            if ((this.List_DeviceHistoryObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DeviceHistoryObjectsCompleted(this, new List_DeviceHistoryObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DeviceHistoryTablesByObject", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DeviceHistoryTablesByObject(int ObjectID) {
            object[] results = this.Invoke("List_DeviceHistoryTablesByObject", new object[] {
                        ObjectID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DeviceHistoryTablesByObjectAsync(int ObjectID) {
            this.List_DeviceHistoryTablesByObjectAsync(ObjectID, null);
        }
        
        /// <remarks/>
        public void List_DeviceHistoryTablesByObjectAsync(int ObjectID, object userState) {
            if ((this.List_DeviceHistoryTablesByObjectOperationCompleted == null)) {
                this.List_DeviceHistoryTablesByObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DeviceHistoryTablesByObjectOperationCompleted);
            }
            this.InvokeAsync("List_DeviceHistoryTablesByObject", new object[] {
                        ObjectID}, this.List_DeviceHistoryTablesByObjectOperationCompleted, userState);
        }
        
        private void OnList_DeviceHistoryTablesByObjectOperationCompleted(object arg) {
            if ((this.List_DeviceHistoryTablesByObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DeviceHistoryTablesByObjectCompleted(this, new List_DeviceHistoryTablesByObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DeviceHistoryLinkedEntries", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DeviceHistoryLinkedEntries(string scn, long logId) {
            object[] results = this.Invoke("List_DeviceHistoryLinkedEntries", new object[] {
                        scn,
                        logId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DeviceHistoryLinkedEntriesAsync(string scn, long logId) {
            this.List_DeviceHistoryLinkedEntriesAsync(scn, logId, null);
        }
        
        /// <remarks/>
        public void List_DeviceHistoryLinkedEntriesAsync(string scn, long logId, object userState) {
            if ((this.List_DeviceHistoryLinkedEntriesOperationCompleted == null)) {
                this.List_DeviceHistoryLinkedEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DeviceHistoryLinkedEntriesOperationCompleted);
            }
            this.InvokeAsync("List_DeviceHistoryLinkedEntries", new object[] {
                        scn,
                        logId}, this.List_DeviceHistoryLinkedEntriesOperationCompleted, userState);
        }
        
        private void OnList_DeviceHistoryLinkedEntriesOperationCompleted(object arg) {
            if ((this.List_DeviceHistoryLinkedEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DeviceHistoryLinkedEntriesCompleted(this, new List_DeviceHistoryLinkedEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DeviceHistoryLinkedEntries_New", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DeviceHistoryLinkedEntries_New(string scn) {
            object[] results = this.Invoke("List_DeviceHistoryLinkedEntries_New", new object[] {
                        scn});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DeviceHistoryLinkedEntries_NewAsync(string scn) {
            this.List_DeviceHistoryLinkedEntries_NewAsync(scn, null);
        }
        
        /// <remarks/>
        public void List_DeviceHistoryLinkedEntries_NewAsync(string scn, object userState) {
            if ((this.List_DeviceHistoryLinkedEntries_NewOperationCompleted == null)) {
                this.List_DeviceHistoryLinkedEntries_NewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DeviceHistoryLinkedEntries_NewOperationCompleted);
            }
            this.InvokeAsync("List_DeviceHistoryLinkedEntries_New", new object[] {
                        scn}, this.List_DeviceHistoryLinkedEntries_NewOperationCompleted, userState);
        }
        
        private void OnList_DeviceHistoryLinkedEntries_NewOperationCompleted(object arg) {
            if ((this.List_DeviceHistoryLinkedEntries_NewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DeviceHistoryLinkedEntries_NewCompleted(this, new List_DeviceHistoryLinkedEntries_NewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Get_DeviceHistoryLinkedTree", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_DeviceHistoryLinkedTree(string scn) {
            object[] results = this.Invoke("Get_DeviceHistoryLinkedTree", new object[] {
                        scn});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_DeviceHistoryLinkedTreeAsync(string scn) {
            this.Get_DeviceHistoryLinkedTreeAsync(scn, null);
        }
        
        /// <remarks/>
        public void Get_DeviceHistoryLinkedTreeAsync(string scn, object userState) {
            if ((this.Get_DeviceHistoryLinkedTreeOperationCompleted == null)) {
                this.Get_DeviceHistoryLinkedTreeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_DeviceHistoryLinkedTreeOperationCompleted);
            }
            this.InvokeAsync("Get_DeviceHistoryLinkedTree", new object[] {
                        scn}, this.Get_DeviceHistoryLinkedTreeOperationCompleted, userState);
        }
        
        private void OnGet_DeviceHistoryLinkedTreeOperationCompleted(object arg) {
            if ((this.Get_DeviceHistoryLinkedTreeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_DeviceHistoryLinkedTreeCompleted(this, new Get_DeviceHistoryLinkedTreeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DeviceHistoryEntriesByObject", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DeviceHistoryEntriesByObject(int ObjectID, int count) {
            object[] results = this.Invoke("List_DeviceHistoryEntriesByObject", new object[] {
                        ObjectID,
                        count});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DeviceHistoryEntriesByObjectAsync(int ObjectID, int count) {
            this.List_DeviceHistoryEntriesByObjectAsync(ObjectID, count, null);
        }
        
        /// <remarks/>
        public void List_DeviceHistoryEntriesByObjectAsync(int ObjectID, int count, object userState) {
            if ((this.List_DeviceHistoryEntriesByObjectOperationCompleted == null)) {
                this.List_DeviceHistoryEntriesByObjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DeviceHistoryEntriesByObjectOperationCompleted);
            }
            this.InvokeAsync("List_DeviceHistoryEntriesByObject", new object[] {
                        ObjectID,
                        count}, this.List_DeviceHistoryEntriesByObjectOperationCompleted, userState);
        }
        
        private void OnList_DeviceHistoryEntriesByObjectOperationCompleted(object arg) {
            if ((this.List_DeviceHistoryEntriesByObjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DeviceHistoryEntriesByObjectCompleted(this, new List_DeviceHistoryEntriesByObjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DeviceHistoryEntriesByLog", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DeviceHistoryEntriesByLog(long LogID, int count) {
            object[] results = this.Invoke("List_DeviceHistoryEntriesByLog", new object[] {
                        LogID,
                        count});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DeviceHistoryEntriesByLogAsync(long LogID, int count) {
            this.List_DeviceHistoryEntriesByLogAsync(LogID, count, null);
        }
        
        /// <remarks/>
        public void List_DeviceHistoryEntriesByLogAsync(long LogID, int count, object userState) {
            if ((this.List_DeviceHistoryEntriesByLogOperationCompleted == null)) {
                this.List_DeviceHistoryEntriesByLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DeviceHistoryEntriesByLogOperationCompleted);
            }
            this.InvokeAsync("List_DeviceHistoryEntriesByLog", new object[] {
                        LogID,
                        count}, this.List_DeviceHistoryEntriesByLogOperationCompleted, userState);
        }
        
        private void OnList_DeviceHistoryEntriesByLogOperationCompleted(object arg) {
            if ((this.List_DeviceHistoryEntriesByLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DeviceHistoryEntriesByLogCompleted(this, new List_DeviceHistoryEntriesByLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DeviceHistoryTables", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DeviceHistoryTables() {
            object[] results = this.Invoke("List_DeviceHistoryTables", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DeviceHistoryTablesAsync() {
            this.List_DeviceHistoryTablesAsync(null);
        }
        
        /// <remarks/>
        public void List_DeviceHistoryTablesAsync(object userState) {
            if ((this.List_DeviceHistoryTablesOperationCompleted == null)) {
                this.List_DeviceHistoryTablesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DeviceHistoryTablesOperationCompleted);
            }
            this.InvokeAsync("List_DeviceHistoryTables", new object[0], this.List_DeviceHistoryTablesOperationCompleted, userState);
        }
        
        private void OnList_DeviceHistoryTablesOperationCompleted(object arg) {
            if ((this.List_DeviceHistoryTablesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DeviceHistoryTablesCompleted(this, new List_DeviceHistoryTablesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_ShortDescriptions", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_ShortDescriptions(int objectID) {
            object[] results = this.Invoke("List_ShortDescriptions", new object[] {
                        objectID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_ShortDescriptionsAsync(int objectID) {
            this.List_ShortDescriptionsAsync(objectID, null);
        }
        
        /// <remarks/>
        public void List_ShortDescriptionsAsync(int objectID, object userState) {
            if ((this.List_ShortDescriptionsOperationCompleted == null)) {
                this.List_ShortDescriptionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_ShortDescriptionsOperationCompleted);
            }
            this.InvokeAsync("List_ShortDescriptions", new object[] {
                        objectID}, this.List_ShortDescriptionsOperationCompleted, userState);
        }
        
        private void OnList_ShortDescriptionsOperationCompleted(object arg) {
            if ((this.List_ShortDescriptionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_ShortDescriptionsCompleted(this, new List_ShortDescriptionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_UserName", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_UserName(string name) {
            object[] results = this.Invoke("List_UserName", new object[] {
                        name});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_UserNameAsync(string name) {
            this.List_UserNameAsync(name, null);
        }
        
        /// <remarks/>
        public void List_UserNameAsync(string name, object userState) {
            if ((this.List_UserNameOperationCompleted == null)) {
                this.List_UserNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_UserNameOperationCompleted);
            }
            this.InvokeAsync("List_UserName", new object[] {
                        name}, this.List_UserNameOperationCompleted, userState);
        }
        
        private void OnList_UserNameOperationCompleted(object arg) {
            if ((this.List_UserNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_UserNameCompleted(this, new List_UserNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DeviceHistorySCNs", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DeviceHistorySCNs(string[] sTableIDs, bool bFetchManualEntries, string sFilterExpression, bool bFetchLoginLogoutEntries) {
            object[] results = this.Invoke("List_DeviceHistorySCNs", new object[] {
                        sTableIDs,
                        bFetchManualEntries,
                        sFilterExpression,
                        bFetchLoginLogoutEntries});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DeviceHistorySCNsAsync(string[] sTableIDs, bool bFetchManualEntries, string sFilterExpression, bool bFetchLoginLogoutEntries) {
            this.List_DeviceHistorySCNsAsync(sTableIDs, bFetchManualEntries, sFilterExpression, bFetchLoginLogoutEntries, null);
        }
        
        /// <remarks/>
        public void List_DeviceHistorySCNsAsync(string[] sTableIDs, bool bFetchManualEntries, string sFilterExpression, bool bFetchLoginLogoutEntries, object userState) {
            if ((this.List_DeviceHistorySCNsOperationCompleted == null)) {
                this.List_DeviceHistorySCNsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DeviceHistorySCNsOperationCompleted);
            }
            this.InvokeAsync("List_DeviceHistorySCNs", new object[] {
                        sTableIDs,
                        bFetchManualEntries,
                        sFilterExpression,
                        bFetchLoginLogoutEntries}, this.List_DeviceHistorySCNsOperationCompleted, userState);
        }
        
        private void OnList_DeviceHistorySCNsOperationCompleted(object arg) {
            if ((this.List_DeviceHistorySCNsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DeviceHistorySCNsCompleted(this, new List_DeviceHistorySCNsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DeviceHistoryCountNew", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int List_DeviceHistoryCountNew(string[] sTableIDs, bool bFetchManualEntries, string sFilterExpression, bool bFetchLoginLogoutEntries) {
            object[] results = this.Invoke("List_DeviceHistoryCountNew", new object[] {
                        sTableIDs,
                        bFetchManualEntries,
                        sFilterExpression,
                        bFetchLoginLogoutEntries});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void List_DeviceHistoryCountNewAsync(string[] sTableIDs, bool bFetchManualEntries, string sFilterExpression, bool bFetchLoginLogoutEntries) {
            this.List_DeviceHistoryCountNewAsync(sTableIDs, bFetchManualEntries, sFilterExpression, bFetchLoginLogoutEntries, null);
        }
        
        /// <remarks/>
        public void List_DeviceHistoryCountNewAsync(string[] sTableIDs, bool bFetchManualEntries, string sFilterExpression, bool bFetchLoginLogoutEntries, object userState) {
            if ((this.List_DeviceHistoryCountNewOperationCompleted == null)) {
                this.List_DeviceHistoryCountNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DeviceHistoryCountNewOperationCompleted);
            }
            this.InvokeAsync("List_DeviceHistoryCountNew", new object[] {
                        sTableIDs,
                        bFetchManualEntries,
                        sFilterExpression,
                        bFetchLoginLogoutEntries}, this.List_DeviceHistoryCountNewOperationCompleted, userState);
        }
        
        private void OnList_DeviceHistoryCountNewOperationCompleted(object arg) {
            if ((this.List_DeviceHistoryCountNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DeviceHistoryCountNewCompleted(this, new List_DeviceHistoryCountNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DeviceHistoryNew", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DeviceHistoryNew(string[] sTableIDs, bool bFetchManualEntries, int startRowIndex, int maximumRows, string SortExpression, string sFilterExpression, bool bFetchLoginLogoutEntries) {
            object[] results = this.Invoke("List_DeviceHistoryNew", new object[] {
                        sTableIDs,
                        bFetchManualEntries,
                        startRowIndex,
                        maximumRows,
                        SortExpression,
                        sFilterExpression,
                        bFetchLoginLogoutEntries});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DeviceHistoryNewAsync(string[] sTableIDs, bool bFetchManualEntries, int startRowIndex, int maximumRows, string SortExpression, string sFilterExpression, bool bFetchLoginLogoutEntries) {
            this.List_DeviceHistoryNewAsync(sTableIDs, bFetchManualEntries, startRowIndex, maximumRows, SortExpression, sFilterExpression, bFetchLoginLogoutEntries, null);
        }
        
        /// <remarks/>
        public void List_DeviceHistoryNewAsync(string[] sTableIDs, bool bFetchManualEntries, int startRowIndex, int maximumRows, string SortExpression, string sFilterExpression, bool bFetchLoginLogoutEntries, object userState) {
            if ((this.List_DeviceHistoryNewOperationCompleted == null)) {
                this.List_DeviceHistoryNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DeviceHistoryNewOperationCompleted);
            }
            this.InvokeAsync("List_DeviceHistoryNew", new object[] {
                        sTableIDs,
                        bFetchManualEntries,
                        startRowIndex,
                        maximumRows,
                        SortExpression,
                        sFilterExpression,
                        bFetchLoginLogoutEntries}, this.List_DeviceHistoryNewOperationCompleted, userState);
        }
        
        private void OnList_DeviceHistoryNewOperationCompleted(object arg) {
            if ((this.List_DeviceHistoryNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DeviceHistoryNewCompleted(this, new List_DeviceHistoryNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_DeviceHistory_ManualEntry", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string New_DeviceHistory_ManualEntry(string sDescription, string shortDescription, int tableId, string sUserID, int StatusId, int EmailGroupId) {
            object[] results = this.Invoke("New_DeviceHistory_ManualEntry", new object[] {
                        sDescription,
                        shortDescription,
                        tableId,
                        sUserID,
                        StatusId,
                        EmailGroupId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void New_DeviceHistory_ManualEntryAsync(string sDescription, string shortDescription, int tableId, string sUserID, int StatusId, int EmailGroupId) {
            this.New_DeviceHistory_ManualEntryAsync(sDescription, shortDescription, tableId, sUserID, StatusId, EmailGroupId, null);
        }
        
        /// <remarks/>
        public void New_DeviceHistory_ManualEntryAsync(string sDescription, string shortDescription, int tableId, string sUserID, int StatusId, int EmailGroupId, object userState) {
            if ((this.New_DeviceHistory_ManualEntryOperationCompleted == null)) {
                this.New_DeviceHistory_ManualEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_DeviceHistory_ManualEntryOperationCompleted);
            }
            this.InvokeAsync("New_DeviceHistory_ManualEntry", new object[] {
                        sDescription,
                        shortDescription,
                        tableId,
                        sUserID,
                        StatusId,
                        EmailGroupId}, this.New_DeviceHistory_ManualEntryOperationCompleted, userState);
        }
        
        private void OnNew_DeviceHistory_ManualEntryOperationCompleted(object arg) {
            if ((this.New_DeviceHistory_ManualEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_DeviceHistory_ManualEntryCompleted(this, new New_DeviceHistory_ManualEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DeviceHistory", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DeviceHistory(int TableID, int startRowIndex, int maximumRows, string SortExpression, string UserID) {
            object[] results = this.Invoke("List_DeviceHistory", new object[] {
                        TableID,
                        startRowIndex,
                        maximumRows,
                        SortExpression,
                        UserID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DeviceHistoryAsync(int TableID, int startRowIndex, int maximumRows, string SortExpression, string UserID) {
            this.List_DeviceHistoryAsync(TableID, startRowIndex, maximumRows, SortExpression, UserID, null);
        }
        
        /// <remarks/>
        public void List_DeviceHistoryAsync(int TableID, int startRowIndex, int maximumRows, string SortExpression, string UserID, object userState) {
            if ((this.List_DeviceHistoryOperationCompleted == null)) {
                this.List_DeviceHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DeviceHistoryOperationCompleted);
            }
            this.InvokeAsync("List_DeviceHistory", new object[] {
                        TableID,
                        startRowIndex,
                        maximumRows,
                        SortExpression,
                        UserID}, this.List_DeviceHistoryOperationCompleted, userState);
        }
        
        private void OnList_DeviceHistoryOperationCompleted(object arg) {
            if ((this.List_DeviceHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DeviceHistoryCompleted(this, new List_DeviceHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DeviceHistoryCount", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int List_DeviceHistoryCount(int TableID, string UserID) {
            object[] results = this.Invoke("List_DeviceHistoryCount", new object[] {
                        TableID,
                        UserID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void List_DeviceHistoryCountAsync(int TableID, string UserID) {
            this.List_DeviceHistoryCountAsync(TableID, UserID, null);
        }
        
        /// <remarks/>
        public void List_DeviceHistoryCountAsync(int TableID, string UserID, object userState) {
            if ((this.List_DeviceHistoryCountOperationCompleted == null)) {
                this.List_DeviceHistoryCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DeviceHistoryCountOperationCompleted);
            }
            this.InvokeAsync("List_DeviceHistoryCount", new object[] {
                        TableID,
                        UserID}, this.List_DeviceHistoryCountOperationCompleted, userState);
        }
        
        private void OnList_DeviceHistoryCountOperationCompleted(object arg) {
            if ((this.List_DeviceHistoryCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DeviceHistoryCountCompleted(this, new List_DeviceHistoryCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Email", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_Email(string EmailAddress) {
            this.Invoke("New_Email", new object[] {
                        EmailAddress});
        }
        
        /// <remarks/>
        public void New_EmailAsync(string EmailAddress) {
            this.New_EmailAsync(EmailAddress, null);
        }
        
        /// <remarks/>
        public void New_EmailAsync(string EmailAddress, object userState) {
            if ((this.New_EmailOperationCompleted == null)) {
                this.New_EmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_EmailOperationCompleted);
            }
            this.InvokeAsync("New_Email", new object[] {
                        EmailAddress}, this.New_EmailOperationCompleted, userState);
        }
        
        private void OnNew_EmailOperationCompleted(object arg) {
            if ((this.New_EmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_EmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/ListAllEmail", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListAllEmail(string SortDirection) {
            object[] results = this.Invoke("ListAllEmail", new object[] {
                        SortDirection});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListAllEmailAsync(string SortDirection) {
            this.ListAllEmailAsync(SortDirection, null);
        }
        
        /// <remarks/>
        public void ListAllEmailAsync(string SortDirection, object userState) {
            if ((this.ListAllEmailOperationCompleted == null)) {
                this.ListAllEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListAllEmailOperationCompleted);
            }
            this.InvokeAsync("ListAllEmail", new object[] {
                        SortDirection}, this.ListAllEmailOperationCompleted, userState);
        }
        
        private void OnListAllEmailOperationCompleted(object arg) {
            if ((this.ListAllEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListAllEmailCompleted(this, new ListAllEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/DeleteEmail", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmail(int Id) {
            this.Invoke("DeleteEmail", new object[] {
                        Id});
        }
        
        /// <remarks/>
        public void DeleteEmailAsync(int Id) {
            this.DeleteEmailAsync(Id, null);
        }
        
        /// <remarks/>
        public void DeleteEmailAsync(int Id, object userState) {
            if ((this.DeleteEmailOperationCompleted == null)) {
                this.DeleteEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmailOperationCompleted);
            }
            this.InvokeAsync("DeleteEmail", new object[] {
                        Id}, this.DeleteEmailOperationCompleted, userState);
        }
        
        private void OnDeleteEmailOperationCompleted(object arg) {
            if ((this.DeleteEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/NewGroup", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NewGroup(string GroupName, int[] arrEmailId) {
            this.Invoke("NewGroup", new object[] {
                        GroupName,
                        arrEmailId});
        }
        
        /// <remarks/>
        public void NewGroupAsync(string GroupName, int[] arrEmailId) {
            this.NewGroupAsync(GroupName, arrEmailId, null);
        }
        
        /// <remarks/>
        public void NewGroupAsync(string GroupName, int[] arrEmailId, object userState) {
            if ((this.NewGroupOperationCompleted == null)) {
                this.NewGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNewGroupOperationCompleted);
            }
            this.InvokeAsync("NewGroup", new object[] {
                        GroupName,
                        arrEmailId}, this.NewGroupOperationCompleted, userState);
        }
        
        private void OnNewGroupOperationCompleted(object arg) {
            if ((this.NewGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NewGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/ListEmailGroup", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListEmailGroup(string SortDirection) {
            object[] results = this.Invoke("ListEmailGroup", new object[] {
                        SortDirection});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListEmailGroupAsync(string SortDirection) {
            this.ListEmailGroupAsync(SortDirection, null);
        }
        
        /// <remarks/>
        public void ListEmailGroupAsync(string SortDirection, object userState) {
            if ((this.ListEmailGroupOperationCompleted == null)) {
                this.ListEmailGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListEmailGroupOperationCompleted);
            }
            this.InvokeAsync("ListEmailGroup", new object[] {
                        SortDirection}, this.ListEmailGroupOperationCompleted, userState);
        }
        
        private void OnListEmailGroupOperationCompleted(object arg) {
            if ((this.ListEmailGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListEmailGroupCompleted(this, new ListEmailGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/ListManualGroupMail", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListManualGroupMail() {
            object[] results = this.Invoke("ListManualGroupMail", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListManualGroupMailAsync() {
            this.ListManualGroupMailAsync(null);
        }
        
        /// <remarks/>
        public void ListManualGroupMailAsync(object userState) {
            if ((this.ListManualGroupMailOperationCompleted == null)) {
                this.ListManualGroupMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListManualGroupMailOperationCompleted);
            }
            this.InvokeAsync("ListManualGroupMail", new object[0], this.ListManualGroupMailOperationCompleted, userState);
        }
        
        private void OnListManualGroupMailOperationCompleted(object arg) {
            if ((this.ListManualGroupMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListManualGroupMailCompleted(this, new ListManualGroupMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/DeleteEmailGroup", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEmailGroup(int GroupId) {
            this.Invoke("DeleteEmailGroup", new object[] {
                        GroupId});
        }
        
        /// <remarks/>
        public void DeleteEmailGroupAsync(int GroupId) {
            this.DeleteEmailGroupAsync(GroupId, null);
        }
        
        /// <remarks/>
        public void DeleteEmailGroupAsync(int GroupId, object userState) {
            if ((this.DeleteEmailGroupOperationCompleted == null)) {
                this.DeleteEmailGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEmailGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteEmailGroup", new object[] {
                        GroupId}, this.DeleteEmailGroupOperationCompleted, userState);
        }
        
        private void OnDeleteEmailGroupOperationCompleted(object arg) {
            if ((this.DeleteEmailGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEmailGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/ListEmailByGroupId", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ListEmailByGroupId(int GroupId) {
            object[] results = this.Invoke("ListEmailByGroupId", new object[] {
                        GroupId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ListEmailByGroupIdAsync(int GroupId) {
            this.ListEmailByGroupIdAsync(GroupId, null);
        }
        
        /// <remarks/>
        public void ListEmailByGroupIdAsync(int GroupId, object userState) {
            if ((this.ListEmailByGroupIdOperationCompleted == null)) {
                this.ListEmailByGroupIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListEmailByGroupIdOperationCompleted);
            }
            this.InvokeAsync("ListEmailByGroupId", new object[] {
                        GroupId}, this.ListEmailByGroupIdOperationCompleted, userState);
        }
        
        private void OnListEmailByGroupIdOperationCompleted(object arg) {
            if ((this.ListEmailByGroupIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListEmailByGroupIdCompleted(this, new ListEmailByGroupIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/CheckGroupNameExist", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckGroupNameExist(string GroupName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> GroupId) {
            object[] results = this.Invoke("CheckGroupNameExist", new object[] {
                        GroupName,
                        GroupId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckGroupNameExistAsync(string GroupName, System.Nullable<int> GroupId) {
            this.CheckGroupNameExistAsync(GroupName, GroupId, null);
        }
        
        /// <remarks/>
        public void CheckGroupNameExistAsync(string GroupName, System.Nullable<int> GroupId, object userState) {
            if ((this.CheckGroupNameExistOperationCompleted == null)) {
                this.CheckGroupNameExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckGroupNameExistOperationCompleted);
            }
            this.InvokeAsync("CheckGroupNameExist", new object[] {
                        GroupName,
                        GroupId}, this.CheckGroupNameExistOperationCompleted, userState);
        }
        
        private void OnCheckGroupNameExistOperationCompleted(object arg) {
            if ((this.CheckGroupNameExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckGroupNameExistCompleted(this, new CheckGroupNameExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/CheckEmailExist", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckEmailExist(string EmailAddress) {
            object[] results = this.Invoke("CheckEmailExist", new object[] {
                        EmailAddress});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckEmailExistAsync(string EmailAddress) {
            this.CheckEmailExistAsync(EmailAddress, null);
        }
        
        /// <remarks/>
        public void CheckEmailExistAsync(string EmailAddress, object userState) {
            if ((this.CheckEmailExistOperationCompleted == null)) {
                this.CheckEmailExistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckEmailExistOperationCompleted);
            }
            this.InvokeAsync("CheckEmailExist", new object[] {
                        EmailAddress}, this.CheckEmailExistOperationCompleted, userState);
        }
        
        private void OnCheckEmailExistOperationCompleted(object arg) {
            if ((this.CheckEmailExistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckEmailExistCompleted(this, new CheckEmailExistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/UpdateEmailGroup", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateEmailGroup(int GroupId, string GroupName, int[] arrEmailId) {
            this.Invoke("UpdateEmailGroup", new object[] {
                        GroupId,
                        GroupName,
                        arrEmailId});
        }
        
        /// <remarks/>
        public void UpdateEmailGroupAsync(int GroupId, string GroupName, int[] arrEmailId) {
            this.UpdateEmailGroupAsync(GroupId, GroupName, arrEmailId, null);
        }
        
        /// <remarks/>
        public void UpdateEmailGroupAsync(int GroupId, string GroupName, int[] arrEmailId, object userState) {
            if ((this.UpdateEmailGroupOperationCompleted == null)) {
                this.UpdateEmailGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateEmailGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateEmailGroup", new object[] {
                        GroupId,
                        GroupName,
                        arrEmailId}, this.UpdateEmailGroupOperationCompleted, userState);
        }
        
        private void OnUpdateEmailGroupOperationCompleted(object arg) {
            if ((this.UpdateEmailGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateEmailGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_DeviceHistoryByLogId", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_DeviceHistoryByLogId(string LogID) {
            object[] results = this.Invoke("View_DeviceHistoryByLogId", new object[] {
                        LogID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_DeviceHistoryByLogIdAsync(string LogID) {
            this.View_DeviceHistoryByLogIdAsync(LogID, null);
        }
        
        /// <remarks/>
        public void View_DeviceHistoryByLogIdAsync(string LogID, object userState) {
            if ((this.View_DeviceHistoryByLogIdOperationCompleted == null)) {
                this.View_DeviceHistoryByLogIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_DeviceHistoryByLogIdOperationCompleted);
            }
            this.InvokeAsync("View_DeviceHistoryByLogId", new object[] {
                        LogID}, this.View_DeviceHistoryByLogIdOperationCompleted, userState);
        }
        
        private void OnView_DeviceHistoryByLogIdOperationCompleted(object arg) {
            if ((this.View_DeviceHistoryByLogIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_DeviceHistoryByLogIdCompleted(this, new View_DeviceHistoryByLogIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_ManualEntryStatus", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_ManualEntryStatus() {
            object[] results = this.Invoke("View_ManualEntryStatus", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_ManualEntryStatusAsync() {
            this.View_ManualEntryStatusAsync(null);
        }
        
        /// <remarks/>
        public void View_ManualEntryStatusAsync(object userState) {
            if ((this.View_ManualEntryStatusOperationCompleted == null)) {
                this.View_ManualEntryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_ManualEntryStatusOperationCompleted);
            }
            this.InvokeAsync("View_ManualEntryStatus", new object[0], this.View_ManualEntryStatusOperationCompleted, userState);
        }
        
        private void OnView_ManualEntryStatusOperationCompleted(object arg) {
            if ((this.View_ManualEntryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_ManualEntryStatusCompleted(this, new View_ManualEntryStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/UpdateManualEntryStatus", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateManualEntryStatus(long LogId, int StatusId, int EmailGroupId, System.DateTime LastUpdated) {
            object[] results = this.Invoke("UpdateManualEntryStatus", new object[] {
                        LogId,
                        StatusId,
                        EmailGroupId,
                        LastUpdated});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateManualEntryStatusAsync(long LogId, int StatusId, int EmailGroupId, System.DateTime LastUpdated) {
            this.UpdateManualEntryStatusAsync(LogId, StatusId, EmailGroupId, LastUpdated, null);
        }
        
        /// <remarks/>
        public void UpdateManualEntryStatusAsync(long LogId, int StatusId, int EmailGroupId, System.DateTime LastUpdated, object userState) {
            if ((this.UpdateManualEntryStatusOperationCompleted == null)) {
                this.UpdateManualEntryStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateManualEntryStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateManualEntryStatus", new object[] {
                        LogId,
                        StatusId,
                        EmailGroupId,
                        LastUpdated}, this.UpdateManualEntryStatusOperationCompleted, userState);
        }
        
        private void OnUpdateManualEntryStatusOperationCompleted(object arg) {
            if ((this.UpdateManualEntryStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateManualEntryStatusCompleted(this, new UpdateManualEntryStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Get_DeviceHistoryLinkedTreeNew", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Get_DeviceHistoryLinkedTreeNew(string SCN) {
            object[] results = this.Invoke("Get_DeviceHistoryLinkedTreeNew", new object[] {
                        SCN});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Get_DeviceHistoryLinkedTreeNewAsync(string SCN) {
            this.Get_DeviceHistoryLinkedTreeNewAsync(SCN, null);
        }
        
        /// <remarks/>
        public void Get_DeviceHistoryLinkedTreeNewAsync(string SCN, object userState) {
            if ((this.Get_DeviceHistoryLinkedTreeNewOperationCompleted == null)) {
                this.Get_DeviceHistoryLinkedTreeNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGet_DeviceHistoryLinkedTreeNewOperationCompleted);
            }
            this.InvokeAsync("Get_DeviceHistoryLinkedTreeNew", new object[] {
                        SCN}, this.Get_DeviceHistoryLinkedTreeNewOperationCompleted, userState);
        }
        
        private void OnGet_DeviceHistoryLinkedTreeNewOperationCompleted(object arg) {
            if ((this.Get_DeviceHistoryLinkedTreeNewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Get_DeviceHistoryLinkedTreeNewCompleted(this, new Get_DeviceHistoryLinkedTreeNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_DayTypeSpeedSettings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_DayTypeSpeedSettings() {
            object[] results = this.Invoke("List_DayTypeSpeedSettings", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_DayTypeSpeedSettingsAsync() {
            this.List_DayTypeSpeedSettingsAsync(null);
        }
        
        /// <remarks/>
        public void List_DayTypeSpeedSettingsAsync(object userState) {
            if ((this.List_DayTypeSpeedSettingsOperationCompleted == null)) {
                this.List_DayTypeSpeedSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_DayTypeSpeedSettingsOperationCompleted);
            }
            this.InvokeAsync("List_DayTypeSpeedSettings", new object[0], this.List_DayTypeSpeedSettingsOperationCompleted, userState);
        }
        
        private void OnList_DayTypeSpeedSettingsOperationCompleted(object arg) {
            if ((this.List_DayTypeSpeedSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_DayTypeSpeedSettingsCompleted(this, new List_DayTypeSpeedSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Update_DayTypeSpeedSettings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_DayTypeSpeedSettings(int DayTypeId, int AVL_Percentage, int ANPR_Percentage, int SCOOT_Percentage, int Detector_Percentage) {
            this.Invoke("Update_DayTypeSpeedSettings", new object[] {
                        DayTypeId,
                        AVL_Percentage,
                        ANPR_Percentage,
                        SCOOT_Percentage,
                        Detector_Percentage});
        }
        
        /// <remarks/>
        public void Update_DayTypeSpeedSettingsAsync(int DayTypeId, int AVL_Percentage, int ANPR_Percentage, int SCOOT_Percentage, int Detector_Percentage) {
            this.Update_DayTypeSpeedSettingsAsync(DayTypeId, AVL_Percentage, ANPR_Percentage, SCOOT_Percentage, Detector_Percentage, null);
        }
        
        /// <remarks/>
        public void Update_DayTypeSpeedSettingsAsync(int DayTypeId, int AVL_Percentage, int ANPR_Percentage, int SCOOT_Percentage, int Detector_Percentage, object userState) {
            if ((this.Update_DayTypeSpeedSettingsOperationCompleted == null)) {
                this.Update_DayTypeSpeedSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_DayTypeSpeedSettingsOperationCompleted);
            }
            this.InvokeAsync("Update_DayTypeSpeedSettings", new object[] {
                        DayTypeId,
                        AVL_Percentage,
                        ANPR_Percentage,
                        SCOOT_Percentage,
                        Detector_Percentage}, this.Update_DayTypeSpeedSettingsOperationCompleted, userState);
        }
        
        private void OnUpdate_DayTypeSpeedSettingsOperationCompleted(object arg) {
            if ((this.Update_DayTypeSpeedSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_DayTypeSpeedSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_RoadLinkSpeed_HistorySettings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_RoadLinkSpeed_HistorySettings() {
            object[] results = this.Invoke("List_RoadLinkSpeed_HistorySettings", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_RoadLinkSpeed_HistorySettingsAsync() {
            this.List_RoadLinkSpeed_HistorySettingsAsync(null);
        }
        
        /// <remarks/>
        public void List_RoadLinkSpeed_HistorySettingsAsync(object userState) {
            if ((this.List_RoadLinkSpeed_HistorySettingsOperationCompleted == null)) {
                this.List_RoadLinkSpeed_HistorySettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_RoadLinkSpeed_HistorySettingsOperationCompleted);
            }
            this.InvokeAsync("List_RoadLinkSpeed_HistorySettings", new object[0], this.List_RoadLinkSpeed_HistorySettingsOperationCompleted, userState);
        }
        
        private void OnList_RoadLinkSpeed_HistorySettingsOperationCompleted(object arg) {
            if ((this.List_RoadLinkSpeed_HistorySettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_RoadLinkSpeed_HistorySettingsCompleted(this, new List_RoadLinkSpeed_HistorySettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Update_RoadLinkSpeed_HistorySettings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_RoadLinkSpeed_HistorySettings(int Day, int Week, int Month, int Year) {
            this.Invoke("Update_RoadLinkSpeed_HistorySettings", new object[] {
                        Day,
                        Week,
                        Month,
                        Year});
        }
        
        /// <remarks/>
        public void Update_RoadLinkSpeed_HistorySettingsAsync(int Day, int Week, int Month, int Year) {
            this.Update_RoadLinkSpeed_HistorySettingsAsync(Day, Week, Month, Year, null);
        }
        
        /// <remarks/>
        public void Update_RoadLinkSpeed_HistorySettingsAsync(int Day, int Week, int Month, int Year, object userState) {
            if ((this.Update_RoadLinkSpeed_HistorySettingsOperationCompleted == null)) {
                this.Update_RoadLinkSpeed_HistorySettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_RoadLinkSpeed_HistorySettingsOperationCompleted);
            }
            this.InvokeAsync("Update_RoadLinkSpeed_HistorySettings", new object[] {
                        Day,
                        Week,
                        Month,
                        Year}, this.Update_RoadLinkSpeed_HistorySettingsOperationCompleted, userState);
        }
        
        private void OnUpdate_RoadLinkSpeed_HistorySettingsOperationCompleted(object arg) {
            if ((this.Update_RoadLinkSpeed_HistorySettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_RoadLinkSpeed_HistorySettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_CsvColumns", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_CsvColumns() {
            object[] results = this.Invoke("List_CsvColumns", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_CsvColumnsAsync() {
            this.List_CsvColumnsAsync(null);
        }
        
        /// <remarks/>
        public void List_CsvColumnsAsync(object userState) {
            if ((this.List_CsvColumnsOperationCompleted == null)) {
                this.List_CsvColumnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_CsvColumnsOperationCompleted);
            }
            this.InvokeAsync("List_CsvColumns", new object[0], this.List_CsvColumnsOperationCompleted, userState);
        }
        
        private void OnList_CsvColumnsOperationCompleted(object arg) {
            if ((this.List_CsvColumnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_CsvColumnsCompleted(this, new List_CsvColumnsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_CSVScheduleName", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_CSVScheduleName() {
            object[] results = this.Invoke("List_CSVScheduleName", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_CSVScheduleNameAsync() {
            this.List_CSVScheduleNameAsync(null);
        }
        
        /// <remarks/>
        public void List_CSVScheduleNameAsync(object userState) {
            if ((this.List_CSVScheduleNameOperationCompleted == null)) {
                this.List_CSVScheduleNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_CSVScheduleNameOperationCompleted);
            }
            this.InvokeAsync("List_CSVScheduleName", new object[0], this.List_CSVScheduleNameOperationCompleted, userState);
        }
        
        private void OnList_CSVScheduleNameOperationCompleted(object arg) {
            if ((this.List_CSVScheduleNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_CSVScheduleNameCompleted(this, new List_CSVScheduleNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_CSVFiles", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_CSVFiles(string ScheduleId) {
            object[] results = this.Invoke("List_CSVFiles", new object[] {
                        ScheduleId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_CSVFilesAsync(string ScheduleId) {
            this.List_CSVFilesAsync(ScheduleId, null);
        }
        
        /// <remarks/>
        public void List_CSVFilesAsync(string ScheduleId, object userState) {
            if ((this.List_CSVFilesOperationCompleted == null)) {
                this.List_CSVFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_CSVFilesOperationCompleted);
            }
            this.InvokeAsync("List_CSVFiles", new object[] {
                        ScheduleId}, this.List_CSVFilesOperationCompleted, userState);
        }
        
        private void OnList_CSVFilesOperationCompleted(object arg) {
            if ((this.List_CSVFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_CSVFilesCompleted(this, new List_CSVFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_ScheduleByUser", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_ScheduleByUser(string UserId) {
            object[] results = this.Invoke("List_ScheduleByUser", new object[] {
                        UserId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_ScheduleByUserAsync(string UserId) {
            this.List_ScheduleByUserAsync(UserId, null);
        }
        
        /// <remarks/>
        public void List_ScheduleByUserAsync(string UserId, object userState) {
            if ((this.List_ScheduleByUserOperationCompleted == null)) {
                this.List_ScheduleByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_ScheduleByUserOperationCompleted);
            }
            this.InvokeAsync("List_ScheduleByUser", new object[] {
                        UserId}, this.List_ScheduleByUserOperationCompleted, userState);
        }
        
        private void OnList_ScheduleByUserOperationCompleted(object arg) {
            if ((this.List_ScheduleByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_ScheduleByUserCompleted(this, new List_ScheduleByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_ScheduleById", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_ScheduleById(int ScheduleId) {
            object[] results = this.Invoke("List_ScheduleById", new object[] {
                        ScheduleId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_ScheduleByIdAsync(int ScheduleId) {
            this.List_ScheduleByIdAsync(ScheduleId, null);
        }
        
        /// <remarks/>
        public void List_ScheduleByIdAsync(int ScheduleId, object userState) {
            if ((this.List_ScheduleByIdOperationCompleted == null)) {
                this.List_ScheduleByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_ScheduleByIdOperationCompleted);
            }
            this.InvokeAsync("List_ScheduleById", new object[] {
                        ScheduleId}, this.List_ScheduleByIdOperationCompleted, userState);
        }
        
        private void OnList_ScheduleByIdOperationCompleted(object arg) {
            if ((this.List_ScheduleByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_ScheduleByIdCompleted(this, new List_ScheduleByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Schedule", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Schedule(string UserId, string ScheduleName) {
            object[] results = this.Invoke("List_Schedule", new object[] {
                        UserId,
                        ScheduleName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_ScheduleAsync(string UserId, string ScheduleName) {
            this.List_ScheduleAsync(UserId, ScheduleName, null);
        }
        
        /// <remarks/>
        public void List_ScheduleAsync(string UserId, string ScheduleName, object userState) {
            if ((this.List_ScheduleOperationCompleted == null)) {
                this.List_ScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_ScheduleOperationCompleted);
            }
            this.InvokeAsync("List_Schedule", new object[] {
                        UserId,
                        ScheduleName}, this.List_ScheduleOperationCompleted, userState);
        }
        
        private void OnList_ScheduleOperationCompleted(object arg) {
            if ((this.List_ScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_ScheduleCompleted(this, new List_ScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_ColumnByScheduleId", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_ColumnByScheduleId(int ScheduleId) {
            object[] results = this.Invoke("List_ColumnByScheduleId", new object[] {
                        ScheduleId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_ColumnByScheduleIdAsync(int ScheduleId) {
            this.List_ColumnByScheduleIdAsync(ScheduleId, null);
        }
        
        /// <remarks/>
        public void List_ColumnByScheduleIdAsync(int ScheduleId, object userState) {
            if ((this.List_ColumnByScheduleIdOperationCompleted == null)) {
                this.List_ColumnByScheduleIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_ColumnByScheduleIdOperationCompleted);
            }
            this.InvokeAsync("List_ColumnByScheduleId", new object[] {
                        ScheduleId}, this.List_ColumnByScheduleIdOperationCompleted, userState);
        }
        
        private void OnList_ColumnByScheduleIdOperationCompleted(object arg) {
            if ((this.List_ColumnByScheduleIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_ColumnByScheduleIdCompleted(this, new List_ColumnByScheduleIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/DeleteSchedule", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteSchedule(int ScheduleId) {
            this.Invoke("DeleteSchedule", new object[] {
                        ScheduleId});
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(int ScheduleId) {
            this.DeleteScheduleAsync(ScheduleId, null);
        }
        
        /// <remarks/>
        public void DeleteScheduleAsync(int ScheduleId, object userState) {
            if ((this.DeleteScheduleOperationCompleted == null)) {
                this.DeleteScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteScheduleOperationCompleted);
            }
            this.InvokeAsync("DeleteSchedule", new object[] {
                        ScheduleId}, this.DeleteScheduleOperationCompleted, userState);
        }
        
        private void OnDeleteScheduleOperationCompleted(object arg) {
            if ((this.DeleteScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteScheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/SaveCsvColumns", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveCsvColumns(int ColumnId, int ScheduleId, int OrderNumber) {
            this.Invoke("SaveCsvColumns", new object[] {
                        ColumnId,
                        ScheduleId,
                        OrderNumber});
        }
        
        /// <remarks/>
        public void SaveCsvColumnsAsync(int ColumnId, int ScheduleId, int OrderNumber) {
            this.SaveCsvColumnsAsync(ColumnId, ScheduleId, OrderNumber, null);
        }
        
        /// <remarks/>
        public void SaveCsvColumnsAsync(int ColumnId, int ScheduleId, int OrderNumber, object userState) {
            if ((this.SaveCsvColumnsOperationCompleted == null)) {
                this.SaveCsvColumnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveCsvColumnsOperationCompleted);
            }
            this.InvokeAsync("SaveCsvColumns", new object[] {
                        ColumnId,
                        ScheduleId,
                        OrderNumber}, this.SaveCsvColumnsOperationCompleted, userState);
        }
        
        private void OnSaveCsvColumnsOperationCompleted(object arg) {
            if ((this.SaveCsvColumnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveCsvColumnsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/SaveExportToCSVSettings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveExportToCSVSettings(string ScheduleName, string UserId, int ScheduleTypeId, string ExportLocation, string FileName, string FileNameSuffix, System.DateTime ScheduleTime) {
            this.Invoke("SaveExportToCSVSettings", new object[] {
                        ScheduleName,
                        UserId,
                        ScheduleTypeId,
                        ExportLocation,
                        FileName,
                        FileNameSuffix,
                        ScheduleTime});
        }
        
        /// <remarks/>
        public void SaveExportToCSVSettingsAsync(string ScheduleName, string UserId, int ScheduleTypeId, string ExportLocation, string FileName, string FileNameSuffix, System.DateTime ScheduleTime) {
            this.SaveExportToCSVSettingsAsync(ScheduleName, UserId, ScheduleTypeId, ExportLocation, FileName, FileNameSuffix, ScheduleTime, null);
        }
        
        /// <remarks/>
        public void SaveExportToCSVSettingsAsync(string ScheduleName, string UserId, int ScheduleTypeId, string ExportLocation, string FileName, string FileNameSuffix, System.DateTime ScheduleTime, object userState) {
            if ((this.SaveExportToCSVSettingsOperationCompleted == null)) {
                this.SaveExportToCSVSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveExportToCSVSettingsOperationCompleted);
            }
            this.InvokeAsync("SaveExportToCSVSettings", new object[] {
                        ScheduleName,
                        UserId,
                        ScheduleTypeId,
                        ExportLocation,
                        FileName,
                        FileNameSuffix,
                        ScheduleTime}, this.SaveExportToCSVSettingsOperationCompleted, userState);
        }
        
        private void OnSaveExportToCSVSettingsOperationCompleted(object arg) {
            if ((this.SaveExportToCSVSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveExportToCSVSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/DeleteCsvColumns", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCsvColumns(int ScheduleId) {
            this.Invoke("DeleteCsvColumns", new object[] {
                        ScheduleId});
        }
        
        /// <remarks/>
        public void DeleteCsvColumnsAsync(int ScheduleId) {
            this.DeleteCsvColumnsAsync(ScheduleId, null);
        }
        
        /// <remarks/>
        public void DeleteCsvColumnsAsync(int ScheduleId, object userState) {
            if ((this.DeleteCsvColumnsOperationCompleted == null)) {
                this.DeleteCsvColumnsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCsvColumnsOperationCompleted);
            }
            this.InvokeAsync("DeleteCsvColumns", new object[] {
                        ScheduleId}, this.DeleteCsvColumnsOperationCompleted, userState);
        }
        
        private void OnDeleteCsvColumnsOperationCompleted(object arg) {
            if ((this.DeleteCsvColumnsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCsvColumnsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/UpdateExportToCSVSettings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateExportToCSVSettings(string ScheduleName, int ScheduleTypeId, string ExportLocation, string FileName, string FileNameSuffix, System.DateTime ScheduleTime, int ScheduleId) {
            this.Invoke("UpdateExportToCSVSettings", new object[] {
                        ScheduleName,
                        ScheduleTypeId,
                        ExportLocation,
                        FileName,
                        FileNameSuffix,
                        ScheduleTime,
                        ScheduleId});
        }
        
        /// <remarks/>
        public void UpdateExportToCSVSettingsAsync(string ScheduleName, int ScheduleTypeId, string ExportLocation, string FileName, string FileNameSuffix, System.DateTime ScheduleTime, int ScheduleId) {
            this.UpdateExportToCSVSettingsAsync(ScheduleName, ScheduleTypeId, ExportLocation, FileName, FileNameSuffix, ScheduleTime, ScheduleId, null);
        }
        
        /// <remarks/>
        public void UpdateExportToCSVSettingsAsync(string ScheduleName, int ScheduleTypeId, string ExportLocation, string FileName, string FileNameSuffix, System.DateTime ScheduleTime, int ScheduleId, object userState) {
            if ((this.UpdateExportToCSVSettingsOperationCompleted == null)) {
                this.UpdateExportToCSVSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateExportToCSVSettingsOperationCompleted);
            }
            this.InvokeAsync("UpdateExportToCSVSettings", new object[] {
                        ScheduleName,
                        ScheduleTypeId,
                        ExportLocation,
                        FileName,
                        FileNameSuffix,
                        ScheduleTime,
                        ScheduleId}, this.UpdateExportToCSVSettingsOperationCompleted, userState);
        }
        
        private void OnUpdateExportToCSVSettingsOperationCompleted(object arg) {
            if ((this.UpdateExportToCSVSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateExportToCSVSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Error_Log", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Error_Log(string PageName, string MethodName, string Message, string Source, string StackTrace, string UserName) {
            this.Invoke("Error_Log", new object[] {
                        PageName,
                        MethodName,
                        Message,
                        Source,
                        StackTrace,
                        UserName});
        }
        
        /// <remarks/>
        public void Error_LogAsync(string PageName, string MethodName, string Message, string Source, string StackTrace, string UserName) {
            this.Error_LogAsync(PageName, MethodName, Message, Source, StackTrace, UserName, null);
        }
        
        /// <remarks/>
        public void Error_LogAsync(string PageName, string MethodName, string Message, string Source, string StackTrace, string UserName, object userState) {
            if ((this.Error_LogOperationCompleted == null)) {
                this.Error_LogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnError_LogOperationCompleted);
            }
            this.InvokeAsync("Error_Log", new object[] {
                        PageName,
                        MethodName,
                        Message,
                        Source,
                        StackTrace,
                        UserName}, this.Error_LogOperationCompleted, userState);
        }
        
        private void OnError_LogOperationCompleted(object arg) {
            if ((this.Error_LogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Error_LogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_PredictedTimeInterval_Settings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_PredictedTimeInterval_Settings() {
            object[] results = this.Invoke("List_PredictedTimeInterval_Settings", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_PredictedTimeInterval_SettingsAsync() {
            this.List_PredictedTimeInterval_SettingsAsync(null);
        }
        
        /// <remarks/>
        public void List_PredictedTimeInterval_SettingsAsync(object userState) {
            if ((this.List_PredictedTimeInterval_SettingsOperationCompleted == null)) {
                this.List_PredictedTimeInterval_SettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_PredictedTimeInterval_SettingsOperationCompleted);
            }
            this.InvokeAsync("List_PredictedTimeInterval_Settings", new object[0], this.List_PredictedTimeInterval_SettingsOperationCompleted, userState);
        }
        
        private void OnList_PredictedTimeInterval_SettingsOperationCompleted(object arg) {
            if ((this.List_PredictedTimeInterval_SettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_PredictedTimeInterval_SettingsCompleted(this, new List_PredictedTimeInterval_SettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_PredictedTimeInterval_Settings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_PredictedTimeInterval_Settings(int TimeInterval) {
            this.Invoke("New_PredictedTimeInterval_Settings", new object[] {
                        TimeInterval});
        }
        
        /// <remarks/>
        public void New_PredictedTimeInterval_SettingsAsync(int TimeInterval) {
            this.New_PredictedTimeInterval_SettingsAsync(TimeInterval, null);
        }
        
        /// <remarks/>
        public void New_PredictedTimeInterval_SettingsAsync(int TimeInterval, object userState) {
            if ((this.New_PredictedTimeInterval_SettingsOperationCompleted == null)) {
                this.New_PredictedTimeInterval_SettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_PredictedTimeInterval_SettingsOperationCompleted);
            }
            this.InvokeAsync("New_PredictedTimeInterval_Settings", new object[] {
                        TimeInterval}, this.New_PredictedTimeInterval_SettingsOperationCompleted, userState);
        }
        
        private void OnNew_PredictedTimeInterval_SettingsOperationCompleted(object arg) {
            if ((this.New_PredictedTimeInterval_SettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_PredictedTimeInterval_SettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Update_PredictedTimeInterval_Settings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_PredictedTimeInterval_Settings(int TimeInterval, int SettingsID) {
            this.Invoke("Update_PredictedTimeInterval_Settings", new object[] {
                        TimeInterval,
                        SettingsID});
        }
        
        /// <remarks/>
        public void Update_PredictedTimeInterval_SettingsAsync(int TimeInterval, int SettingsID) {
            this.Update_PredictedTimeInterval_SettingsAsync(TimeInterval, SettingsID, null);
        }
        
        /// <remarks/>
        public void Update_PredictedTimeInterval_SettingsAsync(int TimeInterval, int SettingsID, object userState) {
            if ((this.Update_PredictedTimeInterval_SettingsOperationCompleted == null)) {
                this.Update_PredictedTimeInterval_SettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_PredictedTimeInterval_SettingsOperationCompleted);
            }
            this.InvokeAsync("Update_PredictedTimeInterval_Settings", new object[] {
                        TimeInterval,
                        SettingsID}, this.Update_PredictedTimeInterval_SettingsOperationCompleted, userState);
        }
        
        private void OnUpdate_PredictedTimeInterval_SettingsOperationCompleted(object arg) {
            if ((this.Update_PredictedTimeInterval_SettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_PredictedTimeInterval_SettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_PredictedTimeInterval_Settings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_PredictedTimeInterval_Settings(int SettingsID) {
            this.Invoke("Delete_PredictedTimeInterval_Settings", new object[] {
                        SettingsID});
        }
        
        /// <remarks/>
        public void Delete_PredictedTimeInterval_SettingsAsync(int SettingsID) {
            this.Delete_PredictedTimeInterval_SettingsAsync(SettingsID, null);
        }
        
        /// <remarks/>
        public void Delete_PredictedTimeInterval_SettingsAsync(int SettingsID, object userState) {
            if ((this.Delete_PredictedTimeInterval_SettingsOperationCompleted == null)) {
                this.Delete_PredictedTimeInterval_SettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_PredictedTimeInterval_SettingsOperationCompleted);
            }
            this.InvokeAsync("Delete_PredictedTimeInterval_Settings", new object[] {
                        SettingsID}, this.Delete_PredictedTimeInterval_SettingsOperationCompleted, userState);
        }
        
        private void OnDelete_PredictedTimeInterval_SettingsOperationCompleted(object arg) {
            if ((this.Delete_PredictedTimeInterval_SettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_PredictedTimeInterval_SettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_gazeteer_definition", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_gazeteer_definition(string SystemCodeNumber, string ObjectTypeName, string LocationNumber, string LocationUSRN, string LocationDetails, string LocationDescription, string LocationStreet, string LocationTown, string LocationPostcode, string LocationDistrict) {
            this.Invoke("New_gazeteer_definition", new object[] {
                        SystemCodeNumber,
                        ObjectTypeName,
                        LocationNumber,
                        LocationUSRN,
                        LocationDetails,
                        LocationDescription,
                        LocationStreet,
                        LocationTown,
                        LocationPostcode,
                        LocationDistrict});
        }
        
        /// <remarks/>
        public void New_gazeteer_definitionAsync(string SystemCodeNumber, string ObjectTypeName, string LocationNumber, string LocationUSRN, string LocationDetails, string LocationDescription, string LocationStreet, string LocationTown, string LocationPostcode, string LocationDistrict) {
            this.New_gazeteer_definitionAsync(SystemCodeNumber, ObjectTypeName, LocationNumber, LocationUSRN, LocationDetails, LocationDescription, LocationStreet, LocationTown, LocationPostcode, LocationDistrict, null);
        }
        
        /// <remarks/>
        public void New_gazeteer_definitionAsync(string SystemCodeNumber, string ObjectTypeName, string LocationNumber, string LocationUSRN, string LocationDetails, string LocationDescription, string LocationStreet, string LocationTown, string LocationPostcode, string LocationDistrict, object userState) {
            if ((this.New_gazeteer_definitionOperationCompleted == null)) {
                this.New_gazeteer_definitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_gazeteer_definitionOperationCompleted);
            }
            this.InvokeAsync("New_gazeteer_definition", new object[] {
                        SystemCodeNumber,
                        ObjectTypeName,
                        LocationNumber,
                        LocationUSRN,
                        LocationDetails,
                        LocationDescription,
                        LocationStreet,
                        LocationTown,
                        LocationPostcode,
                        LocationDistrict}, this.New_gazeteer_definitionOperationCompleted, userState);
        }
        
        private void OnNew_gazeteer_definitionOperationCompleted(object arg) {
            if ((this.New_gazeteer_definitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_gazeteer_definitionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_RoadType_Configuration_Settings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_RoadType_Configuration_Settings() {
            object[] results = this.Invoke("List_RoadType_Configuration_Settings", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_RoadType_Configuration_SettingsAsync() {
            this.List_RoadType_Configuration_SettingsAsync(null);
        }
        
        /// <remarks/>
        public void List_RoadType_Configuration_SettingsAsync(object userState) {
            if ((this.List_RoadType_Configuration_SettingsOperationCompleted == null)) {
                this.List_RoadType_Configuration_SettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_RoadType_Configuration_SettingsOperationCompleted);
            }
            this.InvokeAsync("List_RoadType_Configuration_Settings", new object[0], this.List_RoadType_Configuration_SettingsOperationCompleted, userState);
        }
        
        private void OnList_RoadType_Configuration_SettingsOperationCompleted(object arg) {
            if ((this.List_RoadType_Configuration_SettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_RoadType_Configuration_SettingsCompleted(this, new List_RoadType_Configuration_SettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_RoadType_Configuration_Settings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_RoadType_Configuration_Settings(System.Data.DataSet ds) {
            this.Invoke("New_RoadType_Configuration_Settings", new object[] {
                        ds});
        }
        
        /// <remarks/>
        public void New_RoadType_Configuration_SettingsAsync(System.Data.DataSet ds) {
            this.New_RoadType_Configuration_SettingsAsync(ds, null);
        }
        
        /// <remarks/>
        public void New_RoadType_Configuration_SettingsAsync(System.Data.DataSet ds, object userState) {
            if ((this.New_RoadType_Configuration_SettingsOperationCompleted == null)) {
                this.New_RoadType_Configuration_SettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_RoadType_Configuration_SettingsOperationCompleted);
            }
            this.InvokeAsync("New_RoadType_Configuration_Settings", new object[] {
                        ds}, this.New_RoadType_Configuration_SettingsOperationCompleted, userState);
        }
        
        private void OnNew_RoadType_Configuration_SettingsOperationCompleted(object arg) {
            if ((this.New_RoadType_Configuration_SettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_RoadType_Configuration_SettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/ECU_definition", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ECU_definition(string usrn) {
            object[] results = this.Invoke("ECU_definition", new object[] {
                        usrn});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ECU_definitionAsync(string usrn) {
            this.ECU_definitionAsync(usrn, null);
        }
        
        /// <remarks/>
        public void ECU_definitionAsync(string usrn, object userState) {
            if ((this.ECU_definitionOperationCompleted == null)) {
                this.ECU_definitionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnECU_definitionOperationCompleted);
            }
            this.InvokeAsync("ECU_definition", new object[] {
                        usrn}, this.ECU_definitionOperationCompleted, userState);
        }
        
        private void OnECU_definitionOperationCompleted(object arg) {
            if ((this.ECU_definitionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ECU_definitionCompleted(this, new ECU_definitionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/ECU_definitions", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ECU_definitions(string[] usrn) {
            object[] results = this.Invoke("ECU_definitions", new object[] {
                        usrn});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ECU_definitionsAsync(string[] usrn) {
            this.ECU_definitionsAsync(usrn, null);
        }
        
        /// <remarks/>
        public void ECU_definitionsAsync(string[] usrn, object userState) {
            if ((this.ECU_definitionsOperationCompleted == null)) {
                this.ECU_definitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnECU_definitionsOperationCompleted);
            }
            this.InvokeAsync("ECU_definitions", new object[] {
                        usrn}, this.ECU_definitionsOperationCompleted, userState);
        }
        
        private void OnECU_definitionsOperationCompleted(object arg) {
            if ((this.ECU_definitionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ECU_definitionsCompleted(this, new ECU_definitionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_SubscriptionAlert_Incident", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_SubscriptionAlert_Incident(int AlertID) {
            object[] results = this.Invoke("View_SubscriptionAlert_Incident", new object[] {
                        AlertID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_SubscriptionAlert_IncidentAsync(int AlertID) {
            this.View_SubscriptionAlert_IncidentAsync(AlertID, null);
        }
        
        /// <remarks/>
        public void View_SubscriptionAlert_IncidentAsync(int AlertID, object userState) {
            if ((this.View_SubscriptionAlert_IncidentOperationCompleted == null)) {
                this.View_SubscriptionAlert_IncidentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_SubscriptionAlert_IncidentOperationCompleted);
            }
            this.InvokeAsync("View_SubscriptionAlert_Incident", new object[] {
                        AlertID}, this.View_SubscriptionAlert_IncidentOperationCompleted, userState);
        }
        
        private void OnView_SubscriptionAlert_IncidentOperationCompleted(object arg) {
            if ((this.View_SubscriptionAlert_IncidentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_SubscriptionAlert_IncidentCompleted(this, new View_SubscriptionAlert_IncidentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_AlertDetails", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_AlertDetails(int AlertID) {
            object[] results = this.Invoke("View_AlertDetails", new object[] {
                        AlertID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_AlertDetailsAsync(int AlertID) {
            this.View_AlertDetailsAsync(AlertID, null);
        }
        
        /// <remarks/>
        public void View_AlertDetailsAsync(int AlertID, object userState) {
            if ((this.View_AlertDetailsOperationCompleted == null)) {
                this.View_AlertDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_AlertDetailsOperationCompleted);
            }
            this.InvokeAsync("View_AlertDetails", new object[] {
                        AlertID}, this.View_AlertDetailsOperationCompleted, userState);
        }
        
        private void OnView_AlertDetailsOperationCompleted(object arg) {
            if ((this.View_AlertDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_AlertDetailsCompleted(this, new View_AlertDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_AlertSummarySettings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_AlertSummarySettings() {
            object[] results = this.Invoke("View_AlertSummarySettings", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_AlertSummarySettingsAsync() {
            this.View_AlertSummarySettingsAsync(null);
        }
        
        /// <remarks/>
        public void View_AlertSummarySettingsAsync(object userState) {
            if ((this.View_AlertSummarySettingsOperationCompleted == null)) {
                this.View_AlertSummarySettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_AlertSummarySettingsOperationCompleted);
            }
            this.InvokeAsync("View_AlertSummarySettings", new object[0], this.View_AlertSummarySettingsOperationCompleted, userState);
        }
        
        private void OnView_AlertSummarySettingsOperationCompleted(object arg) {
            if ((this.View_AlertSummarySettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_AlertSummarySettingsCompleted(this, new View_AlertSummarySettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Update_AlertSummarySettings", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Update_AlertSummarySettings(string ColumnName, string Text) {
            this.Invoke("Update_AlertSummarySettings", new object[] {
                        ColumnName,
                        Text});
        }
        
        /// <remarks/>
        public void Update_AlertSummarySettingsAsync(string ColumnName, string Text) {
            this.Update_AlertSummarySettingsAsync(ColumnName, Text, null);
        }
        
        /// <remarks/>
        public void Update_AlertSummarySettingsAsync(string ColumnName, string Text, object userState) {
            if ((this.Update_AlertSummarySettingsOperationCompleted == null)) {
                this.Update_AlertSummarySettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdate_AlertSummarySettingsOperationCompleted);
            }
            this.InvokeAsync("Update_AlertSummarySettings", new object[] {
                        ColumnName,
                        Text}, this.Update_AlertSummarySettingsOperationCompleted, userState);
        }
        
        private void OnUpdate_AlertSummarySettingsOperationCompleted(object arg) {
            if ((this.Update_AlertSummarySettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Update_AlertSummarySettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_ObjectDetails", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_ObjectDetails(string TableName, string SystemCodeNumber) {
            object[] results = this.Invoke("View_ObjectDetails", new object[] {
                        TableName,
                        SystemCodeNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_ObjectDetailsAsync(string TableName, string SystemCodeNumber) {
            this.View_ObjectDetailsAsync(TableName, SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void View_ObjectDetailsAsync(string TableName, string SystemCodeNumber, object userState) {
            if ((this.View_ObjectDetailsOperationCompleted == null)) {
                this.View_ObjectDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_ObjectDetailsOperationCompleted);
            }
            this.InvokeAsync("View_ObjectDetails", new object[] {
                        TableName,
                        SystemCodeNumber}, this.View_ObjectDetailsOperationCompleted, userState);
        }
        
        private void OnView_ObjectDetailsOperationCompleted(object arg) {
            if ((this.View_ObjectDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_ObjectDetailsCompleted(this, new View_ObjectDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_ObjectFaultDetails", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_ObjectFaultDetails(string ObjectName, string SystemCodeNumber, string LastUpdated) {
            object[] results = this.Invoke("View_ObjectFaultDetails", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        LastUpdated});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_ObjectFaultDetailsAsync(string ObjectName, string SystemCodeNumber, string LastUpdated) {
            this.View_ObjectFaultDetailsAsync(ObjectName, SystemCodeNumber, LastUpdated, null);
        }
        
        /// <remarks/>
        public void View_ObjectFaultDetailsAsync(string ObjectName, string SystemCodeNumber, string LastUpdated, object userState) {
            if ((this.View_ObjectFaultDetailsOperationCompleted == null)) {
                this.View_ObjectFaultDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_ObjectFaultDetailsOperationCompleted);
            }
            this.InvokeAsync("View_ObjectFaultDetails", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        LastUpdated}, this.View_ObjectFaultDetailsOperationCompleted, userState);
        }
        
        private void OnView_ObjectFaultDetailsOperationCompleted(object arg) {
            if ((this.View_ObjectFaultDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_ObjectFaultDetailsCompleted(this, new View_ObjectFaultDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_ObjectDynamicDetails", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_ObjectDynamicDetails(string ObjectName, string SystemCodeNumber, string LastUpdated) {
            object[] results = this.Invoke("View_ObjectDynamicDetails", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        LastUpdated});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_ObjectDynamicDetailsAsync(string ObjectName, string SystemCodeNumber, string LastUpdated) {
            this.View_ObjectDynamicDetailsAsync(ObjectName, SystemCodeNumber, LastUpdated, null);
        }
        
        /// <remarks/>
        public void View_ObjectDynamicDetailsAsync(string ObjectName, string SystemCodeNumber, string LastUpdated, object userState) {
            if ((this.View_ObjectDynamicDetailsOperationCompleted == null)) {
                this.View_ObjectDynamicDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_ObjectDynamicDetailsOperationCompleted);
            }
            this.InvokeAsync("View_ObjectDynamicDetails", new object[] {
                        ObjectName,
                        SystemCodeNumber,
                        LastUpdated}, this.View_ObjectDynamicDetailsOperationCompleted, userState);
        }
        
        private void OnView_ObjectDynamicDetailsOperationCompleted(object arg) {
            if ((this.View_ObjectDynamicDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_ObjectDynamicDetailsCompleted(this, new View_ObjectDynamicDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_SubscriptionAlert_Incident", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_SubscriptionAlert_Incident(int SubscriptionAlertID, string SystemCodeNumber, string TableName, string ObjectSystemCodeNumber, string IncidentLastUpdated, string ColumnName, int SubscriptionID) {
            this.Invoke("New_SubscriptionAlert_Incident", new object[] {
                        SubscriptionAlertID,
                        SystemCodeNumber,
                        TableName,
                        ObjectSystemCodeNumber,
                        IncidentLastUpdated,
                        ColumnName,
                        SubscriptionID});
        }
        
        /// <remarks/>
        public void New_SubscriptionAlert_IncidentAsync(int SubscriptionAlertID, string SystemCodeNumber, string TableName, string ObjectSystemCodeNumber, string IncidentLastUpdated, string ColumnName, int SubscriptionID) {
            this.New_SubscriptionAlert_IncidentAsync(SubscriptionAlertID, SystemCodeNumber, TableName, ObjectSystemCodeNumber, IncidentLastUpdated, ColumnName, SubscriptionID, null);
        }
        
        /// <remarks/>
        public void New_SubscriptionAlert_IncidentAsync(int SubscriptionAlertID, string SystemCodeNumber, string TableName, string ObjectSystemCodeNumber, string IncidentLastUpdated, string ColumnName, int SubscriptionID, object userState) {
            if ((this.New_SubscriptionAlert_IncidentOperationCompleted == null)) {
                this.New_SubscriptionAlert_IncidentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_SubscriptionAlert_IncidentOperationCompleted);
            }
            this.InvokeAsync("New_SubscriptionAlert_Incident", new object[] {
                        SubscriptionAlertID,
                        SystemCodeNumber,
                        TableName,
                        ObjectSystemCodeNumber,
                        IncidentLastUpdated,
                        ColumnName,
                        SubscriptionID}, this.New_SubscriptionAlert_IncidentOperationCompleted, userState);
        }
        
        private void OnNew_SubscriptionAlert_IncidentOperationCompleted(object arg) {
            if ((this.New_SubscriptionAlert_IncidentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_SubscriptionAlert_IncidentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Quarantine_Data", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Quarantine_Data(int pageIndex, string columnName, string searchText, string systemCodeNumber, bool isSorting, string sortingType, string sortingColumn) {
            object[] results = this.Invoke("List_Quarantine_Data", new object[] {
                        pageIndex,
                        columnName,
                        searchText,
                        systemCodeNumber,
                        isSorting,
                        sortingType,
                        sortingColumn});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_Quarantine_DataAsync(int pageIndex, string columnName, string searchText, string systemCodeNumber, bool isSorting, string sortingType, string sortingColumn) {
            this.List_Quarantine_DataAsync(pageIndex, columnName, searchText, systemCodeNumber, isSorting, sortingType, sortingColumn, null);
        }
        
        /// <remarks/>
        public void List_Quarantine_DataAsync(int pageIndex, string columnName, string searchText, string systemCodeNumber, bool isSorting, string sortingType, string sortingColumn, object userState) {
            if ((this.List_Quarantine_DataOperationCompleted == null)) {
                this.List_Quarantine_DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_Quarantine_DataOperationCompleted);
            }
            this.InvokeAsync("List_Quarantine_Data", new object[] {
                        pageIndex,
                        columnName,
                        searchText,
                        systemCodeNumber,
                        isSorting,
                        sortingType,
                        sortingColumn}, this.List_Quarantine_DataOperationCompleted, userState);
        }
        
        private void OnList_Quarantine_DataOperationCompleted(object arg) {
            if ((this.List_Quarantine_DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_Quarantine_DataCompleted(this, new List_Quarantine_DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/SearchList_Quarantine_Data", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchList_Quarantine_Data(string columnname, string SearchContent) {
            object[] results = this.Invoke("SearchList_Quarantine_Data", new object[] {
                        columnname,
                        SearchContent});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchList_Quarantine_DataAsync(string columnname, string SearchContent) {
            this.SearchList_Quarantine_DataAsync(columnname, SearchContent, null);
        }
        
        /// <remarks/>
        public void SearchList_Quarantine_DataAsync(string columnname, string SearchContent, object userState) {
            if ((this.SearchList_Quarantine_DataOperationCompleted == null)) {
                this.SearchList_Quarantine_DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchList_Quarantine_DataOperationCompleted);
            }
            this.InvokeAsync("SearchList_Quarantine_Data", new object[] {
                        columnname,
                        SearchContent}, this.SearchList_Quarantine_DataOperationCompleted, userState);
        }
        
        private void OnSearchList_Quarantine_DataOperationCompleted(object arg) {
            if ((this.SearchList_Quarantine_DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchList_Quarantine_DataCompleted(this, new SearchList_Quarantine_DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/GetTypeDescription", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTypeDescription() {
            object[] results = this.Invoke("GetTypeDescription", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTypeDescriptionAsync() {
            this.GetTypeDescriptionAsync(null);
        }
        
        /// <remarks/>
        public void GetTypeDescriptionAsync(object userState) {
            if ((this.GetTypeDescriptionOperationCompleted == null)) {
                this.GetTypeDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTypeDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetTypeDescription", new object[0], this.GetTypeDescriptionOperationCompleted, userState);
        }
        
        private void OnGetTypeDescriptionOperationCompleted(object arg) {
            if ((this.GetTypeDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTypeDescriptionCompleted(this, new GetTypeDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_Quarantine_Data", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete_Quarantine_Data(string[] quarantineIds) {
            this.Invoke("Delete_Quarantine_Data", new object[] {
                        quarantineIds});
        }
        
        /// <remarks/>
        public void Delete_Quarantine_DataAsync(string[] quarantineIds) {
            this.Delete_Quarantine_DataAsync(quarantineIds, null);
        }
        
        /// <remarks/>
        public void Delete_Quarantine_DataAsync(string[] quarantineIds, object userState) {
            if ((this.Delete_Quarantine_DataOperationCompleted == null)) {
                this.Delete_Quarantine_DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_Quarantine_DataOperationCompleted);
            }
            this.InvokeAsync("Delete_Quarantine_Data", new object[] {
                        quarantineIds}, this.Delete_Quarantine_DataOperationCompleted, userState);
        }
        
        private void OnDelete_Quarantine_DataOperationCompleted(object arg) {
            if ((this.Delete_Quarantine_DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_Quarantine_DataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Quarantinedata", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_Quarantinedata(string QuarantineID, string SQL) {
            this.Invoke("New_Quarantinedata", new object[] {
                        QuarantineID,
                        SQL});
        }
        
        /// <remarks/>
        public void New_QuarantinedataAsync(string QuarantineID, string SQL) {
            this.New_QuarantinedataAsync(QuarantineID, SQL, null);
        }
        
        /// <remarks/>
        public void New_QuarantinedataAsync(string QuarantineID, string SQL, object userState) {
            if ((this.New_QuarantinedataOperationCompleted == null)) {
                this.New_QuarantinedataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_QuarantinedataOperationCompleted);
            }
            this.InvokeAsync("New_Quarantinedata", new object[] {
                        QuarantineID,
                        SQL}, this.New_QuarantinedataOperationCompleted, userState);
        }
        
        private void OnNew_QuarantinedataOperationCompleted(object arg) {
            if ((this.New_QuarantinedataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_QuarantinedataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/New_Quarantinedata_byDelete", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void New_Quarantinedata_byDelete(string QuarantineID, string SQL, string DefinitionTable, string SystemCodeNumber) {
            this.Invoke("New_Quarantinedata_byDelete", new object[] {
                        QuarantineID,
                        SQL,
                        DefinitionTable,
                        SystemCodeNumber});
        }
        
        /// <remarks/>
        public void New_Quarantinedata_byDeleteAsync(string QuarantineID, string SQL, string DefinitionTable, string SystemCodeNumber) {
            this.New_Quarantinedata_byDeleteAsync(QuarantineID, SQL, DefinitionTable, SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void New_Quarantinedata_byDeleteAsync(string QuarantineID, string SQL, string DefinitionTable, string SystemCodeNumber, object userState) {
            if ((this.New_Quarantinedata_byDeleteOperationCompleted == null)) {
                this.New_Quarantinedata_byDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNew_Quarantinedata_byDeleteOperationCompleted);
            }
            this.InvokeAsync("New_Quarantinedata_byDelete", new object[] {
                        QuarantineID,
                        SQL,
                        DefinitionTable,
                        SystemCodeNumber}, this.New_Quarantinedata_byDeleteOperationCompleted, userState);
        }
        
        private void OnNew_Quarantinedata_byDeleteOperationCompleted(object arg) {
            if ((this.New_Quarantinedata_byDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.New_Quarantinedata_byDeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Restore_AirQuality", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Restore_AirQuality(string SystemCodeNumber) {
            this.Invoke("Restore_AirQuality", new object[] {
                        SystemCodeNumber});
        }
        
        /// <remarks/>
        public void Restore_AirQualityAsync(string SystemCodeNumber) {
            this.Restore_AirQualityAsync(SystemCodeNumber, null);
        }
        
        /// <remarks/>
        public void Restore_AirQualityAsync(string SystemCodeNumber, object userState) {
            if ((this.Restore_AirQualityOperationCompleted == null)) {
                this.Restore_AirQualityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestore_AirQualityOperationCompleted);
            }
            this.InvokeAsync("Restore_AirQuality", new object[] {
                        SystemCodeNumber}, this.Restore_AirQualityOperationCompleted, userState);
        }
        
        private void OnRestore_AirQualityOperationCompleted(object arg) {
            if ((this.Restore_AirQualityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Restore_AirQualityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Restore_Quarantinedata", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Restore_Quarantinedata(System.Data.DataSet dsQuarantineDetails, ref string definitionTableName, bool IsDelete) {
            object[] results = this.Invoke("Restore_Quarantinedata", new object[] {
                        dsQuarantineDetails,
                        definitionTableName,
                        IsDelete});
            definitionTableName = ((string)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Restore_QuarantinedataAsync(System.Data.DataSet dsQuarantineDetails, string definitionTableName, bool IsDelete) {
            this.Restore_QuarantinedataAsync(dsQuarantineDetails, definitionTableName, IsDelete, null);
        }
        
        /// <remarks/>
        public void Restore_QuarantinedataAsync(System.Data.DataSet dsQuarantineDetails, string definitionTableName, bool IsDelete, object userState) {
            if ((this.Restore_QuarantinedataOperationCompleted == null)) {
                this.Restore_QuarantinedataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestore_QuarantinedataOperationCompleted);
            }
            this.InvokeAsync("Restore_Quarantinedata", new object[] {
                        dsQuarantineDetails,
                        definitionTableName,
                        IsDelete}, this.Restore_QuarantinedataOperationCompleted, userState);
        }
        
        private void OnRestore_QuarantinedataOperationCompleted(object arg) {
            if ((this.Restore_QuarantinedataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Restore_QuarantinedataCompleted(this, new Restore_QuarantinedataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/Delete_All_Invalid_Quarantine_Data", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet Delete_All_Invalid_Quarantine_Data(System.Data.DataSet QuarantineInvalidData) {
            object[] results = this.Invoke("Delete_All_Invalid_Quarantine_Data", new object[] {
                        QuarantineInvalidData});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void Delete_All_Invalid_Quarantine_DataAsync(System.Data.DataSet QuarantineInvalidData) {
            this.Delete_All_Invalid_Quarantine_DataAsync(QuarantineInvalidData, null);
        }
        
        /// <remarks/>
        public void Delete_All_Invalid_Quarantine_DataAsync(System.Data.DataSet QuarantineInvalidData, object userState) {
            if ((this.Delete_All_Invalid_Quarantine_DataOperationCompleted == null)) {
                this.Delete_All_Invalid_Quarantine_DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelete_All_Invalid_Quarantine_DataOperationCompleted);
            }
            this.InvokeAsync("Delete_All_Invalid_Quarantine_Data", new object[] {
                        QuarantineInvalidData}, this.Delete_All_Invalid_Quarantine_DataOperationCompleted, userState);
        }
        
        private void OnDelete_All_Invalid_Quarantine_DataOperationCompleted(object arg) {
            if ((this.Delete_All_Invalid_Quarantine_DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Delete_All_Invalid_Quarantine_DataCompleted(this, new Delete_All_Invalid_Quarantine_DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/List_Quarantine_Violating_Data", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet List_Quarantine_Violating_Data(string SearchContent) {
            object[] results = this.Invoke("List_Quarantine_Violating_Data", new object[] {
                        SearchContent});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void List_Quarantine_Violating_DataAsync(string SearchContent) {
            this.List_Quarantine_Violating_DataAsync(SearchContent, null);
        }
        
        /// <remarks/>
        public void List_Quarantine_Violating_DataAsync(string SearchContent, object userState) {
            if ((this.List_Quarantine_Violating_DataOperationCompleted == null)) {
                this.List_Quarantine_Violating_DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnList_Quarantine_Violating_DataOperationCompleted);
            }
            this.InvokeAsync("List_Quarantine_Violating_Data", new object[] {
                        SearchContent}, this.List_Quarantine_Violating_DataOperationCompleted, userState);
        }
        
        private void OnList_Quarantine_Violating_DataOperationCompleted(object arg) {
            if ((this.List_Quarantine_Violating_DataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.List_Quarantine_Violating_DataCompleted(this, new List_Quarantine_Violating_DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/SearchList_Quality_Dataissues", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SearchList_Quality_Dataissues(string SearchContent) {
            object[] results = this.Invoke("SearchList_Quality_Dataissues", new object[] {
                        SearchContent});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SearchList_Quality_DataissuesAsync(string SearchContent) {
            this.SearchList_Quality_DataissuesAsync(SearchContent, null);
        }
        
        /// <remarks/>
        public void SearchList_Quality_DataissuesAsync(string SearchContent, object userState) {
            if ((this.SearchList_Quality_DataissuesOperationCompleted == null)) {
                this.SearchList_Quality_DataissuesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchList_Quality_DataissuesOperationCompleted);
            }
            this.InvokeAsync("SearchList_Quality_Dataissues", new object[] {
                        SearchContent}, this.SearchList_Quality_DataissuesOperationCompleted, userState);
        }
        
        private void OnSearchList_Quality_DataissuesOperationCompleted(object arg) {
            if ((this.SearchList_Quality_DataissuesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchList_Quality_DataissuesCompleted(this, new SearchList_Quality_DataissuesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_QuarantineDataBySCN", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_QuarantineDataBySCN(string systemCodeNumber) {
            object[] results = this.Invoke("View_QuarantineDataBySCN", new object[] {
                        systemCodeNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_QuarantineDataBySCNAsync(string systemCodeNumber) {
            this.View_QuarantineDataBySCNAsync(systemCodeNumber, null);
        }
        
        /// <remarks/>
        public void View_QuarantineDataBySCNAsync(string systemCodeNumber, object userState) {
            if ((this.View_QuarantineDataBySCNOperationCompleted == null)) {
                this.View_QuarantineDataBySCNOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_QuarantineDataBySCNOperationCompleted);
            }
            this.InvokeAsync("View_QuarantineDataBySCN", new object[] {
                        systemCodeNumber}, this.View_QuarantineDataBySCNOperationCompleted, userState);
        }
        
        private void OnView_QuarantineDataBySCNOperationCompleted(object arg) {
            if ((this.View_QuarantineDataBySCNCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_QuarantineDataBySCNCompleted(this, new View_QuarantineDataBySCNCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://soap.ukvoyager.info/View_QuarantineDataBySCNAndType", RequestNamespace="http://soap.ukvoyager.info/", ResponseNamespace="http://soap.ukvoyager.info/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet View_QuarantineDataBySCNAndType(string systemCodeNumber, string type) {
            object[] results = this.Invoke("View_QuarantineDataBySCNAndType", new object[] {
                        systemCodeNumber,
                        type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void View_QuarantineDataBySCNAndTypeAsync(string systemCodeNumber, string type) {
            this.View_QuarantineDataBySCNAndTypeAsync(systemCodeNumber, type, null);
        }
        
        /// <remarks/>
        public void View_QuarantineDataBySCNAndTypeAsync(string systemCodeNumber, string type, object userState) {
            if ((this.View_QuarantineDataBySCNAndTypeOperationCompleted == null)) {
                this.View_QuarantineDataBySCNAndTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnView_QuarantineDataBySCNAndTypeOperationCompleted);
            }
            this.InvokeAsync("View_QuarantineDataBySCNAndType", new object[] {
                        systemCodeNumber,
                        type}, this.View_QuarantineDataBySCNAndTypeOperationCompleted, userState);
        }
        
        private void OnView_QuarantineDataBySCNAndTypeOperationCompleted(object arg) {
            if ((this.View_QuarantineDataBySCNAndTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.View_QuarantineDataBySCNAndTypeCompleted(this, new View_QuarantineDataBySCNAndTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Insert_Incident_RecurrentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Edit_Incident_RecurrentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_Incident_RecurrentCompletedEventHandler(object sender, View_Incident_RecurrentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_Incident_RecurrentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_Incident_RecurrentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_Accident_RecurrentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_Incident_RecurrentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_Incident_RecurrentBySCNCompletedEventHandler(object sender, View_Incident_RecurrentBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_Incident_RecurrentBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_Incident_RecurrentBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_Incident_RecurrentByDateTimeCompletedEventHandler(object sender, View_Incident_RecurrentByDateTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_Incident_RecurrentByDateTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_Incident_RecurrentByDateTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_RecurringBySCNCompletedEventHandler(object sender, View_RecurringBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_RecurringBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_RecurringBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DateRangeRecurrentCompletedEventHandler(object sender, List_DateRangeRecurrentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DateRangeRecurrentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DateRangeRecurrentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void IsHolidayExistsCompletedEventHandler(object sender, IsHolidayExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsHolidayExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsHolidayExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_RecurrentDaysCompletedEventHandler(object sender, List_RecurrentDaysCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_RecurrentDaysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_RecurrentDaysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_StatusCompletedEventHandler(object sender, List_StatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_StatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_StatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void IsLocationExistsCompletedEventHandler(object sender, IsLocationExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsLocationExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsLocationExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Update_StatusBySCNCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetNotificationsByUserNameCompletedEventHandler(object sender, GetNotificationsByUserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNotificationsByUserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotificationsByUserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void UpdateNotificationByIdCompletedEventHandler(object sender, UpdateNotificationByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateNotificationByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateNotificationByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_Notification_UtmcEventTypesCompletedEventHandler(object sender, List_Notification_UtmcEventTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_Notification_UtmcEventTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_Notification_UtmcEventTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetRestoreDetailsCompletedEventHandler(object sender, GetRestoreDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRestoreDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRestoreDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetObjectsForSettingsCompletedEventHandler(object sender, GetObjectsForSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetObjectsForSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetObjectsForSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetDeviceHistoryRootLinkCompletedEventHandler(object sender, GetDeviceHistoryRootLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeviceHistoryRootLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeviceHistoryRootLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetDeviceHistoryRootLink_NewCompletedEventHandler(object sender, GetDeviceHistoryRootLink_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeviceHistoryRootLink_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeviceHistoryRootLink_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_FaultAcknowledgement_DataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetDayTypeCompletedEventHandler(object sender, GetDayTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDayTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDayTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetDataSourceCompletedEventHandler(object sender, GetDataSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetSeverityCompletedEventHandler(object sender, GetSeverityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeverityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeverityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_FaultTypesByObjectIdCompletedEventHandler(object sender, List_FaultTypesByObjectIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_FaultTypesByObjectIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_FaultTypesByObjectIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_FaultType_DataSourceCompletedEventHandler(object sender, List_FaultType_DataSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_FaultType_DataSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_FaultType_DataSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_FaultAcknowledgementSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetRegionCompletedEventHandler(object sender, GetRegionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRegionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRegionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void CheckSCNExistCompletedEventHandler(object sender, CheckSCNExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckSCNExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckSCNExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DataSourceCompletedEventHandler(object sender, List_DataSourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DataSourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DataSourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_SeverityCompletedEventHandler(object sender, List_SeverityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_SeverityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_SeverityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_Severity_WithClosuresCompletedEventHandler(object sender, List_Severity_WithClosuresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_Severity_WithClosuresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_Severity_WithClosuresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_TypeCompletedEventHandler(object sender, List_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_QualityStatementCompletedEventHandler(object sender, List_QualityStatementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_QualityStatementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_QualityStatementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_Passable_RouteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Edit_Passable_RouteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_Passable_RouteCompletedEventHandler(object sender, List_Passable_RouteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_Passable_RouteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_Passable_RouteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_PassableRouteBySCNCompletedEventHandler(object sender, View_PassableRouteBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_PassableRouteBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_PassableRouteBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Update_Passable_RouteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void isPassableStateChangedCompletedEventHandler(object sender, isPassableStateChangedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isPassableStateChangedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isPassableStateChangedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_Passable_RouteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_Subscription_Alert_IncidentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_PanelTypeIDCompletedEventHandler(object sender, List_PanelTypeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_PanelTypeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_PanelTypeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_DeviceHistoryEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_AccidentWithLocationCompletedEventHandler(object sender, New_AccidentWithLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class New_AccidentWithLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal New_AccidentWithLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Edit_AccidentWithLocationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_IncidentWithLocationCompletedEventHandler(object sender, New_IncidentWithLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class New_IncidentWithLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal New_IncidentWithLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Edit_IncidentWithLocationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_RoadworksWithLocationCompletedEventHandler(object sender, New_RoadworksWithLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class New_RoadworksWithLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal New_RoadworksWithLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Edit_RoadworksWithLocationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_EventWithLocationCompletedEventHandler(object sender, New_EventWithLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class New_EventWithLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal New_EventWithLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Edit_EventWithLocationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void ListAllRoadClosureCompletedEventHandler(object sender, ListAllRoadClosureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAllRoadClosureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAllRoadClosureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void ListAllDiversionRoutesCompletedEventHandler(object sender, ListAllDiversionRoutesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAllDiversionRoutesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAllDiversionRoutesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_Diversions_ObjectsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Get_Diversions_ObjectsCompletedEventHandler(object sender, Get_Diversions_ObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Diversions_ObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Diversions_ObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_Diversions_ObjectsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_Active_FaultsBySCNCompletedEventHandler(object sender, View_Active_FaultsBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_Active_FaultsBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_Active_FaultsBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_FaultsBySCN_NewCompletedEventHandler(object sender, View_FaultsBySCN_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_FaultsBySCN_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_FaultsBySCN_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_Fault_TypeCompletedEventHandler(object sender, View_Fault_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_Fault_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_Fault_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_Fault_Type_DescriptionCompletedEventHandler(object sender, View_Fault_Type_DescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_Fault_Type_DescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_Fault_Type_DescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_FaultTypeCompletedEventHandler(object sender, View_FaultTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_FaultTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_FaultTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_DataSource_ByFaultCompletedEventHandler(object sender, View_DataSource_ByFaultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_DataSource_ByFaultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_DataSource_ByFaultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Edit_FaultTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_FaultTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_Fault_Type_SearchCompletedEventHandler(object sender, List_Fault_Type_SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_Fault_Type_SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_Fault_Type_SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_Objects_SearchCompletedEventHandler(object sender, List_Objects_SearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_Objects_SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_Objects_SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_FaultTypeDescriptionCompletedEventHandler(object sender, View_FaultTypeDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_FaultTypeDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_FaultTypeDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Get_ShortDescriptionByScnCompletedEventHandler(object sender, Get_ShortDescriptionByScnCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_ShortDescriptionByScnCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_ShortDescriptionByScnCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_Congestion_Severity_RatingsCompletedEventHandler(object sender, View_Congestion_Severity_RatingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_Congestion_Severity_RatingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_Congestion_Severity_RatingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_datasource_typeidCompletedEventHandler(object sender, List_datasource_typeidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_datasource_typeidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_datasource_typeidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DataSourceCategoryCompletedEventHandler(object sender, List_DataSourceCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DataSourceCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DataSourceCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DayTypeCompletedEventHandler(object sender, List_DayTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DayTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DayTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Insert_SpeedWeightageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_SpeedWeightageSettingsCompletedEventHandler(object sender, List_SpeedWeightageSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_SpeedWeightageSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_SpeedWeightageSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void update_SpeedWeightageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_SpeedWeightageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Check_Existence_SpeedWeightageCompletedEventHandler(object sender, Check_Existence_SpeedWeightageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Check_Existence_SpeedWeightageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Check_Existence_SpeedWeightageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Save_Severity_RatingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetLatestDynamicRecordCompletedEventHandler(object sender, GetLatestDynamicRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLatestDynamicRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLatestDynamicRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<System.DateTime> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<System.DateTime>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_SeveritySettingsCompletedEventHandler(object sender, List_SeveritySettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_SeveritySettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_SeveritySettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void update_SeverityDelayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void delete_SeverityDelayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_Severity_TypeCompletedEventHandler(object sender, List_Severity_TypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_Severity_TypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_Severity_TypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_Distruption_Severity_DelayCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Check_Existence_Distruption_Delay_SettingsCompletedEventHandler(object sender, Check_Existence_Distruption_Delay_SettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Check_Existence_Distruption_Delay_SettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Check_Existence_Distruption_Delay_SettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_AbnormalJourneyTimeCompletedEventHandler(object sender, View_AbnormalJourneyTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_AbnormalJourneyTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_AbnormalJourneyTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Save_AbnormalJourneyTimeSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Get_DescriptiveTermTypeCompletedEventHandler(object sender, Get_DescriptiveTermTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_DescriptiveTermTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_DescriptiveTermTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Add_SpeedLimitCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_DynamicBySCNForGraphCompletedEventHandler(object sender, View_DynamicBySCNForGraphCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_DynamicBySCNForGraphCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_DynamicBySCNForGraphCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_DisruptionDetailsBySCNCompletedEventHandler(object sender, View_DisruptionDetailsBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_DisruptionDetailsBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_DisruptionDetailsBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void OpeningTime_ByDayTypeCompletedEventHandler(object sender, OpeningTime_ByDayTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpeningTime_ByDayTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpeningTime_ByDayTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void OpeningTime_ByDayType_NewCompletedEventHandler(object sender, OpeningTime_ByDayType_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpeningTime_ByDayType_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpeningTime_ByDayType_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void IsDayType_ExistsCompletedEventHandler(object sender, IsDayType_ExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDayType_ExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDayType_ExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Check_Date_DateRangeCompletedEventHandler(object sender, Check_Date_DateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Check_Date_DateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Check_Date_DateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int dateRangeId {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_DateRangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Update_Opening_Time_DateRangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_NewOpeningDateRangeID_DescriptionCompletedEventHandler(object sender, List_NewOpeningDateRangeID_DescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_NewOpeningDateRangeID_DescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_NewOpeningDateRangeID_DescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_Opening_Time_DateRangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_Opening_Time_DayTypeIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Edit_Opening_Time_DayTypeIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_NewOpening_dropDownSelectionCompletedEventHandler(object sender, List_NewOpening_dropDownSelectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_NewOpening_dropDownSelectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_NewOpening_dropDownSelectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_Default_NewOpening_dropDownSelectionCompletedEventHandler(object sender, List_Default_NewOpening_dropDownSelectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_Default_NewOpening_dropDownSelectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_Default_NewOpening_dropDownSelectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void DateRange_DefinitionBySCNCompletedEventHandler(object sender, DateRange_DefinitionBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DateRange_DefinitionBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DateRange_DefinitionBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DateRangeCompletedEventHandler(object sender, List_DateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_AllOpeningTimes_BySCNCompletedEventHandler(object sender, List_AllOpeningTimes_BySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_AllOpeningTimes_BySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_AllOpeningTimes_BySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void OpeningTimes_BySCNCompletedEventHandler(object sender, OpeningTimes_BySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpeningTimes_BySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpeningTimes_BySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_Opening_TimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_Opening_Time_NewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Insert_Opening_TimeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Insert_Opening_Time_NewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_Day_TypeID_By_DateRangeIdCompletedEventHandler(object sender, List_Day_TypeID_By_DateRangeIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_Day_TypeID_By_DateRangeIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_Day_TypeID_By_DateRangeIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_OpeningTimesBySCNCompletedEventHandler(object sender, List_OpeningTimesBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_OpeningTimesBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_OpeningTimesBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_TariffsBySCNCompletedEventHandler(object sender, List_TariffsBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_TariffsBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_TariffsBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_TariffsBySCNDayIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Get_HourCompletedEventHandler(object sender, Get_HourCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_HourCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_HourCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_TariffBySCNCompletedEventHandler(object sender, View_TariffBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_TariffBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_TariffBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_TariffBySCN_For_DateRangeCompletedEventHandler(object sender, View_TariffBySCN_For_DateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_TariffBySCN_For_DateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_TariffBySCN_For_DateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Get_OptisObjects_SignTextCompletedEventHandler(object sender, Get_OptisObjects_SignTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_OptisObjects_SignTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_OptisObjects_SignTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_ShortDescriptionByTypeCompletedEventHandler(object sender, List_ShortDescriptionByTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_ShortDescriptionByTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_ShortDescriptionByTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Get_Object_DateRangeCompletedEventHandler(object sender, Get_Object_DateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_Object_DateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_Object_DateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Insert_DateRangeCompletedEventHandler(object sender, Insert_DateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Insert_DateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Insert_DateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Validate_DateRangeCompletedEventHandler(object sender, Validate_DateRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Validate_DateRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Validate_DateRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Update_DateRangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_Objects_for_DaterangeCompletedEventHandler(object sender, List_Objects_for_DaterangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_Objects_for_DaterangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_Objects_for_DaterangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Insert_DateRange_CyCleHubListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_DateRange_CycleHubListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Insert_DateRange_EVChargingPointListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_DateRange_EVChargingPointListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Insert_DateRange_PointOfInterestListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_DateRange_PointOfInterestListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Insert_DateRange_Walkers_FacilityListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_DateRange_Walkers_FacilityListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Insert_DateRange_CarparkListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_DateRange_CarparkListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_NewDateRangeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_ObjectsCompletedEventHandler(object sender, List_ObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_ObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_ObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_ObjectsByObjectNameCompletedEventHandler(object sender, List_ObjectsByObjectNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_ObjectsByObjectNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_ObjectsByObjectNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_ANPRDetectorsCompletedEventHandler(object sender, List_ANPRDetectorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_ANPRDetectorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_ANPRDetectorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DataSource_TypeIDCompletedEventHandler(object sender, List_DataSource_TypeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DataSource_TypeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DataSource_TypeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_Day_TypeIDCompletedEventHandler(object sender, List_Day_TypeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_Day_TypeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_Day_TypeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DayTypeIDDescriptionCompletedEventHandler(object sender, List_DayTypeIDDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DayTypeIDDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DayTypeIDDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_Severity_TypeIDCompletedEventHandler(object sender, List_Severity_TypeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_Severity_TypeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_Severity_TypeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_TypeIDCompletedEventHandler(object sender, List_TypeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_TypeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_TypeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_QualityStatementIDCompletedEventHandler(object sender, List_QualityStatementIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_QualityStatementIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_QualityStatementIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_FaultTypeCompletedEventHandler(object sender, List_FaultTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_FaultTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_FaultTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_QualityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_FaultTypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_TypeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_FaultCompletedEventHandler(object sender, New_FaultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class New_FaultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal New_FaultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_Fault_FaultIdCompletedEventHandler(object sender, New_Fault_FaultIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class New_Fault_FaultIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal New_Fault_FaultIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_Acknowledge_FaultCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_CommandCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_VMS_Command_Active_MessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_Group_CommandCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_VMS_Group_Command_Active_MessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_HistoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_LocationBySCNCompletedEventHandler(object sender, View_LocationBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_LocationBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_LocationBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_CommandsBySCNCompletedEventHandler(object sender, View_CommandsBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_CommandsBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_CommandsBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_FaultsBySCNCompletedEventHandler(object sender, View_FaultsBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_FaultsBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_FaultsBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_FaultTypesCompletedEventHandler(object sender, View_FaultTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_FaultTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_FaultTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_QualityCompletedEventHandler(object sender, View_QualityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_QualityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_QualityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_TypeIDCompletedEventHandler(object sender, View_TypeIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_TypeIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_TypeIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_Commands_CommandSetCompletedEventHandler(object sender, View_Commands_CommandSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_Commands_CommandSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_Commands_CommandSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_Commands_ParameterSetCompletedEventHandler(object sender, View_Commands_ParameterSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_Commands_ParameterSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_Commands_ParameterSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_HistoryBySCNCompletedEventHandler(object sender, View_HistoryBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_HistoryBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_HistoryBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Edit_LocationBySCNCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Update_WardNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Update_Name_ShortDescriptionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_OldDataValueMetEventsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_BySCNCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Restore_UnMappedSCNCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_AknowledgementCompletedEventHandler(object sender, List_AknowledgementCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_AknowledgementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_AknowledgementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_NearByObjectsCompletedEventHandler(object sender, List_NearByObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_NearByObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_NearByObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_DeviceHistoryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_DeviceHistory_CommandIDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_DeviceHistory_LinkedEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DeviceHistoryObjectsCompletedEventHandler(object sender, List_DeviceHistoryObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DeviceHistoryObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DeviceHistoryObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DeviceHistoryTablesByObjectCompletedEventHandler(object sender, List_DeviceHistoryTablesByObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DeviceHistoryTablesByObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DeviceHistoryTablesByObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DeviceHistoryLinkedEntriesCompletedEventHandler(object sender, List_DeviceHistoryLinkedEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DeviceHistoryLinkedEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DeviceHistoryLinkedEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DeviceHistoryLinkedEntries_NewCompletedEventHandler(object sender, List_DeviceHistoryLinkedEntries_NewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DeviceHistoryLinkedEntries_NewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DeviceHistoryLinkedEntries_NewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Get_DeviceHistoryLinkedTreeCompletedEventHandler(object sender, Get_DeviceHistoryLinkedTreeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_DeviceHistoryLinkedTreeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_DeviceHistoryLinkedTreeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DeviceHistoryEntriesByObjectCompletedEventHandler(object sender, List_DeviceHistoryEntriesByObjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DeviceHistoryEntriesByObjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DeviceHistoryEntriesByObjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DeviceHistoryEntriesByLogCompletedEventHandler(object sender, List_DeviceHistoryEntriesByLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DeviceHistoryEntriesByLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DeviceHistoryEntriesByLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DeviceHistoryTablesCompletedEventHandler(object sender, List_DeviceHistoryTablesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DeviceHistoryTablesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DeviceHistoryTablesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_ShortDescriptionsCompletedEventHandler(object sender, List_ShortDescriptionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_ShortDescriptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_ShortDescriptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_UserNameCompletedEventHandler(object sender, List_UserNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_UserNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_UserNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DeviceHistorySCNsCompletedEventHandler(object sender, List_DeviceHistorySCNsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DeviceHistorySCNsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DeviceHistorySCNsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DeviceHistoryCountNewCompletedEventHandler(object sender, List_DeviceHistoryCountNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DeviceHistoryCountNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DeviceHistoryCountNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DeviceHistoryNewCompletedEventHandler(object sender, List_DeviceHistoryNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DeviceHistoryNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DeviceHistoryNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_DeviceHistory_ManualEntryCompletedEventHandler(object sender, New_DeviceHistory_ManualEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class New_DeviceHistory_ManualEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal New_DeviceHistory_ManualEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DeviceHistoryCompletedEventHandler(object sender, List_DeviceHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DeviceHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DeviceHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DeviceHistoryCountCompletedEventHandler(object sender, List_DeviceHistoryCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DeviceHistoryCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DeviceHistoryCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_EmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void ListAllEmailCompletedEventHandler(object sender, ListAllEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListAllEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListAllEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void DeleteEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void NewGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void ListEmailGroupCompletedEventHandler(object sender, ListEmailGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListEmailGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListEmailGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void ListManualGroupMailCompletedEventHandler(object sender, ListManualGroupMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListManualGroupMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListManualGroupMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void DeleteEmailGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void ListEmailByGroupIdCompletedEventHandler(object sender, ListEmailByGroupIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListEmailByGroupIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListEmailByGroupIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void CheckGroupNameExistCompletedEventHandler(object sender, CheckGroupNameExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckGroupNameExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckGroupNameExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void CheckEmailExistCompletedEventHandler(object sender, CheckEmailExistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckEmailExistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckEmailExistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void UpdateEmailGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_DeviceHistoryByLogIdCompletedEventHandler(object sender, View_DeviceHistoryByLogIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_DeviceHistoryByLogIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_DeviceHistoryByLogIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_ManualEntryStatusCompletedEventHandler(object sender, View_ManualEntryStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_ManualEntryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_ManualEntryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void UpdateManualEntryStatusCompletedEventHandler(object sender, UpdateManualEntryStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateManualEntryStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateManualEntryStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Get_DeviceHistoryLinkedTreeNewCompletedEventHandler(object sender, Get_DeviceHistoryLinkedTreeNewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Get_DeviceHistoryLinkedTreeNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Get_DeviceHistoryLinkedTreeNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_DayTypeSpeedSettingsCompletedEventHandler(object sender, List_DayTypeSpeedSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_DayTypeSpeedSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_DayTypeSpeedSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Update_DayTypeSpeedSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_RoadLinkSpeed_HistorySettingsCompletedEventHandler(object sender, List_RoadLinkSpeed_HistorySettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_RoadLinkSpeed_HistorySettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_RoadLinkSpeed_HistorySettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Update_RoadLinkSpeed_HistorySettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_CsvColumnsCompletedEventHandler(object sender, List_CsvColumnsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_CsvColumnsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_CsvColumnsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_CSVScheduleNameCompletedEventHandler(object sender, List_CSVScheduleNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_CSVScheduleNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_CSVScheduleNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_CSVFilesCompletedEventHandler(object sender, List_CSVFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_CSVFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_CSVFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_ScheduleByUserCompletedEventHandler(object sender, List_ScheduleByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_ScheduleByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_ScheduleByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_ScheduleByIdCompletedEventHandler(object sender, List_ScheduleByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_ScheduleByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_ScheduleByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_ScheduleCompletedEventHandler(object sender, List_ScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_ScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_ScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_ColumnByScheduleIdCompletedEventHandler(object sender, List_ColumnByScheduleIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_ColumnByScheduleIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_ColumnByScheduleIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void DeleteScheduleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void SaveCsvColumnsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void SaveExportToCSVSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void DeleteCsvColumnsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void UpdateExportToCSVSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Error_LogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_PredictedTimeInterval_SettingsCompletedEventHandler(object sender, List_PredictedTimeInterval_SettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_PredictedTimeInterval_SettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_PredictedTimeInterval_SettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_PredictedTimeInterval_SettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Update_PredictedTimeInterval_SettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_PredictedTimeInterval_SettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_gazeteer_definitionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_RoadType_Configuration_SettingsCompletedEventHandler(object sender, List_RoadType_Configuration_SettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_RoadType_Configuration_SettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_RoadType_Configuration_SettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_RoadType_Configuration_SettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void ECU_definitionCompletedEventHandler(object sender, ECU_definitionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ECU_definitionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ECU_definitionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void ECU_definitionsCompletedEventHandler(object sender, ECU_definitionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ECU_definitionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ECU_definitionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_SubscriptionAlert_IncidentCompletedEventHandler(object sender, View_SubscriptionAlert_IncidentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_SubscriptionAlert_IncidentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_SubscriptionAlert_IncidentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_AlertDetailsCompletedEventHandler(object sender, View_AlertDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_AlertDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_AlertDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_AlertSummarySettingsCompletedEventHandler(object sender, View_AlertSummarySettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_AlertSummarySettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_AlertSummarySettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Update_AlertSummarySettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_ObjectDetailsCompletedEventHandler(object sender, View_ObjectDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_ObjectDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_ObjectDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_ObjectFaultDetailsCompletedEventHandler(object sender, View_ObjectFaultDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_ObjectFaultDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_ObjectFaultDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_ObjectDynamicDetailsCompletedEventHandler(object sender, View_ObjectDynamicDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_ObjectDynamicDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_ObjectDynamicDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_SubscriptionAlert_IncidentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_Quarantine_DataCompletedEventHandler(object sender, List_Quarantine_DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_Quarantine_DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_Quarantine_DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void SearchList_Quarantine_DataCompletedEventHandler(object sender, SearchList_Quarantine_DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchList_Quarantine_DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchList_Quarantine_DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void GetTypeDescriptionCompletedEventHandler(object sender, GetTypeDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTypeDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTypeDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_Quarantine_DataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_QuarantinedataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void New_Quarantinedata_byDeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Restore_AirQualityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Restore_QuarantinedataCompletedEventHandler(object sender, Restore_QuarantinedataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Restore_QuarantinedataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Restore_QuarantinedataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string definitionTableName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void Delete_All_Invalid_Quarantine_DataCompletedEventHandler(object sender, Delete_All_Invalid_Quarantine_DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Delete_All_Invalid_Quarantine_DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Delete_All_Invalid_Quarantine_DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void List_Quarantine_Violating_DataCompletedEventHandler(object sender, List_Quarantine_Violating_DataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class List_Quarantine_Violating_DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal List_Quarantine_Violating_DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void SearchList_Quality_DataissuesCompletedEventHandler(object sender, SearchList_Quality_DataissuesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchList_Quality_DataissuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchList_Quality_DataissuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_QuarantineDataBySCNCompletedEventHandler(object sender, View_QuarantineDataBySCNCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_QuarantineDataBySCNCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_QuarantineDataBySCNCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    public delegate void View_QuarantineDataBySCNAndTypeCompletedEventHandler(object sender, View_QuarantineDataBySCNAndTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1098.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class View_QuarantineDataBySCNAndTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal View_QuarantineDataBySCNAndTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591